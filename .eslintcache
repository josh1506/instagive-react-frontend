[{"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\index.jsx":"1","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\app\\configStore.js":"2","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\App.jsx":"3","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\app\\reducer.js":"4","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\app\\postList.js":"5","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\app\\accounts.js":"6","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\app\\auth.js":"7","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\app\\user.js":"8","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\common\\NotFound.jsx":"9","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\detailsPage\\DetailsPage.jsx":"10","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\authPage\\AuthPage.jsx":"11","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\UserPage.jsx":"12","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\adminPage\\AdminPage.jsx":"13","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\common\\Nav.jsx":"14","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\landingPage\\LandingPage.jsx":"15","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\landingPage\\AllPostList.jsx":"16","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\route\\instagive.js":"17","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\detailsPage\\DetailsPageContent.jsx":"18","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\detailsPage\\DetailsUpdatePage.jsx":"19","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\authPage\\Register.jsx":"20","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\authPage\\Login.jsx":"21","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\authPage\\ForgotPass.jsx":"22","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\PostList.jsx":"23","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\common\\Sidebar.jsx":"24","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\adminPage\\AdminAccepted.jsx":"25","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\adminPage\\AdminPending.jsx":"26","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\adminPage\\AdminRejected.jsx":"27","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\adminPage\\AdminLogin.jsx":"28","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\ledgerPage\\LedgerPage.jsx":"29","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\postDetailPage\\UserPostDetails.jsx":"30","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\postDetailPage\\PostCreate.jsx":"31","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\changePassPage\\ChangePass.jsx":"32","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\postUpdatePage\\UpdateUserPost.jsx":"33","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\landingPage\\ShowContent.jsx":"34","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\landingPage\\Content.jsx":"35","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\landingPage\\Posts.jsx":"36","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\others\\cityLocation.js":"37","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\ledgerPage\\LedgerCreate.jsx":"38","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\ledgerPage\\LedgerList.jsx":"39","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\postUpdatePage\\PostDetailUpdate.jsx":"40","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\postUpdatePage\\PostCreateUpdate.jsx":"41","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\postDetailPage\\PostCreateDetails.jsx":"42","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\common\\PostCard.jsx":"43"},{"size":418,"mtime":1615127977598,"results":"44","hashOfConfig":"45"},{"size":181,"mtime":1615043413061,"results":"46","hashOfConfig":"45"},{"size":2086,"mtime":1615130120726,"results":"47","hashOfConfig":"45"},{"size":252,"mtime":1615043413063,"results":"48","hashOfConfig":"45"},{"size":1315,"mtime":1615043413062,"results":"49","hashOfConfig":"45"},{"size":1819,"mtime":1615043413060,"results":"50","hashOfConfig":"45"},{"size":950,"mtime":1615043413060,"results":"51","hashOfConfig":"45"},{"size":2069,"mtime":1615043413064,"results":"52","hashOfConfig":"45"},{"size":385,"mtime":1615043413065,"results":"53","hashOfConfig":"45"},{"size":1655,"mtime":1615043413074,"results":"54","hashOfConfig":"45"},{"size":1404,"mtime":1615043413072,"results":"55","hashOfConfig":"45"},{"size":1658,"mtime":1615043413081,"results":"56","hashOfConfig":"45"},{"size":2085,"mtime":1615043413071,"results":"57","hashOfConfig":"45"},{"size":4996,"mtime":1615130120727,"results":"58","hashOfConfig":"45"},{"size":355,"mtime":1615130120730,"results":"59","hashOfConfig":"45"},{"size":3950,"mtime":1615132399757,"results":"60","hashOfConfig":"45"},{"size":100,"mtime":1615043413093,"results":"61","hashOfConfig":"45"},{"size":4764,"mtime":1615133896579,"results":"62","hashOfConfig":"45"},{"size":1373,"mtime":1615093193663,"results":"63","hashOfConfig":"45"},{"size":8788,"mtime":1615043413074,"results":"64","hashOfConfig":"45"},{"size":3554,"mtime":1615210692911,"results":"65","hashOfConfig":"45"},{"size":3371,"mtime":1615207679383,"results":"66","hashOfConfig":"45"},{"size":3292,"mtime":1615200860802,"results":"67","hashOfConfig":"45"},{"size":508,"mtime":1615043413066,"results":"68","hashOfConfig":"45"},{"size":3054,"mtime":1615043413070,"results":"69","hashOfConfig":"45"},{"size":3056,"mtime":1615043413071,"results":"70","hashOfConfig":"45"},{"size":1526,"mtime":1615043413072,"results":"71","hashOfConfig":"45"},{"size":2819,"mtime":1615131885970,"results":"72","hashOfConfig":"45"},{"size":534,"mtime":1615043413084,"results":"73","hashOfConfig":"45"},{"size":12903,"mtime":1615200275853,"results":"74","hashOfConfig":"45"},{"size":504,"mtime":1615043413085,"results":"75","hashOfConfig":"45"},{"size":4044,"mtime":1615132128407,"results":"76","hashOfConfig":"45"},{"size":544,"mtime":1615043413088,"results":"77","hashOfConfig":"45"},{"size":1054,"mtime":1615132462121,"results":"78","hashOfConfig":"45"},{"size":1184,"mtime":1615130120729,"results":"79","hashOfConfig":"45"},{"size":785,"mtime":1615130120730,"results":"80","hashOfConfig":"45"},{"size":418,"mtime":1615043413069,"results":"81","hashOfConfig":"45"},{"size":4755,"mtime":1615192601748,"results":"82","hashOfConfig":"45"},{"size":10383,"mtime":1615194189021,"results":"83","hashOfConfig":"45"},{"size":301,"mtime":1615043413088,"results":"84","hashOfConfig":"45"},{"size":455,"mtime":1615043413087,"results":"85","hashOfConfig":"45"},{"size":7692,"mtime":1615200319019,"results":"86","hashOfConfig":"45"},{"size":2961,"mtime":1615200767541,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"w933ur",{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"90"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"90"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"90"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"90"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"90"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"90"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"90"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"90"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"90"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"90"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"90"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"90"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"90"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"90"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"90"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"90"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"90"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"90"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"90"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\index.jsx",[],["194","195"],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\app\\configStore.js",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\App.jsx",["196","197"],"import React, { useEffect, useState } from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux'\r\n\r\nimport { postListFeched } from './app/postList'\r\nimport { accountFetched } from './app/accounts'\r\nimport { authAdd } from './app/auth'\r\nimport Nav from './components/common/Nav';\r\nimport LandingPage from './components/pages/landingPage/LandingPage';\r\nimport DetailsPage from './components/pages/detailsPage/DetailsPage';\r\nimport AuthPage from './components/pages/authPage/AuthPage';\r\nimport UserPage from './components/pages/userPage/UserPage';\r\nimport AdminPage from './components/pages/adminPage/AdminPage';\r\nimport NotFound from './components/common/NotFound';\r\nimport './App.css';\r\nimport AllPostList from './components/pages/landingPage/AllPostList';\r\n\r\n\r\nfunction App(props) {\r\n\r\n  useEffect(() => {\r\n    const getAllData = async () => {\r\n      props.accountFetched()\r\n      props.postListFeched()\r\n    };\r\n\r\n    const validateAuthID = async () => {\r\n      // Validating if token is valid\r\n      // await axios.post('/checkusertoken', token)\r\n\r\n      props.authAdd(token, type)\r\n    }\r\n\r\n    // check if there's a user in local storage\r\n    const token = localStorage.getItem('user') || localStorage.getItem('admin')\r\n    const type = localStorage.key(token)\r\n\r\n    validateAuthID()\r\n    getAllData();\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <div className='App'>\r\n      <Nav />\r\n      <Switch>\r\n        <Route path='/post-list' component={AllPostList} />\r\n        <Route path='/details/:id' component={DetailsPage} />\r\n        <Route path='/auth' component={AuthPage} />\r\n        <Route path='/user' component={UserPage} />\r\n        <Route path='/not-found' component={NotFound} />\r\n        <Route path='/admin' component={AdminPage} />\r\n        <Route path='/' exact component={LandingPage} />\r\n        <Redirect to='/not-found' />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return { state }\r\n}\r\n\r\nexport default connect(mapStateToProps,\r\n  { authAdd, postListFeched, accountFetched })(App);\r\n","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\app\\reducer.js",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\app\\postList.js",["198","199","200","201"],"import route from '../route/instagive'\r\n\r\n// Action Type\r\nconst POST_LIST_FECHED = 'postListFeched'\r\nconst POST_LIST_ADDED = 'postListAdded'\r\nconst POST_LIST_REMOVED = 'postListRemoved'\r\nconst POST_LIST_UPDATED = 'postListUpdated'\r\n\r\n\r\n// Action\r\nexport const postListFeched = () => async dispatch => {\r\n    const {data} = await route.get('/landing')\r\n    dispatch({\r\n        type: POST_LIST_FECHED,\r\n        payload: data\r\n    })\r\n}\r\n\r\nconst postListAdded = (post) => {\r\n    return {\r\n        type: POST_LIST_ADDED,\r\n        payload: post\r\n    }\r\n}\r\n\r\nconst postListRemoved = (id) => {\r\n    return {\r\n        type: POST_LIST_REMOVED,\r\n        payload: {id}\r\n    }\r\n}\r\n\r\nconst postListUpdated = (post) => {\r\n    return {\r\n        type: POST_LIST_UPDATED,\r\n        payload: post\r\n    }\r\n}\r\n\r\n\r\n\r\n// Reducer\r\nexport default (state=[], action) => {\r\n    switch (action.type) {\r\n        case POST_LIST_FECHED:\r\n            return action.payload\r\n    \r\n        case POST_LIST_REMOVED:\r\n            return state.filter(post => \r\n                post._id !== action.payload.id)\r\n    \r\n        case POST_LIST_UPDATED:\r\n            return state.map(post =>\r\n                post._id === action.payload.id ?\r\n                action.payload :\r\n                post)\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\app\\accounts.js",["202"],"import route from '../route/instagive'\r\n\r\n// Action Type\r\nconst ACCOUNT_FETCHED = 'accountFetched'\r\nconst ACCOUNT_APPROVED = 'accountApproved'\r\nconst ACCOUNT_REJECTED = 'accountRejected'\r\n\r\n\r\n// Actions\r\nconst accountFetched = () => async dispatch => {\r\n    const {data} = await route.get('/admin/getusers')\r\n\r\n    dispatch({\r\n        type:ACCOUNT_FETCHED,\r\n        payload: data\r\n    })\r\n}\r\n\r\nconst accountApproved = account => async dispatch => {\r\n    await route.post(`/admin/changestatus/${account._id}/approved`)\r\n    dispatch({\r\n        type:ACCOUNT_APPROVED,\r\n        payload: account\r\n    })\r\n}\r\n\r\nconst accountRejected = account => async dispatch => {\r\n    await route.post(`/admin/changestatus/${account._id}/rejected`)\r\n    dispatch({\r\n        type:ACCOUNT_REJECTED,\r\n        payload: account\r\n    })\r\n}\r\n\r\n\r\nconst accountList = {\r\n    pending: [],\r\n    approved: [],\r\n    rejected: []\r\n}\r\n// Reducer\r\nexport default (state=accountList, action) => {\r\n    switch (action.type) {\r\n        case ACCOUNT_FETCHED:\r\n            return action.payload\r\n    \r\n        case ACCOUNT_APPROVED:\r\n            return {\r\n                ...state,\r\n                pending: state.pending.filter(account => account._id !== action.payload._id),\r\n                approved: [...state.approved, action.payload]\r\n            }\r\n        \r\n        case ACCOUNT_REJECTED:\r\n            return {\r\n                ...state,\r\n                pending: state.pending.filter(account => account._id !== action.payload._id),\r\n                approved: state.approved.filter(account => account._id !== action.payload._id),\r\n                rejected: [...state.approved, action.payload]\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\nexport {\r\n    accountFetched,\r\n    accountApproved,\r\n    accountRejected\r\n}","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\app\\auth.js",["203"],"// Action Type\r\nconst AUTH_ADDED = 'authAdded'\r\nconst AUTH_REMOVED = 'authRemoved'\r\n\r\n// Actions\r\nconst authAdd = (token, type) => {\r\n    return {\r\n        type: AUTH_ADDED,\r\n        payload: {\r\n            token,\r\n            type\r\n        }\r\n    }\r\n}\r\n\r\nconst authRemove = () => {\r\n    return {\r\n        type: AUTH_REMOVED,\r\n        payload: {\r\n            token: '',\r\n            type: ''\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// Data\r\nconst authData = {\r\n    token: '',\r\n    type: ''\r\n}\r\n\r\n\r\n// Reducer\r\nexport default (auth=authData, action) => {\r\n    switch (action.type) {\r\n        case AUTH_ADDED:\r\n            return {\r\n                token: action.payload.token,\r\n                type: action.payload.type\r\n            }\r\n        \r\n        case AUTH_REMOVED:\r\n            return {\r\n                token: '',\r\n                type: ''\r\n            }\r\n\r\n        default:\r\n            return auth\r\n    }\r\n}\r\n\r\n\r\nexport {\r\n    authAdd,\r\n    authRemove\r\n}","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\app\\user.js",["204","205"],"import route from '../route/instagive'\r\n\r\n// Action Types\r\nconst USER_DATA_FETCH = 'userDataFetch'\r\nconst USER_LEDGER_ADDED = 'userLedgerAdded'\r\nconst USER_LEDGER_REMOVED = 'userLedgerRemoved'\r\nconst USER_LEDGER_UPDATED = 'userLedgerUpdated'\r\n\r\nconst USER_POST_FETCH = 'userPostFetch'\r\nconst USER_POST_ADDED = 'userPostAdded'\r\nconst USER_POST_REMOVED = 'userPostRemoved'\r\nconst USER_POST_UPDATED = 'userPostUpdated'\r\n\r\n\r\n// Action\r\n// Ledger\r\nconst userDataFetch = (token) => async dispatch => {\r\n    const { data: ledger } = await route.post('/ledger/getall', {token})\r\n    const { data: post } = await route.post('/post/userpost', { token })\r\n\r\n    dispatch({\r\n        type: USER_DATA_FETCH,\r\n        payload: {ledger, post} \r\n    })\r\n}\r\n\r\n\r\nconst userLedgerAdded = (ledgerForm, token) => async dispatch => {\r\n    await route.post(`/ledger/${ledgerForm.postId}`, {...ledgerForm, token})\r\n    \r\n    dispatch({\r\n        type: USER_LEDGER_ADDED,\r\n        payload: ledgerForm\r\n    })\r\n}\r\n\r\n\r\n// Post\r\n\r\n\r\n// Data\r\nconst userData = {\r\n    ledger: [],\r\n    post: []\r\n}\r\n\r\n\r\n// Reducer\r\nexport default (state=userData, action) => {\r\n    switch (action.type) {\r\n        case USER_DATA_FETCH:\r\n            return action.payload\r\n    \r\n        case USER_LEDGER_ADDED:\r\n            return {...state, ledger: [...state.ledger, action.payload]}\r\n    \r\n        case USER_LEDGER_REMOVED:\r\n            return {\r\n                ...state,\r\n                ledger: state.ledger.filter(ledger => ledger._id !== action.payload._id)\r\n            }\r\n    \r\n        case USER_LEDGER_UPDATED:\r\n            return state\r\n    \r\n        case USER_POST_ADDED:\r\n            return {...state, post: [...state.post, action.payload]}\r\n    \r\n        case USER_POST_REMOVED:\r\n            return {\r\n                ...state,\r\n                post: state.post.filter(post => post._id !== action.payload._id)\r\n            }\r\n    \r\n        case USER_POST_UPDATED:\r\n            return state\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport {\r\n    userDataFetch,\r\n    userLedgerAdded\r\n}","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\common\\NotFound.jsx",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\detailsPage\\DetailsPage.jsx",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\authPage\\AuthPage.jsx",["206","207","208"],"import React, { useEffect, useState } from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport Login from './Login';\r\nimport Register from './Register';\r\nimport ForgotPass from './ForgotPass';\r\nimport '../../../style/authPage/authPage.css'\r\n\r\nfunction AuthPage(props) {\r\n    const [userAuthID, setUserAuthID] = useState()\r\n\r\n    useEffect(() => {\r\n        // check if there's a user in coockies\r\n        const userAuthID = localStorage.getItem('user')\r\n\r\n        const validateAuthID = async () => {\r\n            // Same logic for user login\r\n            if (userAuthID) props.history.replace('/user')\r\n        }\r\n\r\n        validateAuthID()\r\n    }, [])\r\n\r\n    return (\r\n        <div className='auth-container'>\r\n            <div className='authBackgroundImage'>\r\n            </div>\r\n            <div className='authForm'>\r\n                <div className='center'>\r\n                    <Switch>\r\n                        <Route path='/auth/login' component={Login} />\r\n                        <Route path='/auth/register' component={Register} />\r\n                        <Route path='/auth/forgot' component={ForgotPass} />\r\n                        <Redirect from='/auth' to='/auth/login' exact />\r\n                        <Redirect to='/not-found' />\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AuthPage;","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\UserPage.jsx",["209"],"import React, { useEffect } from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nimport PostList from './PostList';\r\nimport LedgerPage from './ledgerPage/LedgerPage';\r\nimport PostCreate from './postDetailPage/PostCreate';\r\nimport UserPostDetails from './postDetailPage/UserPostDetails';\r\nimport ChangePass from './changePassPage/ChangePass';\r\nimport UpdateUserPost from './postUpdatePage/UpdateUserPost';\r\nimport { authRemove } from '../../../app/auth'\r\nimport { userDataFetch } from '../../../app/user'\r\n\r\nfunction UserPage(props) {\r\n    useEffect(() => {\r\n        if (!localStorage.getItem('user')) return props.history.push('/auth')\r\n        if (props.auth.token) {\r\n            props.userDataFetch(props.auth.token)\r\n        }\r\n\r\n    }, [props.auth.token])\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Switch>\r\n                    <Route path='/user/change-password' component={ChangePass} />\r\n                    <Route path='/user/post-create' component={PostCreate} />\r\n                    <Route path='/user/post-details/:id' component={UserPostDetails} />\r\n                    <Route path='/user/ledger' component={LedgerPage} />\r\n                    <Route path='/user/update-details/:id' component={UpdateUserPost} />\r\n                    <Route path='/user/' exact component={PostList} />\r\n                    <Redirect to='/not-found' />\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return state\r\n}\r\n\r\nexport default connect(mapStateToProps, { authRemove, userDataFetch })(UserPage);","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\adminPage\\AdminPage.jsx",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\common\\Nav.jsx",["210"],"import React from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\n\r\nimport { authRemove } from '../../app/auth'\r\nimport logo from '../../img/Instagive-logo-2.png'\r\nimport '../../style/common/Nav.css'\r\n\r\nfunction Nav(props) {\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n\r\n    const handleMenu = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <nav className=\"navBar\">\r\n            <span>\r\n                <Link to=\"/\" className='navLogo'>\r\n                    <img src={logo} alt=\"logo\" height='45px' className='logo' style={{ marginRight: 10 }} />\r\n                    <p className='navLogoName'>InstaGive</p>\r\n                </Link>\r\n                <span>\r\n                    {/* Other nav links */}\r\n                </span>\r\n            </span>\r\n            <span className='navLogin'>\r\n                {props.auth.token ?\r\n                    <span>\r\n                        {props.auth.type === 'user' ?\r\n                            <span>\r\n                                <div>\r\n                                    <IconButton\r\n                                        aria-label=\"account of current user\"\r\n                                        aria-controls=\"menu-appbar\"\r\n                                        aria-haspopup=\"true\"\r\n                                        onClick={handleMenu}\r\n                                        color=\"inherit\"\r\n                                    >\r\n                                        <AccountCircle fontSize='large' />\r\n                                    </IconButton>\r\n                                    <Menu\r\n                                        id=\"menu-appbar\"\r\n                                        anchorEl={anchorEl}\r\n                                        anchorOrigin={{\r\n                                            vertical: 'top',\r\n                                            horizontal: 'right',\r\n                                        }}\r\n                                        keepMounted\r\n                                        transformOrigin={{\r\n                                            vertical: 'top',\r\n                                            horizontal: 'right',\r\n                                        }}\r\n                                        open={open}\r\n                                        onClose={handleClose}\r\n                                    >\r\n                                        <MenuItem>\r\n                                            <NavLink to=\"/user/ledger\" className='navLink'>Ledger</NavLink>\r\n                                        </MenuItem>\r\n                                        <MenuItem>\r\n                                            <NavLink to=\"/user\" className='navLink'>Dashboard</NavLink>\r\n                                        </MenuItem>\r\n                                        <MenuItem>\r\n                                            <NavLink to=\"/user/change-password\" className='navLink'>ChangePassword</NavLink>\r\n                                        </MenuItem>\r\n                                        <MenuItem>\r\n                                            <NavLink to='/' className='navLink' onClick={() => {\r\n                                                localStorage.removeItem('user')\r\n                                                localStorage.removeItem('admin')\r\n                                                props.authRemove()\r\n                                            }}>Logout</NavLink>\r\n                                        </MenuItem>\r\n                                    </Menu>\r\n                                </div>\r\n                            </span> :\r\n                            <NavLink to='/' className='navLink' onClick={() => {\r\n                                localStorage.removeItem('user')\r\n                                localStorage.removeItem('admin')\r\n                                props.authRemove()\r\n                            }}>Logout</NavLink>\r\n                        }\r\n                    </span> :\r\n                    <span>\r\n                        <NavLink to=\"/auth/register\" className='navLink'>Signup</NavLink>\r\n                        |\r\n                        <NavLink to=\"/auth/login\" className='navLink'>Login</NavLink>\r\n                    </span>\r\n                }\r\n            </span>\r\n        </nav>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    console.log(state);\r\n    return { auth: state.auth }\r\n}\r\n\r\nexport default connect(mapStateToProps, { authRemove })(Nav);","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\landingPage\\LandingPage.jsx",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\landingPage\\AllPostList.jsx",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\route\\instagive.js",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\detailsPage\\DetailsPageContent.jsx",["211","212","213"],"import React, {useState} from 'react';\r\nimport '../../../style/detailsPage/detailsPageContent.css'\r\nimport banner1 from '../../../img/Landscape-Color.jpg'\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport axios from 'axios'\r\n\r\n\r\n\r\n\r\nfunction DetailsPageContent(props) {\r\n  \r\n  \r\n  const [donateForm, setDonateForm] = useState({\r\n    \r\n    name: '',\r\n    amount: '',\r\n    message: '',\r\n    email: '',\r\n    \r\n    \r\n    \r\n  })\r\n  const [hasAmount , setHasAmount] = useState (false)\r\n  \r\n  \r\n  const [openModal, setModal] = useState(false);\r\n  \r\n    const handleClickOpen = () => {\r\n        setModal(true);\r\n      };\r\n    \r\n      const handleClose = () => {\r\n        setHasAmount(false)\r\n        setModal(false);\r\n      };\r\n    \r\n  \r\n      const handleSubmit = async () => {\r\n\r\n        if(donateForm.amount === '') return setHasAmount(true);\r\n\r\nelse await axios.post(`http://localhost:5000/donate/${props.match.params.id}`, donateForm)\r\n\r\n\r\n      }\r\n\r\n\r\n\r\n  \r\n    if (!props.onSelectedPost) return <div>Loading</div>\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img src={`/docs/${props.onSelectedPost.profilePic}`} alt=\"Photo\" className='detailsPageImage' />\r\n            </div>\r\n            {props.children}\r\n            <p className='donationContent'>\r\n                {props.onSelectedPost ? props.onSelectedPost.description : ''}\r\n            </p>\r\n           \r\n            <div>\r\n                {props.onSelectedPost.imageList.map(imageName => \r\n                    \r\n                    \r\n                    <img src={`/docs/${imageName}`}  alt=\"Photo\" className='detailsPageImage' />\r\n\r\n                    \r\n                    \r\n                    )}\r\n           \r\n                    </div>\r\n           \r\n           \r\n            <div className='donateNowContainer'>\r\n                <button className='donate-button' onClick={handleClickOpen}>Donate Now</button>\r\n            </div>\r\n       \r\n            <Dialog open={openModal} onClose={handleClose} aria-labelledby=\"form-dialog-title\" maxWidth='sm' fullWidth='true'>\r\n        <DialogTitle id=\"form-dialog-title\"  style={{alignSelf: 'center', fontSize: '50px'}}>Donate</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Please Fill the Inputs Bellow: \r\n          </DialogContentText>\r\n       \r\n       \r\n       \r\n          <TextField\r\n          variant=\"outlined\"\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Name (Leave Blank for Anonymous Donation)\"\r\n            type=\"text\"\r\n            fullWidth\r\n            onChange={(e) =>\r\n                setDonateForm({ ...donateForm, name: e.target.value })\r\n              }\r\n          />\r\n       \r\n\r\n\r\n    {hasAmount && <h4 style={{color: 'red', marginLeft:'2px'}}>Amount is required</h4>}\r\n       <TextField\r\n          variant=\"outlined\"\r\n            margin=\"dense\"\r\n            id=\"amount\"\r\n            label=\"Enter Amount: (Required) \"\r\n            required='true'\r\n            type=\"number\"\r\n            fullWidth\r\n            onChange={(e) =>\r\n                setDonateForm({ ...donateForm, amount: e.target.value })\r\n              }\r\n          />\r\n       \r\n\r\n\r\n\r\n       <TextField\r\n        \r\n          variant=\"outlined\"\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"email\"\r\n            label=\"Email (Optional, For Sending the Certificate)\"\r\n            type=\"email\"\r\n            fullWidth\r\n            onChange={(e) =>\r\n                setDonateForm({ ...donateForm, email: e.target.value })\r\n              }\r\n          />\r\n       \r\n       <TextField\r\n          variant=\"outlined\"\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"outlined-multiline-static\"\r\n            label=\"Message\"\r\n            rows={4}\r\n            type=\"text\"\r\n            multiline\r\n            fullWidth\r\n            onChange={(e) =>\r\n                setDonateForm({ ...donateForm, message: e.target.value })\r\n              }\r\n          />\r\n       \r\n       \r\n       \r\n\r\n\r\n       \r\n       \r\n       \r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleSubmit} color=\"primary\">\r\n            Donate\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n   \r\n       \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DetailsPageContent;","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\detailsPage\\DetailsUpdatePage.jsx",["214","215","216"],"import axios from 'axios';\r\nimport React, { useState, useEffect } from 'react';\r\nimport '../../../style/detailsPage/detailsUpdatePage.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction DetailsUpdatePage(props) {\r\n    const [updates, setPosts] = useState([])\r\n\r\n\r\n    \r\n    useEffect(() => {\r\n        // Update the document title using the browser API\r\n   \r\n        const fetchUpdates = async () => {\r\n\r\n            await axios.post(`http://localhost:5000/updates/getall/${props.match.params.id}`, {token: localStorage.getItem('user')}).then(data => setPosts(data.data))\r\n\r\n        }\r\n        \r\n        fetchUpdates()\r\n        console.log(updates)\r\n      },[]);\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n                \r\n          \r\n            {/* {props.children}\r\n            <div className=\"update-container\">\r\n                {updates.map(update =>\r\n                    <div key={update.id}>\r\n                        <h3 className='update-title'>{update.title} - {update.date}</h3>\r\n                        <p className='update-details'>{update.details}</p>\r\n                        <img src={update.img} alt=\"carousel\" />\r\n                    </div>\r\n                )}\r\n            </div> */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DetailsUpdatePage;","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\authPage\\Register.jsx",["217"],"import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport '../../../style/authPage/register.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Register(props) {\r\n  const [checkPassword, setCheckPassword] = useState({ confirm_pass: '' });\r\n  const [userForm, setUserForm] = useState({\r\n    email: '',\r\n    password: '',\r\n    city: '',\r\n    orgName: '',\r\n    orgAddress: '',\r\n\r\n    orgNumber: '',\r\n    repName: '',\r\n\r\n    orgDescriptions: '',\r\n  });\r\n\r\n  const [files, setFiles] = useState({\r\n    orgPhoto: '',\r\n    orgDocuments: '',\r\n    repId: '',\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    console.log(event.target.value);\r\n\r\n    setUserForm({\r\n      ...userForm,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handlerepId = (file) => {\r\n    setFiles({ ...files, repId: file });\r\n  };\r\n\r\n  const handleorgPhoto = (file) => {\r\n    setFiles({ ...files, orgPhoto: file });\r\n  };\r\n\r\n  const handleorgDocuments = (multifiles) => {\r\n    setFiles({ ...files, orgDocuments: multifiles });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const formdata = new FormData();\r\n\r\n    formdata.append('repId', files.repId);\r\n    formdata.append('orgPhoto', files.orgPhoto);\r\n\r\n    for (const key in files.orgDocuments) {\r\n      formdata.append('orgDocuments', files.orgDocuments[key]);\r\n    }\r\n\r\n    formdata.append('email', userForm.email);\r\n    formdata.append('city', userForm.city);\r\n    formdata.append('password', userForm.password);\r\n\r\n    formdata.append('orgName', userForm.orgName);\r\n    formdata.append('orgAddress', userForm.orgAddress);\r\n    formdata.append('orgNumber', userForm.orgNumber);\r\n    formdata.append('repName', userForm.repName);\r\n    formdata.append('orgDescriptions', userForm.orgDescriptions);\r\n\r\n    const data = await axios.post('http://localhost:5000/user/register', formdata);\r\n    console.log(data)\r\n\r\n    setUserForm({\r\n      email: '',\r\n      password: '',\r\n      city: '',\r\n      orgName: '',\r\n      orgAddress: '',\r\n      orgPhoto: '',\r\n      orgNumber: '',\r\n      repName: '',\r\n      repId: '',\r\n      orgDocuments: [],\r\n      orgDescriptions: ''\r\n    })\r\n\r\n    setFiles({\r\n      orgPhoto: '',\r\n      orgDocuments: '',\r\n      repId: '',\r\n    })\r\n\r\n\r\n    document.getElementById('repId').value = null;\r\n    document.getElementById('orgDocuments').value = null;\r\n    document.getElementById('orgPhoto').value = null;\r\n\r\n\r\n\r\n\r\n  };\r\n\r\n  return (\r\n    <div className='register-container'>\r\n      <div>\r\n        <h1 className='authTitle'>Account Details</h1>\r\n      </div>\r\n      <form encType='multipart/form-data' action='' onSubmit={handleSubmit}>\r\n        <div className='register-form1'>\r\n          <div className='register-input-container1'>\r\n            <label className='form-label' htmlFor='email'>\r\n              Email\r\n            </label>\r\n            <input\r\n              type='text'\r\n              name='email'\r\n              id='email'\r\n              value={userForm.email}\r\n              placeholder='Email'\r\n              className='register-form-input-text'\r\n              onChange={handleChange}\r\n            />\r\n            <label className='form-label' htmlFor='password'>\r\n              Password\r\n            </label>\r\n            <input\r\n              type='text'\r\n              name='password'\r\n              id='password'\r\n              value={userForm.password}\r\n              placeholder='Password'\r\n              className='register-form-input-text'\r\n              onChange={handleChange}\r\n            />\r\n            <label className='form-label' htmlFor='confirm-pass'>\r\n              Confirm Password\r\n            </label>\r\n            <input\r\n              type='text'\r\n              name='confirm-pass'\r\n              id='confirm-pass'\r\n              placeholder='confirm Password'\r\n              className='register-form-input-text'\r\n              onChange={(e) => setCheckPassword(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className='register-form2'>\r\n          <div className='register-input-container2'>\r\n            <label className='form-label' htmlFor='orgName'>\r\n              Organization Name\r\n            </label>\r\n            <input\r\n              type='text'\r\n              name='orgName'\r\n              value={userForm.orgName}\r\n              onChange={handleChange}\r\n              id='orgName'\r\n              placeholder='Organization Name'\r\n              className='register-form-input-text'\r\n            />\r\n          </div>\r\n          <div className='register-input-container2'>\r\n            <label className='form-label' htmlFor='orgNumber'>\r\n              Organization No.\r\n            </label>\r\n            <input\r\n              type='text'\r\n              name='orgNumber'\r\n              value={userForm.orgNumber}\r\n              onChange={handleChange}\r\n              id='orgNumber'\r\n              placeholder='Organization No.'\r\n              className='register-form-input-text'\r\n            />\r\n          </div>\r\n          <div className='register-input-container2'>\r\n            <label className='form-label' htmlFor='city'>\r\n              City\r\n            </label>\r\n            <input\r\n              type='text'\r\n              name='city'\r\n              value={userForm.city}\r\n              onChange={handleChange}\r\n              id='city'\r\n              placeholder='City'\r\n              className='register-form-input-text'\r\n            />\r\n          </div>\r\n          <div className='register-input-container2'>\r\n            <label className='form-label' htmlFor='orgAddress'>\r\n              Organization Address\r\n            </label>\r\n            <input\r\n              type='text'\r\n              name='orgAddress'\r\n              value={userForm.orgAddress}\r\n              onChange={handleChange}\r\n              id='orgAddress'\r\n              placeholder='Organization Address'\r\n              className='register-form-input-text'\r\n            />\r\n          </div>\r\n          <div className='register-input-container2'>\r\n            <label className='form-label' htmlFor='repName'>\r\n              Representative Name\r\n            </label>\r\n            <input\r\n              type='text'\r\n              name='repName'\r\n              value={userForm.repName}\r\n              onChange={handleChange}\r\n              id='repName'\r\n              placeholder='Representative Name'\r\n              className='register-form-input-text'\r\n            />\r\n          </div>\r\n\r\n          <div className='register-input-container2'>\r\n            <label className='form-label' htmlFor='repId'>\r\n              Representative ID\r\n            </label>\r\n            <input\r\n              type='file'\r\n              id='repId'\r\n              name='repId'\r\n              onChange={(e) => {\r\n                const file = e.target.files[0];\r\n                handlerepId(file);\r\n              }}\r\n              className='form-input-file'\r\n            ></input>\r\n          </div>\r\n\r\n          <div className='register-input-container2'>\r\n            <label className='form-label' htmlFor='orgDocuments'>\r\n              Organization Documents\r\n            </label>\r\n            <input\r\n              type='file'\r\n              id='orgDocuments'\r\n              name='orgDocuments'\r\n              onChange={(e) => {\r\n                const multifiles = e.target.files;\r\n                handleorgDocuments(multifiles);\r\n              }}\r\n              multiple\r\n              className='form-input-file'\r\n            ></input>\r\n          </div>\r\n          <div className='register-input-container2'>\r\n            <label className='org-photo' htmlFor='orgPhoto'>\r\n              Organization Photo\r\n            </label>\r\n            <input\r\n              type='file'\r\n              id='orgPhoto'\r\n              name='orgPhoto'\r\n              onChange={(e) => {\r\n                const file = e.target.files[0];\r\n                handleorgPhoto(file);\r\n              }}\r\n              className='form-input-file'\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className='register-org-description-container'>\r\n          <label className='org-photo' htmlFor='orgDescriptions'>\r\n            Organization Description\r\n          </label>\r\n          <textarea\r\n            name='orgDescriptions'\r\n            value={userForm.orgDescriptions}\r\n            onChange={handleChange}\r\n            id='orgDescriptions'\r\n            className='register-form-input-text'\r\n          ></textarea>\r\n        </div>\r\n        <div className='form-button-container'>\r\n          <Link to='/auth/login' className='form-link'>\r\n            Cancel\r\n          </Link>\r\n          <button className='form-button'>Send Registration</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\authPage\\Login.jsx",["218","219","220"],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\authPage\\ForgotPass.jsx",["221"],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\PostList.jsx",["222","223"],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\common\\Sidebar.jsx",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\adminPage\\AdminAccepted.jsx",["224","225"],"import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faEdit, faTrash } from '@fortawesome/free-solid-svg-icons'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { accountRejected } from '../../../app/accounts'\r\n\r\nfunction AdminAccepted(props) {\r\n    const theadData = [\r\n        {\r\n            label: 'Organization',\r\n            name: 'orgName'\r\n        },\r\n        {\r\n            label: 'Email',\r\n            name: 'email'\r\n        },\r\n        {\r\n            label: 'City',\r\n            name: 'city'\r\n        },\r\n        {\r\n            label: 'Rep. Name',\r\n            name: 'repName'\r\n        },\r\n    ]\r\n\r\n    const handleEditButton = (account) => {\r\n        console.log(account);\r\n    }\r\n\r\n    const handleDeleteButton = async (account) => {\r\n        props.accountRejected(account)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1 className='admin-page-title'>Accepted</h1>\r\n            <table className='table-container'>\r\n                <thead>\r\n                    <tr>\r\n                        {theadData.map(tableHead =>\r\n                            <th key={tableHead.name} className='table-header'>{tableHead.label}</th>\r\n                        )}\r\n                        <th className='table-header'>No. of Post</th>\r\n                        <th className='table-header'>Status</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {props.accApproved.map(account =>\r\n                        <tr key={account._id}>\r\n                            {theadData.map(tableHead =>\r\n                                <td key={tableHead.name} className='table-item'>\r\n                                    {account[tableHead.name]}</td>\r\n                            )}\r\n                            <td className='table-item'>\r\n\r\n                            </td>\r\n                            <td className='table-item'>\r\n                                {/* <FontAwesomeIcon\r\n                                    icon={faEdit}\r\n                                    className='table-icon'\r\n                                    size='lg'\r\n                                    onClick={e => handleEditButton(account)}\r\n                                    style={{ cursor: 'pointer' }}\r\n                                /> */}\r\n                                <FontAwesomeIcon\r\n                                    icon={faTrash}\r\n                                    className='table-icon'\r\n                                    size='lg'\r\n                                    onClick={e => handleDeleteButton(account)}\r\n                                    style={{ cursor: 'pointer' }}\r\n                                />\r\n                            </td>\r\n                        </tr>\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return { accApproved: state.accounts.approved }\r\n}\r\n\r\nexport default connect(mapStateToProps, { accountRejected })(AdminAccepted);","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\adminPage\\AdminPending.jsx",["226"],"import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCheck, faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport axios from 'axios'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { accountApproved, accountRejected } from '../../../app/accounts'\r\n\r\n\r\nfunction AdminPending(props) {\r\n\r\n    const theadData = [\r\n        {\r\n            label: 'Organization',\r\n            name: 'orgName'\r\n        },\r\n        {\r\n            label: 'Email',\r\n            name: 'email'\r\n        },\r\n        {\r\n            label: 'City',\r\n            name: 'city'\r\n        },\r\n        {\r\n            label: 'Rep. Name',\r\n            name: 'repName'\r\n        },\r\n    ]\r\n\r\n    const handleApproveAccount = async (account) => {\r\n        // await axios.post(`http://localhost:5000/admin/changestatus/${account}/approved`)\r\n        //     .then(() => accountList = [])\r\n        props.accountApproved(account)\r\n        // window.location.reload();\r\n    };\r\n\r\n    const handleRejectAccount = async (account) => {\r\n        props.accountRejected(account)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1 className='admin-page-title'>Pending</h1>\r\n            <table className='table-container'>\r\n                <thead>\r\n                    <tr>\r\n                        {theadData.map(tableHead =>\r\n                            <th key={tableHead.name} className='table-header'>{tableHead.label}</th>\r\n                        )}\r\n                        <th>Status</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {props.accountPending.map(account =>\r\n                        <tr key={account._id}>\r\n                            {theadData.map(tableHead =>\r\n                                <td key={tableHead.name} className='table-item'>\r\n                                    {account[tableHead.name]}\r\n                                </td>\r\n                            )}\r\n                            <td className='table-item' id='table-button-container'>\r\n                                <FontAwesomeIcon\r\n                                    icon={faCheck}\r\n                                    className='table-icon'\r\n                                    size='lg'\r\n                                    onClick={() => handleApproveAccount(account)}\r\n                                />\r\n                                <FontAwesomeIcon\r\n                                    icon={faTimes}\r\n                                    className='table-icon'\r\n                                    size='lg'\r\n                                    onClick={() => handleRejectAccount(account)}\r\n                                />\r\n                            </td>\r\n                        </tr>\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return { accountPending: state.accounts.pending }\r\n}\r\nexport default connect(mapStateToProps, { accountApproved, accountRejected })(AdminPending);","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\adminPage\\AdminRejected.jsx",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\adminPage\\AdminLogin.jsx",["227","228"],"import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport {Container, TextField,  Typography,  CssBaseline, Button} from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nfunction AdminLogin(props) {\r\n    const [auth, setAuth] = useState({ username: '', password: '' })\r\n\r\n    const handleSubmit = async event => {\r\n        event.preventDefault()\r\n\r\n        const valid = await axios.post('http://localhost:5000/admin/login', auth);\r\n      \r\n        if (valid.data.valid !== true) \r\n            window.alert(valid.data.valid);\r\n    \r\n        else{\r\n\r\n\r\n            console.log(valid.data.token);\r\n      localStorage.setItem('admin', valid.data.token)\r\n      window.location.reload();\r\n\r\n      window.alert('Login Success');\r\n\r\n        }\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        paper: {\r\n          marginTop: theme.spacing(8),\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          alignItems: 'center',\r\n          justifyContent: 'center'\r\n        },\r\n        avatar: {\r\n          margin: theme.spacing(1),\r\n          backgroundColor: theme.palette.secondary.main,\r\n        },\r\n        form: {\r\n          width: '100%', \r\n          marginTop: theme.spacing(1),\r\n        },\r\n        submit: {\r\n          margin: theme.spacing(3, 0, 2),\r\n        },\r\n      }));\r\n    \r\n    \r\n    \r\n      const classes = useStyles();\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    return (\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        \r\n        <Container component=\"main\" maxWidth=\"sm\" >\r\n\r\n\r\n\r\n\r\n<CssBaseline/>\r\n\r\n\r\n\r\n\r\n  <div className={classes.paper}>\r\n   \r\n  \r\n\r\n            <div style={{padding: '5px 25px 50px 25px'}} className=\"shadow-container\">\r\n                <h1 style={{position:'relative', left:'30%'}} className='authTitle'>Admin Login</h1>\r\n          \r\n            \r\n          \r\n            <form action=\"#\" className='form-container' >\r\n                <TextField style={{marginBottom: '12px'}}variant=\"outlined\" type=\"text\" name=\"username\" id=\"username\" label='Enter Username: ' className='form-input-text' value={auth.username} onChange={e => setAuth({ ...auth, username: e.target.value })} />\r\n                <TextField style={{marginBottom: '12px'}} variant=\"outlined\" type=\"password\" name=\"password\" id=\"password\" label='Enter Password' className='form-input-text' value={auth.password} onChange={e => setAuth({ ...auth, password: e.target.value })} />\r\n              \r\n              \r\n              \r\n              \r\n              \r\n                    <Button variant=\"contained\" color=\"primary\"  onClick={handleSubmit} fullWidth>Login</Button>\r\n            </form>\r\n            </div>\r\n            </div>\r\n            </Container>\r\n            \r\n    );\r\n}\r\n\r\nexport default AdminLogin;","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\ledgerPage\\LedgerPage.jsx",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\postDetailPage\\UserPostDetails.jsx",["229","230","231","232","233","234"],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\postDetailPage\\PostCreate.jsx",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\changePassPage\\ChangePass.jsx",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\postUpdatePage\\UpdateUserPost.jsx",["235"],"import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport PostCreateUpdate from './PostCreateUpdate';\r\nimport PostDetailUpdate from './PostDetailUpdate';\r\n\r\nfunction UpdateUserPost(props) {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route path='/user/update-details/:id/create' component={PostCreateUpdate} />\r\n                <Route path='/user/update-details/:id' component={PostDetailUpdate} />\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UpdateUserPost;","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\landingPage\\ShowContent.jsx",["236"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport '../../../style/landingPage/showContent.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction ShowContent(props) {\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    margin: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    extendedIcon: {\r\n      marginRight: theme.spacing(1),\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div id='showcase'>\r\n      <div className='container showcase-container'>\r\n        <h1>Welcome to InstaGive</h1>\r\n        <p>\r\n          Online donation platform for the residence of Pampanga\r\n        </p>\r\n        <Button\r\n        classes\r\n          variant=\"contained\"\r\n          size=\"large\"\r\n          style={{ opacity: 0.9 }}\r\n          color=\"primary\" className={classes.margin}\r\n          onClick={() => props.history.push('/post-list')}>\r\n          Browse Donations\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ShowContent;\r\n","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\landingPage\\Content.jsx",["237","238","239","240"],"import React from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Container from '@material-ui/core/Container';\r\nimport imgWave from '../../../img/wave.png'\r\n\r\nfunction Content(props) {\r\n    return (\r\n        <div>\r\n            <CssBaseline />\r\n            <Container maxWidth=\"md\" style={{ display: 'flex', textAlign: 'center' }}>\r\n                <div>\r\n                    <img src=\"\" alt=\"Image 1\" />\r\n                    <div>All organization are certified guaranteed</div>\r\n                </div>\r\n                <div>\r\n                    <img src=\"\" alt=\"Image 1\" />\r\n                    <div>Donate anonymously</div>\r\n                </div>\r\n                <div>\r\n                    <img src=\"\" alt=\"Image 1\" />\r\n                    <div>asdasdasdc adasd asd asd asdasdasd</div>\r\n                </div>\r\n                <div>\r\n                    <img src=\"\" alt=\"Image 1\" />\r\n                    <div>asdasdasdc adasd asd asd asdasdasd</div>\r\n                </div>\r\n            </Container>\r\n            <img src={imgWave} alt=\"wave\" style={{ opacity: 0.4, height: 200, width: '100%' }} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Content;","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\landingPage\\Posts.jsx",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\others\\cityLocation.js",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\ledgerPage\\LedgerCreate.jsx",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\ledgerPage\\LedgerList.jsx",["241","242","243"],"import React, { useContext, useState } from 'react';\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Container from '@material-ui/core/Container'\r\nimport {TextField, Button, Icon, FormControl, InputLabel, Select, Radio, RadioGroup, FormLabel, FormControlLabel, MenuItem\r\n} from '@material-ui/core/'\r\nimport {connect} from 'react-redux'\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport axios from 'axios'\r\n\r\n\r\n\r\n\r\n\r\nfunction LedgerList(props) {\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n    },\r\n  }))(TableCell);\r\n  \r\n  const StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n      '&:nth-of-type(odd)': {\r\n        backgroundColor: theme.palette.action.hover,\r\n      },\r\n    },\r\n  \r\n  }))(TableRow)\r\n\r\n\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    table: {\r\n      minWidth: 700,\r\n    },\r\n    paper: {\r\n      marginTop: theme.spacing(8),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n      width: '100%',\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n    formControl: {\r\n      minWidth: 120,\r\n    },\r\n  }));  \r\n  \r\n  \r\n  const classes = useStyles();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Modal\r\n\r\nconst [dateValue, setDateValue] = useState()\r\nconst [ledgerForm, setLedgerForm] = useState({\r\n    postId: '',\r\n    donorName: '',\r\n    donationType: 'Cash',\r\n    paymentAddress: '',\r\n    amount: '',\r\n    remarks: '',\r\n    date: '' ,\r\n    email: ''\r\n})\r\n\r\nconst handleSubmit = async event => {\r\n    event.preventDefault()\r\n    // if (ledgerForm.postId === 'Select Post' || ledgerForm.postId === '') return alert('Select Post first')\r\n    // if (ledgerForm.date === '') return alert('Select Date first')\r\n\r\n\r\n    await axios.post(`http://localhost:5000/ledger/${ledgerForm.postId}`, {...ledgerForm, token: localStorage.getItem('user')})\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\nconst [openModal, setModal] = useState(false);\r\n  \r\nconst handleClickOpen = async () => {\r\n    setModal(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setModal(false);\r\n  };\r\n\r\n\r\n  \r\n\r\n  return (\r\n\r\n    <div>\r\n   \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n   <Button\r\n        style={{margin: '12px'}}\r\n        onClick={handleClickOpen}\r\n        variant='contained'\r\n        color='primary'\r\n        endIcon={<Icon fontSize=\"small\">add_circle</Icon>\r\n    }\r\n      >Add Data</Button>\r\n\r\n      \r\n\r\n\r\n      <Container component='main' maxWidth='xl' className=\"shadow-container\">\r\n\r\n\r\n\r\n\r\n      <div>\r\n      \r\n        <TextField variant='outlined' style={{width: '50%', display: 'relative', left:'25%', marginBottom: '30px'}}label=\"Search Here\"/>\r\n\r\n\r\n      </div>\r\n\r\n      <div style={{ overflowX: 'auto' }}>\r\n        \r\n        \r\n        <TableContainer component={Paper}>\r\n          <Table className={classes.table}\r\n            aria-label='customized table'\r\n          >\r\n            <TableHead>\r\n              <TableRow>\r\n                <StyledTableCell align='center'>POST</StyledTableCell>\r\n                <StyledTableCell align='center'>NAME</StyledTableCell>\r\n                <StyledTableCell align='center'>EMAIL</StyledTableCell>\r\n                <StyledTableCell align='center'>DONATION TYPE</StyledTableCell>\r\n                <StyledTableCell align='center'>\r\n                  Payment Method (If Cash Donation)\r\n                </StyledTableCell>\r\n                <StyledTableCell align='center'>AMOUNT / ITEM QUANTITY</StyledTableCell>\r\n                <StyledTableCell align='center'>REMARKS</StyledTableCell>\r\n                <StyledTableCell align='center'>DATE</StyledTableCell>\r\n                \r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {props.ledger &&\r\n                props.ledger.map((data) => (\r\n                  <StyledTableRow key={data._id}>\r\n                    <StyledTableCell  align='center'>{ props.post.filter(postData => postData._id === data.postId )[0].Title }</StyledTableCell>\r\n                    <StyledTableCell align='center'>{data.donorName}</StyledTableCell>\r\n                    <StyledTableCell align='center'>{data.email}</StyledTableCell>\r\n                    <StyledTableCell align='center'>{data.donationType}</StyledTableCell>\r\n                    <StyledTableCell align='center'>{data.paymentAddress}</StyledTableCell>\r\n                    <StyledTableCell align='center'>{data.amount}</StyledTableCell>\r\n                    <StyledTableCell style={{maxWidth: '20vw'}} align='center'>{data.remarks}</StyledTableCell>\r\n                    <StyledTableCell align='center'>{(data.date)}</StyledTableCell>\r\n                  </StyledTableRow>\r\n                ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n\r\n      </Container>\r\n\r\n\r\n\r\n\r\n\r\n\r\n{/* Modal */}\r\n\r\n<Dialog open={openModal} onClose={handleClose} aria-labelledby=\"form-dialog-title\" maxWidth='sm' fullWidth={true}>\r\n        <DialogTitle id=\"form-dialog-title\"  style={{alignSelf: 'center', fontSize: '50px'}}>Add New Data</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Please Fill the Inputs Bellow: \r\n          </DialogContentText>\r\n\r\n\r\n            <FormControl style={{marginBottom: '12px'}} fullWidth={true} className={classes.formControl}>\r\n            <InputLabel style={{ marginLeft: '12px' }} id='post'>\r\n\r\n\r\n            Select Post\r\n              </InputLabel>\r\n\r\n              <Select\r\n                variant='outlined'\r\n                label='city'\r\n                name='city'\r\n                id='city'\r\n                fullWidth={true}\r\n                value={ledgerForm.postId}\r\n                onChange={(e) =>\r\n                  setLedgerForm({ ...ledgerForm, postId: e.target.value })\r\n                }\r\n              >\r\n                 {props.post && props.post.map(post =>\r\n\r\n          <MenuItem  key={post._id} value={post._id}>{post.Title}</MenuItem>\r\n\r\n\r\n                )}\r\n                              </Select>\r\n\r\n\r\n            </FormControl>\r\n\r\n\r\n\r\n\r\n\r\n            <TextField style={{marginBottom: '12px'}} variant=\"outlined\" fullWidth={true} label=\"Enter Donor Name (Can be Anonymous)\" type=\"text\" name=\"donorName\" id=\"donorName\"\r\n                        value={ledgerForm.donorName}\r\n                        onChange={e => setLedgerForm({ ...ledgerForm, donorName: e.target.value })}\r\n                    />\r\n\r\n\r\n\r\n            <TextField style={{marginBottom: '12px'}} variant=\"outlined\" fullWidth={true} label=\"Enter Email (Optional)\" type=\"text\" name=\"\" id=\"\"  onChange={e => setLedgerForm({ ...ledgerForm, email: e.target.value })} />\r\n\r\n            <FormControl style={{marginBottom: '12px'}} fullWidth={true} component=\"fieldset\">\r\n              <FormLabel component='legend'>Select Donation Type</FormLabel>\r\n\r\n\r\n              <RadioGroup\r\n                aria-label='gender'\r\n                name='gender1'\r\n                value={ledgerForm.donationType}\r\n                onChange={(e) =>\r\n                  setLedgerForm({ ...ledgerForm, donationType: e.target.value })\r\n                }>\r\n\r\n        <FormControlLabel\r\n                  value='Cash'\r\n                  control={<Radio />}\r\n                  label='Cash'\r\n                />\r\n                <FormControlLabel\r\n                  value='In-Kind'\r\n                  control={<Radio />}\r\n                  label='In-Kind'\r\n                />\r\n\r\n</RadioGroup>\r\n\r\n                \r\n                </FormControl>\r\n\r\n <TextField style={{marginBottom: '12px'}} variant=\"outlined\" fullWidth={true} label=\"Enter Payment Method\" type=\"text\" name=\"paymentAddress\" id=\"paymentAddress\"\r\n                        value={ledgerForm.paymentAddress}\r\n                        onChange={e => setLedgerForm({ ...ledgerForm, paymentAddress: e.target.value })}\r\n              \r\n              \r\n              \r\n              />\r\n\r\n<TextField style={{marginBottom: '12px'}} variant=\"outlined\" fullWidth={true} label=\"Enter Amount(Cash) / Item Quantity(In-Kind)\" type=\"text\" name=\"amount\" id=\"amount\"\r\n                        value={ledgerForm.amount}\r\n                        onChange={e => setLedgerForm({ ...ledgerForm, amount: e.target.value })}\r\n                    />\r\n\r\n\r\n<TextField style={{marginBottom: '12px'}} variant=\"outlined\" fullWidth={true} rows={4} multiline label=\"Enter Remarks\" type=\"text\" name=\"remarks\" id=\"remarks\"\r\n                        value={ledgerForm.remarks}\r\n                        onChange={e => setLedgerForm({ ...ledgerForm, remarks: e.target.value })}\r\n                    />\r\n\r\n\r\n\r\n      <TextField style={{marginBottom: '12px'}} variant=\"outlined\" fullWidth={true}  InputLabelProps={{\r\n      shrink: true,\r\n    }} type=\"date\"  onChange={date => {\r\n                        setDateValue(date)\r\n                        setLedgerForm({ ...ledgerForm, date: date.target.value })\r\n                    }} />\r\n\r\n\r\n\r\n\r\n\r\n\r\n          </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleSubmit} color=\"primary\">\r\n            Donate\r\n          </Button>\r\n        </DialogActions>\r\n    \r\n      </Dialog>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n\r\nreturn {ledger: state.user.ledger, post: state.user.post, userToken: state.auth.token\r\n}\r\n\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(LedgerList);\r\n","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\postUpdatePage\\PostDetailUpdate.jsx",["244","245"],"import React from 'react';\r\n\r\nfunction PostDetailUpdate(props) {\r\n    return (\r\n        <div>\r\n            <h1>Title</h1>\r\n            <p>Details here</p>\r\n            <img src=\"\" alt=\"Image 1\" />\r\n            <img src=\"\" alt=\"Image 2\" />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PostDetailUpdate;","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\postUpdatePage\\PostCreateUpdate.jsx",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\postDetailPage\\PostCreateDetails.jsx",["246"],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\common\\PostCard.jsx",[],{"ruleId":"247","replacedBy":"248"},{"ruleId":"249","replacedBy":"250"},{"ruleId":"251","severity":1,"message":"252","line":1,"column":28,"nodeType":"253","messageId":"254","endLine":1,"endColumn":36},{"ruleId":"255","severity":1,"message":"256","line":40,"column":6,"nodeType":"257","endLine":40,"endColumn":8,"suggestions":"258"},{"ruleId":"251","severity":1,"message":"259","line":19,"column":7,"nodeType":"253","messageId":"254","endLine":19,"endColumn":20},{"ruleId":"251","severity":1,"message":"260","line":26,"column":7,"nodeType":"253","messageId":"254","endLine":26,"endColumn":22},{"ruleId":"251","severity":1,"message":"261","line":33,"column":7,"nodeType":"253","messageId":"254","endLine":33,"endColumn":22},{"ruleId":"262","severity":1,"message":"263","line":43,"column":1,"nodeType":"264","endLine":61,"endColumn":2},{"ruleId":"262","severity":1,"message":"263","line":42,"column":1,"nodeType":"264","endLine":65,"endColumn":2},{"ruleId":"262","severity":1,"message":"263","line":35,"column":1,"nodeType":"264","endLine":52,"endColumn":2},{"ruleId":"251","severity":1,"message":"265","line":9,"column":7,"nodeType":"253","messageId":"254","endLine":9,"endColumn":22},{"ruleId":"262","severity":1,"message":"263","line":49,"column":1,"nodeType":"264","endLine":81,"endColumn":2},{"ruleId":"251","severity":1,"message":"266","line":9,"column":12,"nodeType":"253","messageId":"254","endLine":9,"endColumn":22},{"ruleId":"251","severity":1,"message":"267","line":9,"column":24,"nodeType":"253","messageId":"254","endLine":9,"endColumn":37},{"ruleId":"255","severity":1,"message":"268","line":21,"column":8,"nodeType":"257","endLine":21,"endColumn":10,"suggestions":"269"},{"ruleId":"255","severity":1,"message":"256","line":21,"column":8,"nodeType":"257","endLine":21,"endColumn":26,"suggestions":"270"},{"ruleId":"251","severity":1,"message":"271","line":6,"column":10,"nodeType":"253","messageId":"254","endLine":6,"endColumn":20},{"ruleId":"251","severity":1,"message":"272","line":3,"column":8,"nodeType":"253","messageId":"254","endLine":3,"endColumn":15},{"ruleId":"273","severity":1,"message":"274","line":62,"column":17,"nodeType":"275","endLine":62,"endColumn":114},{"ruleId":"273","severity":1,"message":"274","line":73,"column":21,"nodeType":"275","endLine":73,"endColumn":97},{"ruleId":"251","severity":1,"message":"276","line":4,"column":10,"nodeType":"253","messageId":"254","endLine":4,"endColumn":25},{"ruleId":"251","severity":1,"message":"277","line":5,"column":10,"nodeType":"253","messageId":"254","endLine":5,"endColumn":22},{"ruleId":"255","severity":1,"message":"278","line":29,"column":9,"nodeType":"257","endLine":29,"endColumn":11,"suggestions":"279"},{"ruleId":"251","severity":1,"message":"280","line":7,"column":10,"nodeType":"253","messageId":"254","endLine":7,"endColumn":23},{"ruleId":"251","severity":1,"message":"281","line":1,"column":8,"nodeType":"253","messageId":"254","endLine":1,"endColumn":13},{"ruleId":"251","severity":1,"message":"271","line":12,"column":10,"nodeType":"253","messageId":"254","endLine":12,"endColumn":20},{"ruleId":"282","severity":1,"message":"283","line":131,"column":11,"nodeType":"284","endLine":131,"endColumn":19},{"ruleId":"251","severity":1,"message":"285","line":55,"column":13,"nodeType":"253","messageId":"254","endLine":55,"endColumn":20},{"ruleId":"251","severity":1,"message":"276","line":11,"column":10,"nodeType":"253","messageId":"254","endLine":11,"endColumn":25},{"ruleId":"251","severity":1,"message":"277","line":12,"column":10,"nodeType":"253","messageId":"254","endLine":12,"endColumn":22},{"ruleId":"251","severity":1,"message":"286","line":3,"column":10,"nodeType":"253","messageId":"254","endLine":3,"endColumn":16},{"ruleId":"251","severity":1,"message":"287","line":28,"column":11,"nodeType":"253","messageId":"254","endLine":28,"endColumn":27},{"ruleId":"251","severity":1,"message":"281","line":4,"column":8,"nodeType":"253","messageId":"254","endLine":4,"endColumn":13},{"ruleId":"251","severity":1,"message":"288","line":2,"column":10,"nodeType":"253","messageId":"254","endLine":2,"endColumn":14},{"ruleId":"251","severity":1,"message":"289","line":4,"column":32,"nodeType":"253","messageId":"254","endLine":4,"endColumn":42},{"ruleId":"251","severity":1,"message":"290","line":5,"column":28,"nodeType":"253","messageId":"254","endLine":5,"endColumn":32},{"ruleId":"251","severity":1,"message":"291","line":7,"column":10,"nodeType":"253","messageId":"254","endLine":7,"endColumn":20},{"ruleId":"273","severity":1,"message":"274","line":323,"column":21,"nodeType":"275","endLine":323,"endColumn":86},{"ruleId":"273","severity":1,"message":"274","line":435,"column":21,"nodeType":"275","endLine":435,"endColumn":49},{"ruleId":"273","severity":1,"message":"274","line":436,"column":21,"nodeType":"275","endLine":436,"endColumn":49},{"ruleId":"273","severity":1,"message":"274","line":437,"column":21,"nodeType":"275","endLine":437,"endColumn":49},{"ruleId":"251","severity":1,"message":"292","line":2,"column":25,"nodeType":"253","messageId":"254","endLine":2,"endColumn":33},{"ruleId":"251","severity":1,"message":"288","line":6,"column":10,"nodeType":"253","messageId":"254","endLine":6,"endColumn":14},{"ruleId":"273","severity":1,"message":"274","line":12,"column":21,"nodeType":"275","endLine":12,"endColumn":49},{"ruleId":"273","severity":1,"message":"274","line":16,"column":21,"nodeType":"275","endLine":16,"endColumn":49},{"ruleId":"273","severity":1,"message":"274","line":20,"column":21,"nodeType":"275","endLine":20,"endColumn":49},{"ruleId":"273","severity":1,"message":"274","line":24,"column":21,"nodeType":"275","endLine":24,"endColumn":49},{"ruleId":"251","severity":1,"message":"293","line":1,"column":17,"nodeType":"253","messageId":"254","endLine":1,"endColumn":27},{"ruleId":"251","severity":1,"message":"294","line":2,"column":8,"nodeType":"253","messageId":"254","endLine":2,"endColumn":18},{"ruleId":"251","severity":1,"message":"295","line":95,"column":8,"nodeType":"253","messageId":"254","endLine":95,"endColumn":17},{"ruleId":"273","severity":1,"message":"274","line":8,"column":13,"nodeType":"275","endLine":8,"endColumn":41},{"ruleId":"273","severity":1,"message":"274","line":9,"column":13,"nodeType":"275","endLine":9,"endColumn":41},{"ruleId":"251","severity":1,"message":"296","line":55,"column":11,"nodeType":"253","messageId":"254","endLine":55,"endColumn":15},"no-native-reassign",["297"],"no-negated-in-lhs",["298"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["299"],"'postListAdded' is assigned a value but never used.","'postListRemoved' is assigned a value but never used.","'postListUpdated' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'USER_POST_FETCH' is assigned a value but never used.","'userAuthID' is assigned a value but never used.","'setUserAuthID' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["300"],["301"],"'makeStyles' is defined but never used.","'banner1' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'FontAwesomeIcon' is defined but never used.","'faPlusCircle' is defined but never used.","React Hook useEffect has missing dependencies: 'props.match.params.id' and 'updates'. Either include them or remove the dependency array.",["302"],"'checkPassword' is assigned a value but never used.","'axios' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'classes' is assigned a value but never used.","'faEdit' is defined but never used.","'handleEditButton' is assigned a value but never used.","'Link' is defined but never used.","'Typography' is defined but never used.","'Icon' is defined but never used.","'withStyles' is defined but never used.","'Redirect' is defined but never used.","'useContext' is defined but never used.","'DatePicker' is defined but never used.","'dateValue' is assigned a value but never used.","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"303","fix":"304"},{"desc":"305","fix":"306"},{"desc":"307","fix":"308"},{"desc":"309","fix":"310"},"Update the dependencies array to be: [props]",{"range":"311","text":"312"},"Update the dependencies array to be: [props.history]",{"range":"313","text":"314"},"Update the dependencies array to be: [props, props.auth.token]",{"range":"315","text":"316"},"Update the dependencies array to be: [props.match.params.id, updates]",{"range":"317","text":"318"},[1369,1371],"[props]",[674,676],"[props.history]",[804,822],"[props, props.auth.token]",[768,770],"[props.match.params.id, updates]"]