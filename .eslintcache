[{"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\index.jsx":"1","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\App.jsx":"2","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\context\\postContext.js":"3","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\context\\authContext.js":"4","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\context\\accountList.js":"5","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\common\\NotFound.jsx":"6","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\common\\Nav.jsx":"7","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\landingPage\\LandingPage.jsx":"8","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\detailsPage\\DetailsPage.jsx":"9","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\authPage\\AuthPage.jsx":"10","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\UserPage.jsx":"11","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\adminPage\\AdminPage.jsx":"12","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\context\\userContext.js":"13","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\landingPage\\ShowContent.jsx":"14","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\detailsPage\\DetailsPageContent.jsx":"15","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\landingPage\\Posts.jsx":"16","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\authPage\\Register.jsx":"17","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\authPage\\Login.jsx":"18","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\authPage\\ForgotPass.jsx":"19","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\detailsPage\\DetailsUpdatePage.jsx":"20","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\PostList.jsx":"21","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\common\\Sidebar.jsx":"22","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\adminPage\\AdminPending.jsx":"23","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\adminPage\\AdminAccepted.jsx":"24","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\adminPage\\AdminRejected.jsx":"25","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\adminPage\\AdminLogin.jsx":"26","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\ledgerPage\\LedgerPage.jsx":"27","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\postDetailPage\\PostCreate.jsx":"28","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\postDetailPage\\UserPostDetails.jsx":"29","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\changePassPage\\ChangePass.jsx":"30","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\postUpdatePage\\UpdateUserPost.jsx":"31","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\others\\cityLocation.js":"32","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\common\\PostCard.jsx":"33","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\ledgerPage\\LedgerList.jsx":"34","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\postDetailPage\\PostCreateDetails.jsx":"35","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\ledgerPage\\LedgerCreate.jsx":"36","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\postUpdatePage\\PostDetailUpdate.jsx":"37","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\postUpdatePage\\PostCreateUpdate.jsx":"38"},{"size":325,"mtime":1614651720934,"results":"39","hashOfConfig":"40"},{"size":2679,"mtime":1614651720879,"results":"41","hashOfConfig":"40"},{"size":134,"mtime":1614651720921,"results":"42","hashOfConfig":"40"},{"size":134,"mtime":1614651720920,"results":"43","hashOfConfig":"40"},{"size":142,"mtime":1614651720919,"results":"44","hashOfConfig":"40"},{"size":385,"mtime":1614651720880,"results":"45","hashOfConfig":"40"},{"size":2165,"mtime":1614651720880,"results":"46","hashOfConfig":"40"},{"size":281,"mtime":1614651720895,"results":"47","hashOfConfig":"40"},{"size":1593,"mtime":1614651720894,"results":"48","hashOfConfig":"40"},{"size":1404,"mtime":1614651720889,"results":"49","hashOfConfig":"40"},{"size":2557,"mtime":1614739174014,"results":"50","hashOfConfig":"40"},{"size":2085,"mtime":1614651720886,"results":"51","hashOfConfig":"40"},{"size":134,"mtime":1614651720926,"results":"52","hashOfConfig":"40"},{"size":539,"mtime":1614651720896,"results":"53","hashOfConfig":"40"},{"size":1184,"mtime":1614676443458,"results":"54","hashOfConfig":"40"},{"size":917,"mtime":1614651720896,"results":"55","hashOfConfig":"40"},{"size":8788,"mtime":1614651720893,"results":"56","hashOfConfig":"40"},{"size":2453,"mtime":1614651720892,"results":"57","hashOfConfig":"40"},{"size":2462,"mtime":1614658352886,"results":"58","hashOfConfig":"40"},{"size":729,"mtime":1614651720895,"results":"59","hashOfConfig":"40"},{"size":1869,"mtime":1614669093721,"results":"60","hashOfConfig":"40"},{"size":508,"mtime":1614651720881,"results":"61","hashOfConfig":"40"},{"size":3050,"mtime":1614651720887,"results":"62","hashOfConfig":"40"},{"size":3189,"mtime":1614651720885,"results":"63","hashOfConfig":"40"},{"size":1519,"mtime":1614651720888,"results":"64","hashOfConfig":"40"},{"size":1770,"mtime":1614651720886,"results":"65","hashOfConfig":"40"},{"size":534,"mtime":1614651720903,"results":"66","hashOfConfig":"40"},{"size":504,"mtime":1614651720904,"results":"67","hashOfConfig":"40"},{"size":5724,"mtime":1614651720906,"results":"68","hashOfConfig":"40"},{"size":2598,"mtime":1614659940033,"results":"69","hashOfConfig":"40"},{"size":544,"mtime":1614651720917,"results":"70","hashOfConfig":"40"},{"size":418,"mtime":1614675515134,"results":"71","hashOfConfig":"40"},{"size":1596,"mtime":1614740540852,"results":"72","hashOfConfig":"40"},{"size":1686,"mtime":1614738789450,"results":"73","hashOfConfig":"40"},{"size":5971,"mtime":1614675432905,"results":"74","hashOfConfig":"40"},{"size":4570,"mtime":1614739270574,"results":"75","hashOfConfig":"40"},{"size":301,"mtime":1614651720910,"results":"76","hashOfConfig":"40"},{"size":455,"mtime":1614651720909,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"w933ur",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"80"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"80"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"80"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"80"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"80"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"80"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"80"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"80"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"80"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"80"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"80"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"80"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"80"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\index.jsx",[],["169","170"],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\App.jsx",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\context\\postContext.js",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\context\\authContext.js",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\context\\accountList.js",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\common\\NotFound.jsx",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\common\\Nav.jsx",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\landingPage\\LandingPage.jsx",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\detailsPage\\DetailsPage.jsx",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\authPage\\AuthPage.jsx",["171","172","173"],"import React, { useEffect, useState } from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport Login from './Login';\r\nimport Register from './Register';\r\nimport ForgotPass from './ForgotPass';\r\nimport '../../../style/authPage/authPage.css'\r\n\r\nfunction AuthPage(props) {\r\n    const [userAuthID, setUserAuthID] = useState()\r\n\r\n    useEffect(() => {\r\n        // check if there's a user in coockies\r\n        const userAuthID = localStorage.getItem('user')\r\n\r\n        const validateAuthID = async () => {\r\n            // Same logic for user login\r\n            if (userAuthID) props.history.replace('/user')\r\n        }\r\n\r\n        validateAuthID()\r\n    }, [])\r\n\r\n    return (\r\n        <div className='auth-container'>\r\n            <div className='authBackgroundImage'>\r\n            </div>\r\n            <div className='authForm'>\r\n                <div className='center'>\r\n                    <Switch>\r\n                        <Route path='/auth/login' component={Login} />\r\n                        <Route path='/auth/register' component={Register} />\r\n                        <Route path='/auth/forgot' component={ForgotPass} />\r\n                        <Redirect from='/auth' to='/auth/login' exact />\r\n                        <Redirect to='/not-found' />\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AuthPage;","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\UserPage.jsx",["174","175"],"import React, { useEffect, useState, useContext } from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport PostList from './PostList';\r\nimport LedgerPage from './ledgerPage/LedgerPage';\r\nimport PostCreate from './postDetailPage/PostCreate';\r\nimport UserPostDetails from './postDetailPage/UserPostDetails';\r\nimport AuthContext from './../../../context/authContext';\r\nimport ChangePass from './changePassPage/ChangePass';\r\nimport UserContext from './../../../context/userContext';\r\nimport axios from 'axios'\r\nimport UpdateUserPost from './postUpdatePage/UpdateUserPost';\r\n\r\nfunction UserPage(props) {\r\n    const { token } = useContext(AuthContext)\r\n    const [userToken, setUserToken] = useState()\r\n    const [user, setUser] = useState({\r\n        ledger: [],\r\n        post: []\r\n    })\r\n\r\n    useEffect(() => {\r\n        setUserToken(token)\r\n        if (!localStorage.getItem('user')) return props.history.push('/auth')\r\n\r\n        const getUserData = async () => {\r\n            // Getting all data for ledger\r\n            // await axios.get(`/getledger/${userToken}`)\r\n            //     .then(({ data }) => setUser({ ...user, ledger: data }));\r\n\r\n            // Getting all data for post\r\n           \r\n\r\n           const {data:ledger} = await axios.post('http://localhost:5000/ledger/getall' ,{token: localStorage.getItem('user')})\r\n\r\n\r\n\r\n\r\n\r\n           const {data:post} = await axios.post('http://localhost:5000/post/userpost', {token: localStorage.getItem('user')})\r\n            \r\n            \r\n                setUser({\r\n                    ledger,\r\n                    post\r\n\r\n                })\r\n\r\n            }\r\n\r\n\r\n\r\n\r\n            getUserData()\r\n            \r\n        }, [])\r\n        \r\n    return (\r\n        <div>\r\n            <UserContext.Provider value={user}>\r\n                <div>\r\n                    <Switch>\r\n                        <Route path='/user/change-password' component={ChangePass} />\r\n                        <Route path='/user/post-create' component={PostCreate} />\r\n                        <Route path='/user/post-details/:id' component={UserPostDetails} />\r\n                        <Route path='/user/ledger' component={LedgerPage} />\r\n                        <Route path='/user/update-details/:id' component={UpdateUserPost} />\r\n                        <Route path='/user/' exact component={PostList} />\r\n                        <Redirect to='/not-found' />\r\n                    </Switch>\r\n                </div>\r\n            </UserContext.Provider>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserPage;","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\adminPage\\AdminPage.jsx",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\context\\userContext.js",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\landingPage\\ShowContent.jsx",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\detailsPage\\DetailsPageContent.jsx",["176","177","178"],"import React from 'react';\r\nimport '../../../style/detailsPage/detailsPageContent.css'\r\nimport banner1 from '../../../img/Landscape-Color.jpg'\r\n\r\nfunction DetailsPageContent(props) {\r\n    if (!props.onSelectedPost) return <div>Loading</div>\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img src={`/docs/${props.onSelectedPost.profilePic}`} alt=\"Photo\" className='detailsPageImage' />\r\n            </div>\r\n            {props.children}\r\n            <p className='donationContent'>\r\n                {props.onSelectedPost ? props.onSelectedPost.description : ''}\r\n            </p>\r\n           \r\n            <div>\r\n                {props.onSelectedPost.imageList.map(imageName => \r\n                    \r\n                    \r\n                    <img src={`/docs/${imageName}`}  alt=\"Photo\" className='detailsPageImage' />\r\n\r\n                    \r\n                    \r\n                    )}\r\n           \r\n                    </div>\r\n           \r\n           \r\n            <div className='donateNowContainer'>\r\n                <button className='donate-button'>Donate Now</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DetailsPageContent;","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\landingPage\\Posts.jsx",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\authPage\\Register.jsx",["179"],"import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport '../../../style/authPage/register.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Register(props) {\r\n  const [checkPassword, setCheckPassword] = useState({ confirm_pass: '' });\r\n  const [userForm, setUserForm] = useState({\r\n    email: '',\r\n    password: '',\r\n    city: '',\r\n    orgName: '',\r\n    orgAddress: '',\r\n\r\n    orgNumber: '',\r\n    repName: '',\r\n\r\n    orgDescriptions: '',\r\n  });\r\n\r\n  const [files, setFiles] = useState({\r\n    orgPhoto: '',\r\n    orgDocuments: '',\r\n    repId: '',\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    console.log(event.target.value);\r\n\r\n    setUserForm({\r\n      ...userForm,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handlerepId = (file) => {\r\n    setFiles({ ...files, repId: file });\r\n  };\r\n\r\n  const handleorgPhoto = (file) => {\r\n    setFiles({ ...files, orgPhoto: file });\r\n  };\r\n\r\n  const handleorgDocuments = (multifiles) => {\r\n    setFiles({ ...files, orgDocuments: multifiles });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const formdata = new FormData();\r\n\r\n    formdata.append('repId', files.repId);\r\n    formdata.append('orgPhoto', files.orgPhoto);\r\n\r\n    for (const key in files.orgDocuments) {\r\n      formdata.append('orgDocuments', files.orgDocuments[key]);\r\n    }\r\n\r\n    formdata.append('email', userForm.email);\r\n    formdata.append('city', userForm.city);\r\n    formdata.append('password', userForm.password);\r\n\r\n    formdata.append('orgName', userForm.orgName);\r\n    formdata.append('orgAddress', userForm.orgAddress);\r\n    formdata.append('orgNumber', userForm.orgNumber);\r\n    formdata.append('repName', userForm.repName);\r\n    formdata.append('orgDescriptions', userForm.orgDescriptions);\r\n\r\n    const data = await axios.post('http://localhost:5000/user/register', formdata);\r\n    console.log(data)\r\n\r\n    setUserForm({\r\n      email: '',\r\n      password: '',\r\n      city: '',\r\n      orgName: '',\r\n      orgAddress: '',\r\n      orgPhoto: '',\r\n      orgNumber: '',\r\n      repName: '',\r\n      repId: '',\r\n      orgDocuments: [],\r\n      orgDescriptions: ''\r\n    })\r\n\r\n    setFiles({\r\n      orgPhoto: '',\r\n      orgDocuments: '',\r\n      repId: '',\r\n    })\r\n\r\n\r\n    document.getElementById('repId').value = null;\r\n    document.getElementById('orgDocuments').value = null;\r\n    document.getElementById('orgPhoto').value = null;\r\n\r\n\r\n\r\n\r\n  };\r\n\r\n  return (\r\n    <div className='register-container'>\r\n      <div>\r\n        <h1 className='authTitle'>Account Details</h1>\r\n      </div>\r\n      <form encType='multipart/form-data' action='' onSubmit={handleSubmit}>\r\n        <div className='register-form1'>\r\n          <div className='register-input-container1'>\r\n            <label className='form-label' htmlFor='email'>\r\n              Email\r\n            </label>\r\n            <input\r\n              type='text'\r\n              name='email'\r\n              id='email'\r\n              value={userForm.email}\r\n              placeholder='Email'\r\n              className='register-form-input-text'\r\n              onChange={handleChange}\r\n            />\r\n            <label className='form-label' htmlFor='password'>\r\n              Password\r\n            </label>\r\n            <input\r\n              type='text'\r\n              name='password'\r\n              id='password'\r\n              value={userForm.password}\r\n              placeholder='Password'\r\n              className='register-form-input-text'\r\n              onChange={handleChange}\r\n            />\r\n            <label className='form-label' htmlFor='confirm-pass'>\r\n              Confirm Password\r\n            </label>\r\n            <input\r\n              type='text'\r\n              name='confirm-pass'\r\n              id='confirm-pass'\r\n              placeholder='confirm Password'\r\n              className='register-form-input-text'\r\n              onChange={(e) => setCheckPassword(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className='register-form2'>\r\n          <div className='register-input-container2'>\r\n            <label className='form-label' htmlFor='orgName'>\r\n              Organization Name\r\n            </label>\r\n            <input\r\n              type='text'\r\n              name='orgName'\r\n              value={userForm.orgName}\r\n              onChange={handleChange}\r\n              id='orgName'\r\n              placeholder='Organization Name'\r\n              className='register-form-input-text'\r\n            />\r\n          </div>\r\n          <div className='register-input-container2'>\r\n            <label className='form-label' htmlFor='orgNumber'>\r\n              Organization No.\r\n            </label>\r\n            <input\r\n              type='text'\r\n              name='orgNumber'\r\n              value={userForm.orgNumber}\r\n              onChange={handleChange}\r\n              id='orgNumber'\r\n              placeholder='Organization No.'\r\n              className='register-form-input-text'\r\n            />\r\n          </div>\r\n          <div className='register-input-container2'>\r\n            <label className='form-label' htmlFor='city'>\r\n              City\r\n            </label>\r\n            <input\r\n              type='text'\r\n              name='city'\r\n              value={userForm.city}\r\n              onChange={handleChange}\r\n              id='city'\r\n              placeholder='City'\r\n              className='register-form-input-text'\r\n            />\r\n          </div>\r\n          <div className='register-input-container2'>\r\n            <label className='form-label' htmlFor='orgAddress'>\r\n              Organization Address\r\n            </label>\r\n            <input\r\n              type='text'\r\n              name='orgAddress'\r\n              value={userForm.orgAddress}\r\n              onChange={handleChange}\r\n              id='orgAddress'\r\n              placeholder='Organization Address'\r\n              className='register-form-input-text'\r\n            />\r\n          </div>\r\n          <div className='register-input-container2'>\r\n            <label className='form-label' htmlFor='repName'>\r\n              Representative Name\r\n            </label>\r\n            <input\r\n              type='text'\r\n              name='repName'\r\n              value={userForm.repName}\r\n              onChange={handleChange}\r\n              id='repName'\r\n              placeholder='Representative Name'\r\n              className='register-form-input-text'\r\n            />\r\n          </div>\r\n\r\n          <div className='register-input-container2'>\r\n            <label className='form-label' htmlFor='repId'>\r\n              Representative ID\r\n            </label>\r\n            <input\r\n              type='file'\r\n              id='repId'\r\n              name='repId'\r\n              onChange={(e) => {\r\n                const file = e.target.files[0];\r\n                handlerepId(file);\r\n              }}\r\n              className='form-input-file'\r\n            ></input>\r\n          </div>\r\n\r\n          <div className='register-input-container2'>\r\n            <label className='form-label' htmlFor='orgDocuments'>\r\n              Organization Documents\r\n            </label>\r\n            <input\r\n              type='file'\r\n              id='orgDocuments'\r\n              name='orgDocuments'\r\n              onChange={(e) => {\r\n                const multifiles = e.target.files;\r\n                handleorgDocuments(multifiles);\r\n              }}\r\n              multiple\r\n              className='form-input-file'\r\n            ></input>\r\n          </div>\r\n          <div className='register-input-container2'>\r\n            <label className='org-photo' htmlFor='orgPhoto'>\r\n              Organization Photo\r\n            </label>\r\n            <input\r\n              type='file'\r\n              id='orgPhoto'\r\n              name='orgPhoto'\r\n              onChange={(e) => {\r\n                const file = e.target.files[0];\r\n                handleorgPhoto(file);\r\n              }}\r\n              className='form-input-file'\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className='register-org-description-container'>\r\n          <label className='org-photo' htmlFor='orgDescriptions'>\r\n            Organization Description\r\n          </label>\r\n          <textarea\r\n            name='orgDescriptions'\r\n            value={userForm.orgDescriptions}\r\n            onChange={handleChange}\r\n            id='orgDescriptions'\r\n            className='register-form-input-text'\r\n          ></textarea>\r\n        </div>\r\n        <div className='form-button-container'>\r\n          <Link to='/auth/login' className='form-link'>\r\n            Cancel\r\n          </Link>\r\n          <button className='form-button'>Send Registration</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\authPage\\Login.jsx",["180"],"import axios from 'axios';\r\nimport React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../../../style/authPage/login.css';\r\n\r\nfunction Login(props) {\r\n  const [auth, setAuth] = useState({ username: '', password: '' });\r\n\r\n  const [error, setError] = useState(false);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const valid = await axios.post('http://localhost:5000/user/login', auth);\r\n\r\n    if (valid.data.valid !== true) {\r\n    \r\n      window.alert(valid.data.valid);\r\n \r\n\r\n    } else {\r\n      // Set Item\r\n      console.log(valid.data.token);\r\n      localStorage.setItem('user', valid.data.token)\r\n      window.location.reload();\r\n\r\n      window.alert('Login Success');\r\n    }\r\n\r\n    // If there is error in auth, set the error to TRUE\r\n  };\r\n\r\n  return (\r\n    <div className='LoginContainer'>\r\n      {/* Show this if the error is true */}\r\n      {error && <div>Error</div>}\r\n\r\n      <div>\r\n        <h1 className='authTitle'>Welcome!</h1>\r\n      </div>\r\n      <form action='#' className='form-container' onSubmit={handleSubmit}>\r\n        <label htmlFor='username' className='form-label'>\r\n          Username\r\n        </label>\r\n        <input\r\n          type='text'\r\n          name='username'\r\n          id='username'\r\n          placeholder='Username'\r\n          className='form-input-text'\r\n          required\r\n          value={auth.username}\r\n          onChange={(e) => setAuth({ ...auth, username: e.target.value })}\r\n        />\r\n        <label htmlFor='password' className='form-label'>\r\n          Password\r\n        </label>\r\n        <input\r\n          type='password'\r\n          name='password'\r\n          id='password'\r\n          placeholder='Password'\r\n          className='form-input-text'\r\n          required\r\n          value={auth.password}\r\n          onChange={(e) => setAuth({ ...auth, password: e.target.value })}\r\n        />\r\n        <div style={{ width: '100%' }}>\r\n          <Link to='/auth/forgot' className='form-link'>\r\n            Forgot Password\r\n          </Link>\r\n          <div className='form-button-container'>\r\n            <button className='form-button'>Login</button>\r\n            <button\r\n              className='form-button'\r\n              onClick={() => props.history.push('/auth/register')}\r\n            >\r\n              Sign up\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\authPage\\ForgotPass.jsx",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\detailsPage\\DetailsUpdatePage.jsx",["181"],"import React, { useState } from 'react';\r\nimport '../../../style/detailsPage/detailsUpdatePage.css'\r\n\r\nfunction DetailsUpdatePage(props) {\r\n    const [posts, setPosts] = useState([\r\n    ])\r\n\r\n    return (\r\n        <div>\r\n            {props.children}\r\n            <div className=\"update-container\">\r\n                {posts.map(post =>\r\n                    <div key={post.id}>\r\n                        <h3 className='update-title'>{post.title} - {post.date}</h3>\r\n                        <p className='update-details'>{post.details}</p>\r\n                        <img src={post.img} alt=\"carousel\" />\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DetailsUpdatePage;","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\PostList.jsx",["182","183"],"import React, { useContext } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport PostCard from './../../common/PostCard';\r\nimport UserContext from './../../../context/userContext';\r\n\r\nfunction PostList(props) {\r\n    const userData = useContext(UserContext);\r\n\r\n\r\n\r\n    \r\n    return (\r\n        <div>\r\n            <div className='user-items-right-container'>\r\n                <FontAwesomeIcon\r\n                    icon={faPlusCircle}\r\n                    className='deleteButton'\r\n                    size='lg'\r\n                    onClick={() => props.history.push('/user/post-create')}\r\n                />\r\n            </div>\r\n            <div className='postCardContainer'>\r\n                 {userData.post ? userData.post.map((post) => (\r\n                    <div className='postCard' key={post._id}>\r\n                        <div className=\"category\">{post.location}</div>\r\n                        <img src={`/docs/${post.profilePic}`} alt='Photo' width='100%' />\r\n                        <h3 style={{ paddingLeft: 5 }}>\r\n                            {post.Title}\r\n                        </h3>\r\n                        <p style={{ paddingLeft: 10, paddingRight: 10 }}>\r\n                            {post.description}\r\n                        </p>\r\n                        <div className='buttonContainer'>\r\n                            <button\r\n                                className='details-button'\r\n                                style={{ borderRadius: 7 }}\r\n                                onClick={() => props.history.push(`/details/${post._id}`)}\r\n                            >Details</button>\r\n                        </div>\r\n                    </div>\r\n                )): ''}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PostList;","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\common\\Sidebar.jsx",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\adminPage\\AdminPending.jsx",["184"],"import React, { useContext, useEffect } from 'react';\r\nimport axios from 'axios'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCheck, faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport AccountList from './../../../context/accountList';\r\n\r\nfunction AdminPending(props) {\r\n    let accountList = useContext(AccountList)\r\n    let data = accountList.pending ? accountList.pending : [];\r\n\r\n    const theadData = [\r\n        {\r\n            label: 'Organization',\r\n            name: 'orgName'\r\n        },\r\n        {\r\n            label: 'Email',\r\n            name: 'email'\r\n        },\r\n        {\r\n            label: 'City',\r\n            name: 'city'\r\n        },\r\n        {\r\n            label: 'Rep. Name',\r\n            name: 'repName'\r\n        },\r\n    ]\r\n\r\n    const handleApproveAccount = async (account) => {\r\n        await axios.post(`http://localhost:5000/admin/changestatus/${account}/approved`)\r\n            .then(() => accountList = [])\r\n\r\n        window.location.reload();\r\n    };\r\n\r\n    const handleRejectAccount = async (account) => {\r\n        await axios.post(`http://localhost:5000/admin/changestatus/${account}/rejected`)\r\n            .then(() => accountList = [])\r\n\r\n        window.location.reload();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1 className='admin-page-title'>Pending</h1>\r\n            <table className='table-container'>\r\n                <thead>\r\n                    <tr>\r\n                        {theadData.map(tableHead =>\r\n                            <th key={tableHead.name} className='table-header'>{tableHead.label}</th>\r\n                        )}\r\n                        <th>Status</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {data.map(account =>\r\n                        <tr key={account.id}>\r\n                            {theadData.map(tableHead =>\r\n                                <td key={tableHead.name} className='table-item'>\r\n                                    {account[tableHead.name]}\r\n                                </td>\r\n                            )}\r\n                            <td className='table-item' id='table-button-container'>\r\n                                <FontAwesomeIcon\r\n                                    icon={faCheck}\r\n                                    className='table-icon'\r\n                                    size='lg'\r\n                                    onClick={() => handleApproveAccount(account._id)}\r\n                                />\r\n                                <FontAwesomeIcon\r\n                                    icon={faTimes}\r\n                                    className='table-icon'\r\n                                    size='lg'\r\n                                    onClick={() => handleRejectAccount(account._id)}\r\n                                />\r\n                            </td>\r\n                        </tr>\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AdminPending;","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\adminPage\\AdminAccepted.jsx",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\adminPage\\AdminRejected.jsx",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\adminPage\\AdminLogin.jsx",["185"],"import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios'\r\nfunction AdminLogin(props) {\r\n    const [auth, setAuth] = useState({ username: '', password: '' })\r\n\r\n    const handleSubmit = async event => {\r\n        event.preventDefault()\r\n\r\n        const valid = await axios.post('http://localhost:5000/admin/login', auth);\r\n      \r\n        if (valid.data.valid !== true) \r\n            window.alert(valid.data.valid);\r\n    \r\n        else{\r\n\r\n\r\n            console.log(valid.data.token);\r\n      localStorage.setItem('admin', valid.data.token)\r\n      window.location.reload();\r\n\r\n      window.alert('Login Success');\r\n\r\n        }\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n    }\r\n\r\n    return (\r\n        <div className='LoginContainer'>\r\n            <div>\r\n                <h1 className='authTitle'>Admin Login</h1>\r\n            </div>\r\n            <form action=\"#\" className='form-container' onSubmit={handleSubmit}>\r\n                <label htmlFor=\"username\" className='form-label'>Username</label>\r\n                <input type=\"text\" name=\"username\" id=\"username\" placeholder='Username' className='form-input-text' value={auth.username} onChange={e => setAuth({ ...auth, username: e.target.value })} />\r\n                <label htmlFor=\"password\" className='form-label'>Password</label>\r\n                <input type=\"password\" name=\"password\" id=\"password\" placeholder='Password' className='form-input-text' value={auth.password} onChange={e => setAuth({ ...auth, password: e.target.value })} />\r\n                <div style={{ width: '100%' }}>\r\n                    <button className='form-button' style={{ width: '100%' }}>Login</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AdminLogin;","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\ledgerPage\\LedgerPage.jsx",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\postDetailPage\\PostCreate.jsx",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\postDetailPage\\UserPostDetails.jsx",["186","187","188","189","190","191","192","193"],"import React, { useState } from 'react';\r\nimport axios from 'axios'\r\nimport { cityLocation } from '../../../others/cityLocation'\r\n\r\nfunction UserPostDetails(props) {\r\n    const [editPost, setEditPost] = useState(false)\r\n    const [postForm, setPostForm] = useState({\r\n        Title: '',\r\n        description: '',\r\n        location: '',\r\n        donationType: ''\r\n    })\r\n    const [files, setFiles] = useState({\r\n        postImg: '',\r\n        profilePic: '',\r\n    });\r\n\r\n    const handleSubmit = () => {\r\n        // axios for handling postForm\r\n        // axios.post('', postForm)\r\n        // axios for handling files\r\n        // axios.post('', files)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Post Details</h1>\r\n            {!editPost ? <button onClick={() => setEditPost(true)}>Edit</button> : ''}\r\n            <form className='post-container'>\r\n                <div className=\"post-create-container\">\r\n                    <label className='form-label' htmlFor='post-profile-pic'>\r\n                        Cover Photo\r\n                    </label>\r\n                    <img src=\"\" alt=\"Profile Photo Here\" />\r\n\r\n                    <label htmlFor=\"title\">Title:</label>\r\n                    {!editPost ?\r\n                        <p></p> :\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"title\"\r\n                            id=\"title\"\r\n                            value={postForm.Title}\r\n                            onChange={e => setPostForm({ ...postForm, Title: e.target.value })}\r\n                        />\r\n                    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    <div>\r\n                        <div>\r\n                            <label htmlFor=\"title\">Location</label>\r\n                            {!editPost ?\r\n                                <p></p> :\r\n                                <select\r\n                                    name=\"city\"\r\n                                    id=\"city\"\r\n                                    value={postForm.location}\r\n                                    onChange={e =>\r\n                                        setPostForm({ ...postForm, location: e.target.value })}\r\n                                >\r\n                                    {cityLocation.map(city =>\r\n                                        <option value={city} key={city}>\r\n                                            {city}\r\n                                        </option>\r\n                                    )}\r\n                                </select>\r\n                            }\r\n\r\n\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"\">Donation Type:</label>\r\n                            {!editPost ?\r\n                                <p></p> :\r\n                                <div>\r\n                                    <input type=\"radio\"\r\n                                        id=\"post-radio-cash\"\r\n                                        name=\"donation-type\"\r\n                                        value=\"cash\"\r\n                                        onClick={e => setPostForm({ ...postForm, donationType: e.target.value })}\r\n                                    />\r\n                                    <label htmlFor=\"post-radio-cash\">Cash</label>\r\n                                    <input type=\"radio\"\r\n                                        id=\"post-radio-in-kind\"\r\n                                        name=\"donation-type\"\r\n                                        value=\"in-kind\"\r\n                                        onClick={e => setPostForm({ ...postForm, donationType: e.target.value })}\r\n                                    />\r\n                                    <label htmlFor=\"post-radio-in-kind\">In-kind</label>\r\n                                    <input type=\"radio\"\r\n                                        id=\"post-radio-both\"\r\n                                        name=\"donation-type\"\r\n                                        value=\"both\"\r\n                                        onClick={e => setPostForm({ ...postForm, donationType: e.target.value })}\r\n                                    />\r\n                                    <label htmlFor=\"post-radio-both\">Both</label>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <label htmlFor=\"details\">Details:</label>\r\n                    {!editPost ?\r\n                        <p></p> :\r\n                        <textarea\r\n                            name='postDetails'\r\n                            value={postForm.postDetails}\r\n                            onChange={e => setPostForm({ ...postForm, postDetails: e.target.value })}\r\n                            id='postDetails'\r\n                            className=''\r\n                        ></textarea>\r\n                    }\r\n                    <label className='form-label' htmlFor='postImages'>\r\n                        Images:\r\n                    </label>\r\n\r\n                    <img src=\"\" alt=\"Image 1\" />\r\n                    <img src=\"\" alt=\"Image 2\" />\r\n                    <img src=\"\" alt=\"Image 3\" />\r\n\r\n                    {editPost ?\r\n                        <div>\r\n                            <button onClick={() => setEditPost(false)}>Cancel</button>\r\n                            <button>Save</button>\r\n                        </div> : ''\r\n                    }\r\n                </div>\r\n            </form>\r\n            {!editPost ?\r\n                <div>\r\n                    <button>View Post List</button>\r\n                </div> : ''\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserPostDetails;","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\changePassPage\\ChangePass.jsx",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\postUpdatePage\\UpdateUserPost.jsx",["194"],"import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport PostCreateUpdate from './PostCreateUpdate';\r\nimport PostDetailUpdate from './PostDetailUpdate';\r\n\r\nfunction UpdateUserPost(props) {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route path='/user/update-details/:id/create' component={PostCreateUpdate} />\r\n                <Route path='/user/update-details/:id' component={PostDetailUpdate} />\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UpdateUserPost;","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\others\\cityLocation.js",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\common\\PostCard.jsx",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\ledgerPage\\LedgerList.jsx",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\postDetailPage\\PostCreateDetails.jsx",["195"],"import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../../../../style/userPage/userPage.css';\r\nimport { cityLocation } from '../../../others/cityLocation';\r\nimport axios from 'axios';\r\n\r\nfunction PostCreateDetails(props) {\r\n  const [postForm, setPostForm] = useState({\r\n    Title: '',\r\n    description: '',\r\n    location: '',\r\n    donationType: '',\r\n    totalAmount: 0,\r\n  });\r\n  const [files, setFiles] = useState({\r\n    imageList: '',\r\n    profilePic: '',\r\n  });\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const formdata = new FormData();\r\n\r\n    formdata.append('profilePic', files.profilePic);\r\n\r\n    for (const key in files.imageList) {\r\n      formdata.append('imageList', files.imageList[key]);\r\n    }\r\n    formdata.append('Title', postForm.Title);\r\n    formdata.append('description', postForm.description);\r\n    formdata.append('location', postForm.location);\r\n    formdata.append('donationType', postForm.donationType);\r\n    formdata.append('totalAmount', postForm.totalAmount);\r\n    formdata.append('token', localStorage.getItem('user'));\r\n    console.log(...formdata);\r\n    const data = await axios.post(\r\n      'http://localhost:5000/post/createpost',\r\n      formdata\r\n    );\r\n\r\n    window.location.replace('http://localhost:5001/user');\r\n\r\n      \r\n\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1 className='user-header'>Creating new post</h1>\r\n      <form\r\n        encType='multipart/form-data'\r\n        className='post-container'\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <div className='post-create-container'>\r\n          <label className='form-label' htmlFor='post-profile-pic'>\r\n            Cover Photo\r\n          </label>\r\n          <input\r\n            type='file'\r\n            id='post-profile-pic'\r\n            name='post-profile-pic'\r\n            onChange={(e) => {\r\n              const file = e.target.files[0];\r\n              setFiles({ ...files, profilePic: file });\r\n            }}\r\n            className=''\r\n          ></input>\r\n          <label htmlFor='title'>Title:</label>\r\n          <input\r\n            type='text'\r\n            name='title'\r\n            id='title'\r\n            className='user-form-input'\r\n            value={postForm.Title}\r\n            onChange={(e) =>\r\n              setPostForm({ ...postForm, Title: e.target.value })\r\n            }\r\n          />\r\n          <div>\r\n            <div>\r\n              <label htmlFor='title'>Location:</label>\r\n              <select\r\n                name='city'\r\n                id='city'\r\n                className='user-form-dropdown'\r\n                value={postForm.location}\r\n                onChange={(e) =>\r\n                  setPostForm({ ...postForm, location: e.target.value })\r\n                }\r\n              >\r\n                {cityLocation.map((city) => (\r\n                  <option value={city} key={city}>\r\n                    {city}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div>\r\n              <label>Donation type:</label>\r\n              <div className='user-form-radio-container'>\r\n                <input\r\n                  type='radio'\r\n                  id='post-radio-cash'\r\n                  name='donation-type'\r\n                  value='cash'\r\n                  className='user-form-radio'\r\n                  onClick={(e) =>\r\n                    setPostForm({ ...postForm, donationType: e.target.value })\r\n                  }\r\n                />\r\n                <label htmlFor='post-radio-cash'>Cash</label>\r\n                <input\r\n                  type='radio'\r\n                  id='post-radio-in-kind'\r\n                  name='donation-type'\r\n                  value='in-kind'\r\n                  className='user-form-radio'\r\n                  onClick={(e) =>\r\n                    setPostForm({ ...postForm, donationType: e.target.value })\r\n                  }\r\n                />\r\n                <label htmlFor='post-radio-in-kind'>In-kind</label>\r\n                <input\r\n                  type='radio'\r\n                  id='post-radio-both'\r\n                  name='donation-type'\r\n                  value='both'\r\n                  className='user-form-radio'\r\n                  onClick={(e) =>\r\n                    setPostForm({ ...postForm, donationType: e.target.value })\r\n                  }\r\n                />\r\n                <label htmlFor='post-radio-both'>Both</label>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <label htmlFor='totalAmount'>Total amount:</label>\r\n              <input\r\n                type='number'\r\n                name='totalAmount'\r\n                id='totalAmount'\r\n                className='user-form-input'\r\n                value={postForm.totalAmount}\r\n                onChange={(e) =>\r\n                  setPostForm({ ...postForm, totalAmount: e.target.value })\r\n                }\r\n              />\r\n            </div>\r\n          </div>\r\n          <label htmlFor='description'>Details:</label>\r\n          <textarea\r\n            name='description'\r\n            value={postForm.description}\r\n            onChange={(e) =>\r\n              setPostForm({ ...postForm, description: e.target.value })\r\n            }\r\n            id='description'\r\n            className='user-form-textarea'\r\n          ></textarea>\r\n          <label className='form-label' htmlFor='postImages'>\r\n            Images:\r\n          </label>\r\n          <input\r\n            type='file'\r\n            id='postImages'\r\n            name='postImages'\r\n            onChange={(e) => {\r\n              const multifiles = e.target.files;\r\n              setFiles({ ...files, imageList: multifiles });\r\n            }}\r\n            multiple\r\n            className=''\r\n          ></input>\r\n          <div>\r\n            <Link to='/user'>Cancel</Link>\r\n            <button>Save</button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostCreateDetails;\r\n","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\ledgerPage\\LedgerCreate.jsx",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\postUpdatePage\\PostDetailUpdate.jsx",["196","197"],"import React from 'react';\r\n\r\nfunction PostDetailUpdate(props) {\r\n    return (\r\n        <div>\r\n            <h1>Title</h1>\r\n            <p>Details here</p>\r\n            <img src=\"\" alt=\"Image 1\" />\r\n            <img src=\"\" alt=\"Image 2\" />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PostDetailUpdate;","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\postUpdatePage\\PostCreateUpdate.jsx",[],["198","199"],{"ruleId":"200","replacedBy":"201"},{"ruleId":"202","replacedBy":"203"},{"ruleId":"204","severity":1,"message":"205","line":9,"column":12,"nodeType":"206","messageId":"207","endLine":9,"endColumn":22},{"ruleId":"204","severity":1,"message":"208","line":9,"column":24,"nodeType":"206","messageId":"207","endLine":9,"endColumn":37},{"ruleId":"209","severity":1,"message":"210","line":21,"column":8,"nodeType":"211","endLine":21,"endColumn":10,"suggestions":"212"},{"ruleId":"204","severity":1,"message":"213","line":15,"column":12,"nodeType":"206","messageId":"207","endLine":15,"endColumn":21},{"ruleId":"209","severity":1,"message":"214","line":55,"column":12,"nodeType":"211","endLine":55,"endColumn":14,"suggestions":"215"},{"ruleId":"204","severity":1,"message":"216","line":3,"column":8,"nodeType":"206","messageId":"207","endLine":3,"endColumn":15},{"ruleId":"217","severity":1,"message":"218","line":12,"column":17,"nodeType":"219","endLine":12,"endColumn":114},{"ruleId":"217","severity":1,"message":"218","line":23,"column":21,"nodeType":"219","endLine":23,"endColumn":97},{"ruleId":"204","severity":1,"message":"220","line":7,"column":10,"nodeType":"206","messageId":"207","endLine":7,"endColumn":23},{"ruleId":"204","severity":1,"message":"221","line":9,"column":17,"nodeType":"206","messageId":"207","endLine":9,"endColumn":25},{"ruleId":"204","severity":1,"message":"222","line":5,"column":19,"nodeType":"206","messageId":"207","endLine":5,"endColumn":27},{"ruleId":"204","severity":1,"message":"223","line":4,"column":8,"nodeType":"206","messageId":"207","endLine":4,"endColumn":16},{"ruleId":"217","severity":1,"message":"218","line":27,"column":25,"nodeType":"219","endLine":27,"endColumn":90},{"ruleId":"204","severity":1,"message":"224","line":1,"column":29,"nodeType":"206","messageId":"207","endLine":1,"endColumn":38},{"ruleId":"204","severity":1,"message":"225","line":2,"column":10,"nodeType":"206","messageId":"207","endLine":2,"endColumn":14},{"ruleId":"204","severity":1,"message":"226","line":2,"column":8,"nodeType":"206","messageId":"207","endLine":2,"endColumn":13},{"ruleId":"204","severity":1,"message":"227","line":13,"column":12,"nodeType":"206","messageId":"207","endLine":13,"endColumn":17},{"ruleId":"204","severity":1,"message":"228","line":13,"column":19,"nodeType":"206","messageId":"207","endLine":13,"endColumn":27},{"ruleId":"204","severity":1,"message":"229","line":18,"column":11,"nodeType":"206","messageId":"207","endLine":18,"endColumn":23},{"ruleId":"217","severity":1,"message":"218","line":34,"column":21,"nodeType":"219","endLine":34,"endColumn":60},{"ruleId":"217","severity":1,"message":"218","line":120,"column":21,"nodeType":"219","endLine":120,"endColumn":49},{"ruleId":"217","severity":1,"message":"218","line":121,"column":21,"nodeType":"219","endLine":121,"endColumn":49},{"ruleId":"217","severity":1,"message":"218","line":122,"column":21,"nodeType":"219","endLine":122,"endColumn":49},{"ruleId":"204","severity":1,"message":"230","line":2,"column":25,"nodeType":"206","messageId":"207","endLine":2,"endColumn":33},{"ruleId":"204","severity":1,"message":"231","line":37,"column":11,"nodeType":"206","messageId":"207","endLine":37,"endColumn":15},{"ruleId":"217","severity":1,"message":"218","line":8,"column":13,"nodeType":"219","endLine":8,"endColumn":41},{"ruleId":"217","severity":1,"message":"218","line":9,"column":13,"nodeType":"219","endLine":9,"endColumn":41},{"ruleId":"200","replacedBy":"232"},{"ruleId":"202","replacedBy":"233"},"no-native-reassign",["234"],"no-negated-in-lhs",["235"],"no-unused-vars","'userAuthID' is assigned a value but never used.","Identifier","unusedVar","'setUserAuthID' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.","ArrayExpression",["236"],"'userToken' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.history' and 'token'. Either include them or remove the dependency array.",["237"],"'banner1' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'checkPassword' is assigned a value but never used.","'setError' is assigned a value but never used.","'setPosts' is assigned a value but never used.","'PostCard' is defined but never used.","'useEffect' is defined but never used.","'Link' is defined but never used.","'axios' is defined but never used.","'files' is assigned a value but never used.","'setFiles' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'Redirect' is defined but never used.","'data' is assigned a value but never used.",["234"],["235"],"no-global-assign","no-unsafe-negation",{"desc":"238","fix":"239"},{"desc":"240","fix":"241"},"Update the dependencies array to be: [props.history]",{"range":"242","text":"243"},"Update the dependencies array to be: [props.history, token]",{"range":"244","text":"245"},[674,676],"[props.history]",[1701,1703],"[props.history, token]"]