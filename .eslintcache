[{"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\index.jsx":"1","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\app\\configStore.js":"2","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\App.jsx":"3","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\app\\reducer.js":"4","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\app\\postList.js":"5","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\app\\accounts.js":"6","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\app\\auth.js":"7","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\common\\Nav.jsx":"8","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\common\\NotFound.jsx":"9","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\landingPage\\AllPostList.jsx":"10","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\authPage\\AuthPage.jsx":"11","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\landingPage\\LandingPage.jsx":"12","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\detailsPage\\DetailsPage.jsx":"13","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\UserPage.jsx":"14","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\adminPage\\AdminPage.jsx":"15","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\app\\user.js":"16","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\route\\instagive.js":"17","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\authPage\\Login.jsx":"18","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\authPage\\Register.jsx":"19","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\authPage\\ForgotPass.jsx":"20","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\landingPage\\Content.jsx":"21","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\landingPage\\Posts.jsx":"22","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\detailsPage\\DetailsPageContent.jsx":"23","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\landingPage\\ShowContent.jsx":"24","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\common\\SideBarDonor.jsx":"25","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\PostList.jsx":"26","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\common\\Sidebar.jsx":"27","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\adminPage\\AdminPending.jsx":"28","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\adminPage\\AdminLogin.jsx":"29","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\adminPage\\AdminRejected.jsx":"30","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\adminPage\\AdminAccepted.jsx":"31","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\ledgerPage\\LedgerPage.jsx":"32","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\postDetailPage\\PostCreate.jsx":"33","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\changePassPage\\ChangePass.jsx":"34","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\postUpdatePage\\UpdateUserPost.jsx":"35","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\detailsPage\\DetailsUpdatePage.jsx":"36","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\postDetailPage\\UserPostDetails.jsx":"37","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\common\\PostCard.jsx":"38","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\others\\cityLocation.js":"39","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\postUpdatePage\\PostCreateUpdate.jsx":"40","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\postDetailPage\\PostCreateDetails.jsx":"41","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\ledgerPage\\LedgerCreate.jsx":"42","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\ledgerPage\\LedgerList.jsx":"43","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\postUpdatePage\\PostDetailUpdate.jsx":"44","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\common\\Footer.jsx":"45"},{"size":418,"mtime":1615127977598,"results":"46","hashOfConfig":"47"},{"size":181,"mtime":1615043413061,"results":"48","hashOfConfig":"47"},{"size":2115,"mtime":1615397135446,"results":"49","hashOfConfig":"47"},{"size":252,"mtime":1615043413063,"results":"50","hashOfConfig":"47"},{"size":1315,"mtime":1615043413062,"results":"51","hashOfConfig":"47"},{"size":1819,"mtime":1615043413060,"results":"52","hashOfConfig":"47"},{"size":950,"mtime":1615043413060,"results":"53","hashOfConfig":"47"},{"size":4996,"mtime":1615130120727,"results":"54","hashOfConfig":"47"},{"size":385,"mtime":1615043413065,"results":"55","hashOfConfig":"47"},{"size":3950,"mtime":1615132399757,"results":"56","hashOfConfig":"47"},{"size":1404,"mtime":1615043413072,"results":"57","hashOfConfig":"47"},{"size":423,"mtime":1615397166050,"results":"58","hashOfConfig":"47"},{"size":1955,"mtime":1615392528429,"results":"59","hashOfConfig":"47"},{"size":1658,"mtime":1615273999592,"results":"60","hashOfConfig":"47"},{"size":2085,"mtime":1615043413071,"results":"61","hashOfConfig":"47"},{"size":3154,"mtime":1615303439608,"results":"62","hashOfConfig":"47"},{"size":100,"mtime":1615043413093,"results":"63","hashOfConfig":"47"},{"size":3589,"mtime":1615364850871,"results":"64","hashOfConfig":"47"},{"size":15779,"mtime":1615396952127,"results":"65","hashOfConfig":"47"},{"size":3402,"mtime":1615364353701,"results":"66","hashOfConfig":"47"},{"size":631,"mtime":1615390558602,"results":"67","hashOfConfig":"47"},{"size":785,"mtime":1615130120730,"results":"68","hashOfConfig":"47"},{"size":1533,"mtime":1615394812112,"results":"69","hashOfConfig":"47"},{"size":1054,"mtime":1615132462121,"results":"70","hashOfConfig":"47"},{"size":8046,"mtime":1615394963240,"results":"71","hashOfConfig":"47"},{"size":3464,"mtime":1615397672062,"results":"72","hashOfConfig":"47"},{"size":508,"mtime":1615043413066,"results":"73","hashOfConfig":"47"},{"size":3056,"mtime":1615043413071,"results":"74","hashOfConfig":"47"},{"size":2819,"mtime":1615131885970,"results":"75","hashOfConfig":"47"},{"size":1526,"mtime":1615043413072,"results":"76","hashOfConfig":"47"},{"size":3054,"mtime":1615043413070,"results":"77","hashOfConfig":"47"},{"size":534,"mtime":1615043413084,"results":"78","hashOfConfig":"47"},{"size":504,"mtime":1615043413085,"results":"79","hashOfConfig":"47"},{"size":4044,"mtime":1615132128407,"results":"80","hashOfConfig":"47"},{"size":544,"mtime":1615043413088,"results":"81","hashOfConfig":"47"},{"size":1870,"mtime":1615358976785,"results":"82","hashOfConfig":"47"},{"size":9573,"mtime":1615392528445,"results":"83","hashOfConfig":"47"},{"size":3141,"mtime":1615394256055,"results":"84","hashOfConfig":"47"},{"size":418,"mtime":1615043413069,"results":"85","hashOfConfig":"47"},{"size":455,"mtime":1615043413087,"results":"86","hashOfConfig":"47"},{"size":8433,"mtime":1615367403369,"results":"87","hashOfConfig":"47"},{"size":4755,"mtime":1615192601748,"results":"88","hashOfConfig":"47"},{"size":11647,"mtime":1615398188619,"results":"89","hashOfConfig":"47"},{"size":6464,"mtime":1615398538899,"results":"90","hashOfConfig":"47"},{"size":882,"mtime":1615391065049,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"w933ur",{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"94"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"94"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"94"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"94"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"94"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"94"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"94"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"94"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"94"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"94"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"94"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"94"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"94"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"94"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"94"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"94"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"94"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"196","messages":"197","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"198","messages":"199","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"94"},"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\index.jsx",[],["201","202"],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\app\\configStore.js",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\App.jsx",["203","204"],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\app\\reducer.js",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\app\\postList.js",["205","206","207","208"],"import route from '../route/instagive'\r\n\r\n// Action Type\r\nconst POST_LIST_FECHED = 'postListFeched'\r\nconst POST_LIST_ADDED = 'postListAdded'\r\nconst POST_LIST_REMOVED = 'postListRemoved'\r\nconst POST_LIST_UPDATED = 'postListUpdated'\r\n\r\n\r\n// Action\r\nexport const postListFeched = () => async dispatch => {\r\n    const {data} = await route.get('/landing')\r\n    dispatch({\r\n        type: POST_LIST_FECHED,\r\n        payload: data\r\n    })\r\n}\r\n\r\nconst postListAdded = (post) => {\r\n    return {\r\n        type: POST_LIST_ADDED,\r\n        payload: post\r\n    }\r\n}\r\n\r\nconst postListRemoved = (id) => {\r\n    return {\r\n        type: POST_LIST_REMOVED,\r\n        payload: {id}\r\n    }\r\n}\r\n\r\nconst postListUpdated = (post) => {\r\n    return {\r\n        type: POST_LIST_UPDATED,\r\n        payload: post\r\n    }\r\n}\r\n\r\n\r\n\r\n// Reducer\r\nexport default (state=[], action) => {\r\n    switch (action.type) {\r\n        case POST_LIST_FECHED:\r\n            return action.payload\r\n    \r\n        case POST_LIST_REMOVED:\r\n            return state.filter(post => \r\n                post._id !== action.payload.id)\r\n    \r\n        case POST_LIST_UPDATED:\r\n            return state.map(post =>\r\n                post._id === action.payload.id ?\r\n                action.payload :\r\n                post)\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\app\\accounts.js",["209"],"import route from '../route/instagive'\r\n\r\n// Action Type\r\nconst ACCOUNT_FETCHED = 'accountFetched'\r\nconst ACCOUNT_APPROVED = 'accountApproved'\r\nconst ACCOUNT_REJECTED = 'accountRejected'\r\n\r\n\r\n// Actions\r\nconst accountFetched = () => async dispatch => {\r\n    const {data} = await route.get('/admin/getusers')\r\n\r\n    dispatch({\r\n        type:ACCOUNT_FETCHED,\r\n        payload: data\r\n    })\r\n}\r\n\r\nconst accountApproved = account => async dispatch => {\r\n    await route.post(`/admin/changestatus/${account._id}/approved`)\r\n    dispatch({\r\n        type:ACCOUNT_APPROVED,\r\n        payload: account\r\n    })\r\n}\r\n\r\nconst accountRejected = account => async dispatch => {\r\n    await route.post(`/admin/changestatus/${account._id}/rejected`)\r\n    dispatch({\r\n        type:ACCOUNT_REJECTED,\r\n        payload: account\r\n    })\r\n}\r\n\r\n\r\nconst accountList = {\r\n    pending: [],\r\n    approved: [],\r\n    rejected: []\r\n}\r\n// Reducer\r\nexport default (state=accountList, action) => {\r\n    switch (action.type) {\r\n        case ACCOUNT_FETCHED:\r\n            return action.payload\r\n    \r\n        case ACCOUNT_APPROVED:\r\n            return {\r\n                ...state,\r\n                pending: state.pending.filter(account => account._id !== action.payload._id),\r\n                approved: [...state.approved, action.payload]\r\n            }\r\n        \r\n        case ACCOUNT_REJECTED:\r\n            return {\r\n                ...state,\r\n                pending: state.pending.filter(account => account._id !== action.payload._id),\r\n                approved: state.approved.filter(account => account._id !== action.payload._id),\r\n                rejected: [...state.approved, action.payload]\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\nexport {\r\n    accountFetched,\r\n    accountApproved,\r\n    accountRejected\r\n}","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\app\\auth.js",["210"],"// Action Type\r\nconst AUTH_ADDED = 'authAdded'\r\nconst AUTH_REMOVED = 'authRemoved'\r\n\r\n// Actions\r\nconst authAdd = (token, type) => {\r\n    return {\r\n        type: AUTH_ADDED,\r\n        payload: {\r\n            token,\r\n            type\r\n        }\r\n    }\r\n}\r\n\r\nconst authRemove = () => {\r\n    return {\r\n        type: AUTH_REMOVED,\r\n        payload: {\r\n            token: '',\r\n            type: ''\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// Data\r\nconst authData = {\r\n    token: '',\r\n    type: ''\r\n}\r\n\r\n\r\n// Reducer\r\nexport default (auth=authData, action) => {\r\n    switch (action.type) {\r\n        case AUTH_ADDED:\r\n            return {\r\n                token: action.payload.token,\r\n                type: action.payload.type\r\n            }\r\n        \r\n        case AUTH_REMOVED:\r\n            return {\r\n                token: '',\r\n                type: ''\r\n            }\r\n\r\n        default:\r\n            return auth\r\n    }\r\n}\r\n\r\n\r\nexport {\r\n    authAdd,\r\n    authRemove\r\n}","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\common\\Nav.jsx",["211"],"import React from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\n\r\nimport { authRemove } from '../../app/auth'\r\nimport logo from '../../img/Instagive-logo-2.png'\r\nimport '../../style/common/Nav.css'\r\n\r\nfunction Nav(props) {\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n\r\n    const handleMenu = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <nav className=\"navBar\">\r\n            <span>\r\n                <Link to=\"/\" className='navLogo'>\r\n                    <img src={logo} alt=\"logo\" height='45px' className='logo' style={{ marginRight: 10 }} />\r\n                    <p className='navLogoName'>InstaGive</p>\r\n                </Link>\r\n                <span>\r\n                    {/* Other nav links */}\r\n                </span>\r\n            </span>\r\n            <span className='navLogin'>\r\n                {props.auth.token ?\r\n                    <span>\r\n                        {props.auth.type === 'user' ?\r\n                            <span>\r\n                                <div>\r\n                                    <IconButton\r\n                                        aria-label=\"account of current user\"\r\n                                        aria-controls=\"menu-appbar\"\r\n                                        aria-haspopup=\"true\"\r\n                                        onClick={handleMenu}\r\n                                        color=\"inherit\"\r\n                                    >\r\n                                        <AccountCircle fontSize='large' />\r\n                                    </IconButton>\r\n                                    <Menu\r\n                                        id=\"menu-appbar\"\r\n                                        anchorEl={anchorEl}\r\n                                        anchorOrigin={{\r\n                                            vertical: 'top',\r\n                                            horizontal: 'right',\r\n                                        }}\r\n                                        keepMounted\r\n                                        transformOrigin={{\r\n                                            vertical: 'top',\r\n                                            horizontal: 'right',\r\n                                        }}\r\n                                        open={open}\r\n                                        onClose={handleClose}\r\n                                    >\r\n                                        <MenuItem>\r\n                                            <NavLink to=\"/user/ledger\" className='navLink'>Ledger</NavLink>\r\n                                        </MenuItem>\r\n                                        <MenuItem>\r\n                                            <NavLink to=\"/user\" className='navLink'>Dashboard</NavLink>\r\n                                        </MenuItem>\r\n                                        <MenuItem>\r\n                                            <NavLink to=\"/user/change-password\" className='navLink'>ChangePassword</NavLink>\r\n                                        </MenuItem>\r\n                                        <MenuItem>\r\n                                            <NavLink to='/' className='navLink' onClick={() => {\r\n                                                localStorage.removeItem('user')\r\n                                                localStorage.removeItem('admin')\r\n                                                props.authRemove()\r\n                                            }}>Logout</NavLink>\r\n                                        </MenuItem>\r\n                                    </Menu>\r\n                                </div>\r\n                            </span> :\r\n                            <NavLink to='/' className='navLink' onClick={() => {\r\n                                localStorage.removeItem('user')\r\n                                localStorage.removeItem('admin')\r\n                                props.authRemove()\r\n                            }}>Logout</NavLink>\r\n                        }\r\n                    </span> :\r\n                    <span>\r\n                        <NavLink to=\"/auth/register\" className='navLink'>Signup</NavLink>\r\n                        |\r\n                        <NavLink to=\"/auth/login\" className='navLink'>Login</NavLink>\r\n                    </span>\r\n                }\r\n            </span>\r\n        </nav>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    console.log(state);\r\n    return { auth: state.auth }\r\n}\r\n\r\nexport default connect(mapStateToProps, { authRemove })(Nav);","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\common\\NotFound.jsx",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\landingPage\\AllPostList.jsx",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\authPage\\AuthPage.jsx",["212","213","214"],"import React, { useEffect, useState } from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport Login from './Login';\r\nimport Register from './Register';\r\nimport ForgotPass from './ForgotPass';\r\nimport '../../../style/authPage/authPage.css'\r\n\r\nfunction AuthPage(props) {\r\n    const [userAuthID, setUserAuthID] = useState()\r\n\r\n    useEffect(() => {\r\n        // check if there's a user in coockies\r\n        const userAuthID = localStorage.getItem('user')\r\n\r\n        const validateAuthID = async () => {\r\n            // Same logic for user login\r\n            if (userAuthID) props.history.replace('/user')\r\n        }\r\n\r\n        validateAuthID()\r\n    }, [])\r\n\r\n    return (\r\n        <div className='auth-container'>\r\n            <div className='authBackgroundImage'>\r\n            </div>\r\n            <div className='authForm'>\r\n                <div className='center'>\r\n                    <Switch>\r\n                        <Route path='/auth/login' component={Login} />\r\n                        <Route path='/auth/register' component={Register} />\r\n                        <Route path='/auth/forgot' component={ForgotPass} />\r\n                        <Redirect from='/auth' to='/auth/login' exact />\r\n                        <Redirect to='/not-found' />\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AuthPage;","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\landingPage\\LandingPage.jsx",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\detailsPage\\DetailsPage.jsx",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\UserPage.jsx",["215"],"import React, { useEffect } from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nimport PostList from './PostList';\r\nimport LedgerPage from './ledgerPage/LedgerPage';\r\nimport PostCreate from './postDetailPage/PostCreate';\r\nimport UserPostDetails from './postDetailPage/UserPostDetails';\r\nimport ChangePass from './changePassPage/ChangePass';\r\nimport UpdateUserPost from './postUpdatePage/UpdateUserPost';\r\nimport { authRemove } from '../../../app/auth'\r\nimport { userDataFetch } from '../../../app/user'\r\n\r\nfunction UserPage(props) {\r\n    useEffect(() => {\r\n        if (!localStorage.getItem('user')) return props.history.push('/auth')\r\n        if (props.auth.token) {\r\n            props.userDataFetch(props.auth.token)\r\n        }\r\n\r\n    }, [props.auth.token])\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Switch>\r\n                    <Route path='/user/change-password' component={ChangePass} />\r\n                    <Route path='/user/post-create' component={PostCreate} />\r\n                    <Route path='/user/post-details/:id' component={UserPostDetails} />\r\n                    <Route path='/user/ledger' component={LedgerPage} />\r\n                    <Route path='/user/update-details/:id' component={UpdateUserPost} />\r\n                    <Route path='/user/' exact component={PostList} />\r\n                    <Redirect to='/not-found' />\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return state\r\n}\r\n\r\nexport default connect(mapStateToProps, { authRemove, userDataFetch })(UserPage);","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\adminPage\\AdminPage.jsx",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\app\\user.js",["216","217"],"import route from '../route/instagive'\r\nimport axios from 'axios'\r\n\r\n// Action Types\r\nconst USER_DATA_FETCH = 'userDataFetch'\r\nconst USER_LEDGER_ADDED = 'userLedgerAdded'\r\nconst USER_LEDGER_REMOVED = 'userLedgerRemoved'\r\nconst USER_LEDGER_UPDATED = 'userLedgerUpdated'\r\n\r\nconst USER_POST_ADDED = 'userPostAdded'\r\nconst USER_POST_REMOVED = 'userPostRemoved'\r\nconst USER_POST_UPDATED = 'userPostUpdated'\r\n\r\n\r\n// Action\r\n// Ledger\r\nconst userDataFetch = (token) => async dispatch => {\r\n    const { data: ledger } = await route.post('/ledger/getall', {token})\r\n    const { data: post } = await route.post('/post/userpost', { token })\r\n\r\n    dispatch({\r\n        type: USER_DATA_FETCH,\r\n        payload: {ledger, post} \r\n    })\r\n}\r\n\r\n\r\nconst userLedgerAdded = (ledgerForm, token) => async dispatch => {\r\n    await axios.post(`http://localhost:5000/ledger/${ledgerForm.postId}`, { ...ledgerForm, token })\r\n    let newForm = {...ledgerForm}\r\n    if (!ledgerForm.donorName) newForm = {...newForm, donorName: 'Anonymous'}\r\n    if (!ledgerForm.email) newForm = {...newForm, email: 'None'}\r\n\r\n    dispatch({\r\n        type: USER_LEDGER_ADDED,\r\n        payload: newForm\r\n    })\r\n}\r\n\r\n\r\n// Post\r\nconst userPostAdded = (formdata) => async dispatch => {\r\n    // await route.post('/post/createpost', formdata)\r\n    console.log(...formdata);\r\n    dispatch({\r\n        type: USER_POST_ADDED,\r\n        payload: formdata\r\n    })\r\n}\r\nconst userPostRemoved = () => async dispatch => {\r\n    // await route.post()\r\n\r\n    dispatch({\r\n        type: USER_POST_REMOVED,\r\n        payload: {\r\n\r\n        }\r\n    })\r\n}\r\nconst userPostUpdated = (postForm, postID, userToken) => async dispatch => {\r\n    await route.put(`/post/edit/${postID}`, { ...postForm, token: userToken })\r\n    dispatch({\r\n        type: USER_POST_UPDATED,\r\n        payload: {\r\n            _id: postID,\r\n            ...postForm\r\n        }\r\n    })\r\n}\r\n\r\n\r\n// Data\r\nconst userData = {\r\n    ledger: [],\r\n    post: []\r\n}\r\n\r\n\r\n// Reducer\r\nexport default (state=userData, action) => {\r\n    switch (action.type) {\r\n        case USER_DATA_FETCH:\r\n            return action.payload\r\n    \r\n        case USER_LEDGER_ADDED:\r\n            return {...state, ledger: [...state.ledger, action.payload]}\r\n    \r\n        case USER_LEDGER_REMOVED:\r\n            return {\r\n                ...state,\r\n                ledger: state.ledger.filter(ledger => ledger._id !== action.payload._id)\r\n            }\r\n    \r\n        case USER_LEDGER_UPDATED:\r\n            return state\r\n    \r\n        case USER_POST_ADDED:\r\n            return {...state, post: [...state.post, action.payload]}\r\n    \r\n        case USER_POST_REMOVED:\r\n            return {\r\n                ...state,\r\n                post: state.post.filter(post => post._id !== action.payload._id)\r\n            }\r\n    \r\n        case USER_POST_UPDATED:\r\n            return {\r\n                ...state,\r\n                post: state.post.map(post => post._id === action.payload._id ? {...post, ...action.payload} : post)\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport {\r\n    userDataFetch,\r\n    userLedgerAdded,\r\n\r\n    userPostUpdated,\r\n    userPostAdded\r\n}","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\route\\instagive.js",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\authPage\\Login.jsx",["218","219","220"],"import axios from 'axios';\r\nimport React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux'\r\n\r\nimport { authAdd } from '../../../app/auth'\r\nimport route from '../../../route/instagive'\r\nimport '../../../style/authPage/login.css';\r\n\r\nimport {TextField, Button, Snackbar} from '@material-ui/core'\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\n\r\nfunction Login(props) {\r\n  const [auth, setAuth] = useState({ username: '', password: '' });\r\n  const [error, setError] = useState({\r\n\r\n    valid: false,\r\n    msg: '',\r\n    severity: ''\r\n\r\n  });\r\n  \r\n\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const { data } = await route.post('/user/login', auth);\r\n\r\n    if (data.valid !== true) {\r\n    \r\n      if(data.valid === 'Credentials Error') \r\n      setError({valid: true, msg: data.valid, severity: 'warning' })\r\n      else  setError({valid: true, msg: data.valid, severity: 'info' })\r\n\r\n\r\n    } else {\r\n      // Set Item\r\n      localStorage.setItem('user', data.token)\r\n      props.authAdd(data.token, 'user')\r\n      props.history.push('/user')\r\n\r\n    }\r\n\r\n    // If there is error in auth, set the error to TRUE\r\n    setAuth({username: '', password: ''})\r\n  };\r\n\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return; \r\n    }\r\n\r\n    setError({...error, valid: false});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n\r\n\r\n\r\n\r\n  return (\r\n\r\n\r\n\r\n\r\n    <div className='LoginContainer'>\r\n   \r\n    \r\n   <Snackbar open={error.valid} autoHideDuration={4000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity={error.severity}>\r\n         {error.msg}\r\n        </Alert>\r\n      </Snackbar>\r\n      \r\n\r\n\r\n\r\n\r\n\r\n   \r\n\r\n      <div>\r\n        <h1 className='authTitle'>Welcome!</h1>\r\n\r\n\r\n\r\n      </div>\r\n      <form className='form-container' onSubmit={handleSubmit} >\r\n      \r\n    \r\n\r\n        <TextField\r\n          type='email'\r\n          name='email'\r\n          id='email'\r\n          className='form-input-text'\r\n          margin=\"normal\"\r\n\r\n          variant=\"outlined\"\r\n          label=\"Enter Email\"\r\n          autoFocus\r\n          \r\n          required={true}\r\n          value={auth.username}\r\n          onChange={(e) => setAuth({ ...auth, username: e.target.value })}\r\n        />\r\n    \r\n        <TextField\r\n          \r\n          type='password'\r\n          margin=\"normal\"\r\n          required={true}\r\n          fullWidth\r\n          name='password'\r\n          id='password'\r\n          variant=\"outlined\"\r\n          label=\"Enter Password\"\r\n          className='form-input-text'\r\n          required={true}\r\n          value={auth.password}\r\n          onChange={(e) => setAuth({ ...auth, password: e.target.value })}\r\n        />\r\n        <div style={{ width: '100%' }}>\r\n         <Button variant=\"text\"> <Link to='/auth/forgot' className='form-link'>\r\n            Forgot Password\r\n          </Link> </Button>\r\n          <div className='form-button-container'>\r\n            <Button fullWidth style={{margin: '10px'}} color=\"primary\" variant=\"contained\" type=\"submit\">Login</Button>\r\n           \r\n            <Button  style={{margin: '10px'}} fullWidth variant=\"contained\"\r\n              onClick={() => props.history.push('/auth/register')}\r\n            >\r\n              Sign up\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default connect(null, { authAdd })(Login);\r\n","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\authPage\\Register.jsx",["221","222","223"],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\authPage\\ForgotPass.jsx",["224"],"import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport '../../../style/authPage/forgotPassword.css'\r\nimport axios from 'axios'\r\nimport {TextField, Button, Snackbar} from '@material-ui/core'\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nfunction ForgotPass(props) {\r\n    const [email, setEmail] = useState('')\r\n\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault()\r\n\r\n\r\n    const query = async () =>{\r\n\r\n\r\n       const forgotPass =  await axios.post('http://localhost:5000/user/forgotPassword', {email})\r\n        console.log(forgotPass.data.valid)\r\n\r\n        if(forgotPass.data.valid === false) {\r\n            setOpen({open: true, severity: 'error', msg: 'Email Not Found!'  })\r\n        }\r\n        else if(forgotPass.data.valid === true){ \r\n            setOpen({open: true, severity: 'success', msg: 'Temporary Password Sent Successfully'  })\r\n            \r\n        } \r\n\r\n        setEmail('');\r\n\r\n\r\n    }\r\n\r\n    query();\r\n        \r\n    }\r\n\r\n\r\n    function Alert(props) {\r\n        return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n      }\r\n      \r\n      const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n          width: '100%',\r\n          '& > * + *': {\r\n            marginTop: theme.spacing(2),\r\n          },\r\n        },\r\n      }));\r\n\r\n      const classes = useStyles();\r\n      const [open, setOpen] = React.useState({open: false, severity: '', msg: ''});\r\n    \r\n    \r\n    \r\n      const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n          return; \r\n        }\r\n    \r\n        setOpen({...open, open: false});\r\n      };\r\n    \r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div>\r\n\r\n      <Snackbar open={open.open} autoHideDuration={4000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity={open.severity}>\r\n         {open.msg}\r\n        </Alert>\r\n      </Snackbar>\r\n      \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        <div className='forgot-pass-container'>\r\n            <div className='forgot-pass-title'>\r\n                <h1 className='authTitle'>Forgot Password</h1>\r\n                <p className='authDetails'>Will send your temporary password in your email, Please change it after you logged in</p>\r\n            </div>\r\n            <form className='form-container' onSubmit={handleSubmit}>\r\n            \r\n              \r\n              \r\n                <TextField required={true} variant=\"outlined\" label=\"Enter Your Email\" fullWidth type=\"email\" name=\"email\" id=\"email\" value={email} style={{marginBottom: \"10px\"}}  onChange={e => {setEmail(e.target.value); console.log(email)}} />\r\n             \r\n             \r\n             \r\n             \r\n             \r\n          \r\n          \r\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>Send</Button>\r\n\r\n          \r\n            </form>\r\n            \r\n            \r\n            \r\n            \r\n            <div style={{ width: '100%' }} className='form-button-container'>\r\n                <div>\r\n                   <Button variant=\"text\"><Link to=\"/auth/login\" className='form-link'>Login</Link></Button> \r\n                   <Button variant=\"text\">  <Link to=\"/auth/register\" className='form-link'>Signup</Link> </Button> \r\n                </div>\r\n               \r\n            </div>\r\n        </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ForgotPass;","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\landingPage\\Content.jsx",["225","226","227","228","229","230"],"import React from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Container from '@material-ui/core/Container';\r\nimport imgWave from '../../../img/wave.png'\r\nimport orgPhoto from '../../../img/org-image-content.png'\r\nimport unknownUserPhoto from '../../../img/unknown-user.png'\r\nimport checkPhoto from '../../../img/check.png'\r\nimport { Typography } from '@material-ui/core/';\r\n\r\n\r\n\r\n\r\nfunction Content(props) {\r\n    return (\r\n        <div className='content-container'>\r\n       \r\n            <img src={imgWave} alt=\"wave\" className='content-wave' />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Content;","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\landingPage\\Posts.jsx",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\detailsPage\\DetailsPageContent.jsx",["231","232"],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\landingPage\\ShowContent.jsx",["233"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport '../../../style/landingPage/showContent.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction ShowContent(props) {\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    margin: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    extendedIcon: {\r\n      marginRight: theme.spacing(1),\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div id='showcase'>\r\n      <div className='container showcase-container'>\r\n        <h1>Welcome to InstaGive</h1>\r\n        <p>\r\n          Online donation platform for the residence of Pampanga\r\n        </p>\r\n        <Button\r\n        classes\r\n          variant=\"contained\"\r\n          size=\"large\"\r\n          style={{ opacity: 0.9 }}\r\n          color=\"primary\" className={classes.margin}\r\n          onClick={() => props.history.push('/post-list')}>\r\n          Browse Donations\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ShowContent;\r\n","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\common\\SideBarDonor.jsx",["234","235"],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\PostList.jsx",["236","237","238"],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\common\\Sidebar.jsx",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\adminPage\\AdminPending.jsx",["239"],"import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCheck, faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport axios from 'axios'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { accountApproved, accountRejected } from '../../../app/accounts'\r\n\r\n\r\nfunction AdminPending(props) {\r\n\r\n    const theadData = [\r\n        {\r\n            label: 'Organization',\r\n            name: 'orgName'\r\n        },\r\n        {\r\n            label: 'Email',\r\n            name: 'email'\r\n        },\r\n        {\r\n            label: 'City',\r\n            name: 'city'\r\n        },\r\n        {\r\n            label: 'Rep. Name',\r\n            name: 'repName'\r\n        },\r\n    ]\r\n\r\n    const handleApproveAccount = async (account) => {\r\n        // await axios.post(`http://localhost:5000/admin/changestatus/${account}/approved`)\r\n        //     .then(() => accountList = [])\r\n        props.accountApproved(account)\r\n        // window.location.reload();\r\n    };\r\n\r\n    const handleRejectAccount = async (account) => {\r\n        props.accountRejected(account)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1 className='admin-page-title'>Pending</h1>\r\n            <table className='table-container'>\r\n                <thead>\r\n                    <tr>\r\n                        {theadData.map(tableHead =>\r\n                            <th key={tableHead.name} className='table-header'>{tableHead.label}</th>\r\n                        )}\r\n                        <th>Status</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {props.accountPending.map(account =>\r\n                        <tr key={account._id}>\r\n                            {theadData.map(tableHead =>\r\n                                <td key={tableHead.name} className='table-item'>\r\n                                    {account[tableHead.name]}\r\n                                </td>\r\n                            )}\r\n                            <td className='table-item' id='table-button-container'>\r\n                                <FontAwesomeIcon\r\n                                    icon={faCheck}\r\n                                    className='table-icon'\r\n                                    size='lg'\r\n                                    onClick={() => handleApproveAccount(account)}\r\n                                />\r\n                                <FontAwesomeIcon\r\n                                    icon={faTimes}\r\n                                    className='table-icon'\r\n                                    size='lg'\r\n                                    onClick={() => handleRejectAccount(account)}\r\n                                />\r\n                            </td>\r\n                        </tr>\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return { accountPending: state.accounts.pending }\r\n}\r\nexport default connect(mapStateToProps, { accountApproved, accountRejected })(AdminPending);","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\adminPage\\AdminLogin.jsx",["240","241"],"import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport {Container, TextField,  Typography,  CssBaseline, Button} from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nfunction AdminLogin(props) {\r\n    const [auth, setAuth] = useState({ username: '', password: '' })\r\n\r\n    const handleSubmit = async event => {\r\n        event.preventDefault()\r\n\r\n        const valid = await axios.post('http://localhost:5000/admin/login', auth);\r\n      \r\n        if (valid.data.valid !== true) \r\n            window.alert(valid.data.valid);\r\n    \r\n        else{\r\n\r\n\r\n            console.log(valid.data.token);\r\n      localStorage.setItem('admin', valid.data.token)\r\n      window.location.reload();\r\n\r\n      window.alert('Login Success');\r\n\r\n        }\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        paper: {\r\n          marginTop: theme.spacing(8),\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          alignItems: 'center',\r\n          justifyContent: 'center'\r\n        },\r\n        avatar: {\r\n          margin: theme.spacing(1),\r\n          backgroundColor: theme.palette.secondary.main,\r\n        },\r\n        form: {\r\n          width: '100%', \r\n          marginTop: theme.spacing(1),\r\n        },\r\n        submit: {\r\n          margin: theme.spacing(3, 0, 2),\r\n        },\r\n      }));\r\n    \r\n    \r\n    \r\n      const classes = useStyles();\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    return (\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        \r\n        <Container component=\"main\" maxWidth=\"sm\" >\r\n\r\n\r\n\r\n\r\n<CssBaseline/>\r\n\r\n\r\n\r\n\r\n  <div className={classes.paper}>\r\n   \r\n  \r\n\r\n            <div style={{padding: '5px 25px 50px 25px'}} className=\"shadow-container\">\r\n                <h1 style={{position:'relative', left:'30%'}} className='authTitle'>Admin Login</h1>\r\n          \r\n            \r\n          \r\n            <form action=\"#\" className='form-container' >\r\n                <TextField style={{marginBottom: '12px'}}variant=\"outlined\" type=\"text\" name=\"username\" id=\"username\" label='Enter Username: ' className='form-input-text' value={auth.username} onChange={e => setAuth({ ...auth, username: e.target.value })} />\r\n                <TextField style={{marginBottom: '12px'}} variant=\"outlined\" type=\"password\" name=\"password\" id=\"password\" label='Enter Password' className='form-input-text' value={auth.password} onChange={e => setAuth({ ...auth, password: e.target.value })} />\r\n              \r\n              \r\n              \r\n              \r\n              \r\n                    <Button variant=\"contained\" color=\"primary\"  onClick={handleSubmit} fullWidth>Login</Button>\r\n            </form>\r\n            </div>\r\n            </div>\r\n            </Container>\r\n            \r\n    );\r\n}\r\n\r\nexport default AdminLogin;","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\adminPage\\AdminRejected.jsx",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\adminPage\\AdminAccepted.jsx",["242","243"],"import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faEdit, faTrash } from '@fortawesome/free-solid-svg-icons'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { accountRejected } from '../../../app/accounts'\r\n\r\nfunction AdminAccepted(props) {\r\n    const theadData = [\r\n        {\r\n            label: 'Organization',\r\n            name: 'orgName'\r\n        },\r\n        {\r\n            label: 'Email',\r\n            name: 'email'\r\n        },\r\n        {\r\n            label: 'City',\r\n            name: 'city'\r\n        },\r\n        {\r\n            label: 'Rep. Name',\r\n            name: 'repName'\r\n        },\r\n    ]\r\n\r\n    const handleEditButton = (account) => {\r\n        console.log(account);\r\n    }\r\n\r\n    const handleDeleteButton = async (account) => {\r\n        props.accountRejected(account)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1 className='admin-page-title'>Accepted</h1>\r\n            <table className='table-container'>\r\n                <thead>\r\n                    <tr>\r\n                        {theadData.map(tableHead =>\r\n                            <th key={tableHead.name} className='table-header'>{tableHead.label}</th>\r\n                        )}\r\n                        <th className='table-header'>No. of Post</th>\r\n                        <th className='table-header'>Status</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {props.accApproved.map(account =>\r\n                        <tr key={account._id}>\r\n                            {theadData.map(tableHead =>\r\n                                <td key={tableHead.name} className='table-item'>\r\n                                    {account[tableHead.name]}</td>\r\n                            )}\r\n                            <td className='table-item'>\r\n\r\n                            </td>\r\n                            <td className='table-item'>\r\n                                {/* <FontAwesomeIcon\r\n                                    icon={faEdit}\r\n                                    className='table-icon'\r\n                                    size='lg'\r\n                                    onClick={e => handleEditButton(account)}\r\n                                    style={{ cursor: 'pointer' }}\r\n                                /> */}\r\n                                <FontAwesomeIcon\r\n                                    icon={faTrash}\r\n                                    className='table-icon'\r\n                                    size='lg'\r\n                                    onClick={e => handleDeleteButton(account)}\r\n                                    style={{ cursor: 'pointer' }}\r\n                                />\r\n                            </td>\r\n                        </tr>\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return { accApproved: state.accounts.approved }\r\n}\r\n\r\nexport default connect(mapStateToProps, { accountRejected })(AdminAccepted);","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\ledgerPage\\LedgerPage.jsx",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\postDetailPage\\PostCreate.jsx",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\changePassPage\\ChangePass.jsx",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\postUpdatePage\\UpdateUserPost.jsx",["244"],"import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport PostCreateUpdate from './PostCreateUpdate';\r\nimport PostDetailUpdate from './PostDetailUpdate';\r\n\r\nfunction UpdateUserPost(props) {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route path='/user/update-details/:id/create' component={PostCreateUpdate} />\r\n                <Route path='/user/update-details/:id' component={PostDetailUpdate} />\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UpdateUserPost;","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\detailsPage\\DetailsUpdatePage.jsx",["245"],"import axios from 'axios';\r\nimport React, { useState, useEffect } from 'react';\r\nimport '../../../style/detailsPage/detailsUpdatePage.css'\r\nimport Carousel from 'react-elastic-carousel'\r\nimport 'styled-components'\r\nimport { connect } from 'react-redux';\r\nimport '../../../style/detailsPage/detailsUpdatePage.css'\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction DetailsUpdatePage(props) {\r\n    const [updateList, setUpdateList] = useState([])\r\n    console.log(props);\r\n\r\n    useEffect(() => {\r\n        const getUpdateList = async () => {\r\n            const { data } = await axios.post(`http://localhost:5000/updates/getall/${props.match.params.id}`, { token: props.authToken })\r\n            setUpdateList(data)\r\n        }\r\n\r\n        if (props.post) {\r\n            getUpdateList()\r\n        }\r\n    }, [props.post])\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className='landing-post-update-container'>\r\n            {props.children}\r\n            <div className=''>\r\n                {updateList.map(update =>\r\n                    <div key={update._id} className='landing-post-update-faded'>\r\n                        <div>\r\n                            <Carousel itemsToShow={1}>\r\n                                {update.imageList.map(image => <img src={`/docs/${image}`} alt={image} key={image} style={{ height: '40vh', width: '100%' }} />)}\r\n                            </Carousel>\r\n                        </div>\r\n                        <div className=''>\r\n                            {update.description}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = (state, myProps) => {\r\n    const post = state.postList.find(post => post._id === myProps.match.params.id)\r\n    const authToken = state.auth.token\r\n    return { post, authToken }\r\n}\r\n\r\nexport default connect(mapStateToProps)(DetailsUpdatePage);","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\postDetailPage\\UserPostDetails.jsx",["246"],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\common\\PostCard.jsx",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\others\\cityLocation.js",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\postUpdatePage\\PostCreateUpdate.jsx",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\postDetailPage\\PostCreateDetails.jsx",["247"],"import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../../../../style/userPage/userPage.css';\r\nimport { cityLocation } from '../../../others/cityLocation';\r\nimport axios from 'axios';\r\nimport {\r\n  Container,\r\n  TextField,\r\n  Typography,\r\n  CssBaseline,\r\n  Button,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  FormLabel,\r\n  FormControlLabel,\r\n  Radio,\r\n  RadioGroup,\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nfunction PostCreateDetails(props) {\r\n  const [postForm, setPostForm] = useState({\r\n    Title: '',\r\n    description: '',\r\n    location: '',\r\n    donationType: 'Cash',\r\n    totalAmount: '',\r\n  });\r\n  const [files, setFiles] = useState({\r\n    imageList: '',\r\n    profilePic: '',\r\n  });\r\n\r\n  const [numberImage, setNumberImage] = useState({\r\n\r\n    name: ''\r\n\r\n  })\r\n  const [numberImageList, setNumberImageList] = useState(0)\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const formdata = new FormData();\r\n\r\n    formdata.append('profilePic', files.profilePic);\r\n\r\n    for (const key in files.imageList) {\r\n      formdata.append('imageList', files.imageList[key]);\r\n    }\r\n    formdata.append('Title', postForm.Title);\r\n    formdata.append('description', postForm.description);\r\n    formdata.append('location', postForm.location);\r\n    formdata.append('donationType', postForm.donationType);\r\n    formdata.append('totalAmount', postForm.totalAmount);\r\n    formdata.append('token', localStorage.getItem('user'));\r\n   \r\n\r\n    console.log(...formdata);\r\n\r\n\r\n    const data = await axios.post(\r\n      'http://localhost:5000/post/createpost',\r\n      formdata\r\n    );\r\n\r\n\r\n    window.location.replace('http://localhost:5001/user');\r\n  };\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      marginTop: theme.spacing(8),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n      width: '100%',\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n    formControl: {\r\n      minWidth: 120,\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Container component='main' maxWidth='md'>\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n\r\n          <div style={{ padding: '50px 25px 50px 25px' }} className=\"shadow-container\">\r\n\r\n\r\n            <Typography component='h1' variant='h5'>\r\n              Creating New Post{' '}\r\n            </Typography>\r\n\r\n            <form encType='multipart/form-data' className={classes.form} onSubmit={handleSubmit}>\r\n              <Button variant='outlined' color='primary' component='label' >\r\n                {`Upload Cover Photo : ${numberImage.name === '' ? 'NONE' : numberImage.name}`}\r\n                <input\r\n                  hidden\r\n                  type='file'\r\n                  required={true}\r\n                  onChange={(e) => {\r\n                    const file = e.target.files[0];\r\n                    setFiles({ ...files, profilePic: file });\r\n                    setNumberImage({ name: e.target.files[0].name })\r\n                  }}\r\n                ></input>\r\n              </Button>\r\n\r\n              <TextField\r\n                color='primary'\r\n                margin='normal'\r\n                fullWidth\r\n                variant='outlined'\r\n                label='Enter Post Title'\r\n                type='text'\r\n                required={true}\r\n                name='title'\r\n                id='title'\r\n                className='user-form-input'\r\n                value={postForm.Title}\r\n                onChange={(e) =>\r\n                  setPostForm({ ...postForm, Title: e.target.value })\r\n                }\r\n              />\r\n\r\n\r\n\r\n              <FormControl fullWidth className={classes.formControl}>\r\n                <InputLabel style={{ marginLeft: '12px' }} id='city'>\r\n                  Select Location\r\n              </InputLabel>\r\n\r\n                <Select\r\n                  required={true}\r\n                  variant='outlined'\r\n                  label='city'\r\n                  name='city'\r\n                  id='city'\r\n                  fullWidth\r\n                  value={postForm.location}\r\n                  onChange={(e) =>\r\n                    setPostForm({ ...postForm, location: e.target.value })\r\n                  }\r\n                >\r\n                  {cityLocation.map((city) => (\r\n                    <MenuItem key={city} value={city}>{city}</MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n              <FormControl\r\n                component='fieldset'\r\n                style={{ margin: '12px 0 0 12px' }}\r\n              >\r\n                <FormLabel component='legend'>Select Donation Type</FormLabel>\r\n                <RadioGroup\r\n                  aria-label='gender'\r\n                  name='gender1'\r\n                  value={postForm.donationType}\r\n                  onChange={(e) =>\r\n                    setPostForm({ ...postForm, donationType: e.target.value, totalAmount: 0 })\r\n                  }\r\n                >\r\n                  <FormControlLabel\r\n                    value='Cash'\r\n                    control={<Radio />}\r\n                    label='Cash'\r\n                  />\r\n                  <FormControlLabel\r\n                    value='In-Kind'\r\n                    control={<Radio />}\r\n                    label='In-Kind'\r\n                  />\r\n                  <FormControlLabel\r\n                    value='Both'\r\n                    control={<Radio />}\r\n                    label='Both'\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n\r\n\r\n            {postForm.donationType === 'In-Kind' ? '' : \r\n\r\n\r\n              <TextField\r\n                required={true}\r\n                color='primary'\r\n                margin='normal'\r\n                fullWidth\r\n                variant='outlined'\r\n                label='Enter Amount'\r\n                type='number'\r\n                name='totalAmount'\r\n                id='totalAmount'\r\n                className='user-form-input'\r\n                value={postForm.totalAmount}\r\n                onChange={(e) =>\r\n                  setPostForm({ ...postForm, totalAmount: e.target.value })\r\n               \r\n                }\r\n              />\r\n              }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n              <TextField\r\n              required={true}\r\n                variant=\"outlined\"\r\n                rows={10}\r\n                type='text'\r\n                multiline\r\n                id='description'\r\n                fullWidth\r\n\r\n\r\n\r\n                label=\"Enter your Post Description, You can include your own payment option and account, (etc, GCASH, BPI, PAYPAL) or  your address for In-Kind Donation\"\r\n                name='description'\r\n                value={postForm.description}\r\n                onChange={(e) =>\r\n                  setPostForm({ ...postForm, description: e.target.value })\r\n                }\r\n\r\n\r\n\r\n\r\n              />\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n              <Button variant='outlined' color='primary' component='label' style={{ marginTop: '12px' }}>\r\n                {`Upload Reference Picture (Can Have Multiple Pictures) | Files Selected: ${numberImageList}`}\r\n                <input\r\n                required={true}\r\n                  hidden\r\n                  type='file'\r\n                  id='postImages'\r\n                  name='postImages'\r\n                  onChange={(e) => {\r\n                    const multifiles = e.target.files;\r\n                    setFiles({ ...files, imageList: multifiles });\r\n                    setNumberImageList(e.target.files.length)\r\n                  }}\r\n                  multiple\r\n\r\n                ></input>\r\n              </Button>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n              <div style={{ marginTop: '12px', display: 'flex' }}>\r\n                <Button variant='outlined' color=\"default\" style={{ marginRight: '12px' }}> <Link to='/user'>Cancel</Link> </Button>\r\n\r\n\r\n\r\n                <Button variant='contained' color='primary' type=\"submit\">Save</Button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default PostCreateDetails;\r\n","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\ledgerPage\\LedgerCreate.jsx",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\ledgerPage\\LedgerList.jsx",["248","249","250","251","252"],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\postUpdatePage\\PostDetailUpdate.jsx",["253","254"],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\common\\Footer.jsx",["255","256","257","258"],"import {AppBar, Toolbar, Typography} from '@material-ui/core'\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\n\r\n\r\nconst Footer = () => {\r\n\r\n\r\n\r\n\r\nreturn (\r\n    <div>\r\n   \r\n   <footer style={{display: 'flex', justifyContent:'center' ,background: '#26262b', padding: '30px', color: 'white' }}\r\n   \r\n   \r\n   \r\n   \r\n   \r\n   >\r\n\r\n\r\n<Typography variant=\"h2\" gutterBottom>\r\n    Want us to post for you? Contact Us! <a href=\"https://www.facebook.com/Instagive-114092927169420\" target=\"_blank\" ><FacebookIcon color=\"primary\" style={{fontSize: '55px'}}></FacebookIcon></a>\r\n    \r\n    <a href=\"mailto:instagive2021@gmail.com\" target=\"_blank\" ><EmailIcon color=\"primary\" style={{fontSize: '55px'}}></EmailIcon></a>\r\n\r\n\r\n      </Typography>\r\n                \r\n\r\n\r\n\r\n\r\n\r\n   </footer>\r\n\r\n  </div>\r\n\r\n)\r\n}\r\n\r\n\r\n\r\n\r\nexport default Footer;",{"ruleId":"259","replacedBy":"260"},{"ruleId":"261","replacedBy":"262"},{"ruleId":"263","severity":1,"message":"264","line":1,"column":28,"nodeType":"265","messageId":"266","endLine":1,"endColumn":36},{"ruleId":"267","severity":1,"message":"268","line":41,"column":6,"nodeType":"269","endLine":41,"endColumn":8,"suggestions":"270"},{"ruleId":"263","severity":1,"message":"271","line":19,"column":7,"nodeType":"265","messageId":"266","endLine":19,"endColumn":20},{"ruleId":"263","severity":1,"message":"272","line":26,"column":7,"nodeType":"265","messageId":"266","endLine":26,"endColumn":22},{"ruleId":"263","severity":1,"message":"273","line":33,"column":7,"nodeType":"265","messageId":"266","endLine":33,"endColumn":22},{"ruleId":"274","severity":1,"message":"275","line":43,"column":1,"nodeType":"276","endLine":61,"endColumn":2},{"ruleId":"274","severity":1,"message":"275","line":42,"column":1,"nodeType":"276","endLine":65,"endColumn":2},{"ruleId":"274","severity":1,"message":"275","line":35,"column":1,"nodeType":"276","endLine":52,"endColumn":2},{"ruleId":"263","severity":1,"message":"277","line":6,"column":10,"nodeType":"265","messageId":"266","endLine":6,"endColumn":20},{"ruleId":"263","severity":1,"message":"278","line":9,"column":12,"nodeType":"265","messageId":"266","endLine":9,"endColumn":22},{"ruleId":"263","severity":1,"message":"279","line":9,"column":24,"nodeType":"265","messageId":"266","endLine":9,"endColumn":37},{"ruleId":"267","severity":1,"message":"280","line":21,"column":8,"nodeType":"269","endLine":21,"endColumn":10,"suggestions":"281"},{"ruleId":"267","severity":1,"message":"268","line":21,"column":8,"nodeType":"269","endLine":21,"endColumn":26,"suggestions":"282"},{"ruleId":"263","severity":1,"message":"283","line":50,"column":7,"nodeType":"265","messageId":"266","endLine":50,"endColumn":22},{"ruleId":"274","severity":1,"message":"275","line":80,"column":1,"nodeType":"276","endLine":115,"endColumn":2},{"ruleId":"263","severity":1,"message":"284","line":1,"column":8,"nodeType":"265","messageId":"266","endLine":1,"endColumn":13},{"ruleId":"263","severity":1,"message":"277","line":12,"column":10,"nodeType":"265","messageId":"266","endLine":12,"endColumn":20},{"ruleId":"285","severity":1,"message":"286","line":132,"column":11,"nodeType":"287","endLine":132,"endColumn":26},{"ruleId":"263","severity":1,"message":"288","line":17,"column":8,"nodeType":"265","messageId":"266","endLine":17,"endColumn":18},{"ruleId":"263","severity":1,"message":"277","line":18,"column":10,"nodeType":"265","messageId":"266","endLine":18,"endColumn":20},{"ruleId":"263","severity":1,"message":"289","line":19,"column":8,"nodeType":"265","messageId":"266","endLine":19,"endColumn":19},{"ruleId":"263","severity":1,"message":"290","line":55,"column":13,"nodeType":"265","messageId":"266","endLine":55,"endColumn":20},{"ruleId":"263","severity":1,"message":"289","line":2,"column":8,"nodeType":"265","messageId":"266","endLine":2,"endColumn":19},{"ruleId":"263","severity":1,"message":"291","line":3,"column":8,"nodeType":"265","messageId":"266","endLine":3,"endColumn":17},{"ruleId":"263","severity":1,"message":"292","line":5,"column":8,"nodeType":"265","messageId":"266","endLine":5,"endColumn":16},{"ruleId":"263","severity":1,"message":"293","line":6,"column":8,"nodeType":"265","messageId":"266","endLine":6,"endColumn":24},{"ruleId":"263","severity":1,"message":"294","line":7,"column":8,"nodeType":"265","messageId":"266","endLine":7,"endColumn":18},{"ruleId":"263","severity":1,"message":"288","line":8,"column":10,"nodeType":"265","messageId":"266","endLine":8,"endColumn":20},{"ruleId":"295","severity":1,"message":"296","line":14,"column":9,"nodeType":"297","endLine":14,"endColumn":125},{"ruleId":"295","severity":1,"message":"296","line":34,"column":15,"nodeType":"297","endLine":34,"endColumn":148},{"ruleId":"263","severity":1,"message":"298","line":6,"column":10,"nodeType":"265","messageId":"266","endLine":6,"endColumn":14},{"ruleId":"263","severity":1,"message":"299","line":11,"column":10,"nodeType":"265","messageId":"266","endLine":11,"endColumn":17},{"ruleId":"267","severity":1,"message":"300","line":65,"column":6,"nodeType":"269","endLine":65,"endColumn":8,"suggestions":"301"},{"ruleId":"263","severity":1,"message":"302","line":11,"column":10,"nodeType":"265","messageId":"266","endLine":11,"endColumn":25},{"ruleId":"263","severity":1,"message":"303","line":12,"column":10,"nodeType":"265","messageId":"266","endLine":12,"endColumn":22},{"ruleId":"263","severity":1,"message":"304","line":14,"column":8,"nodeType":"265","messageId":"266","endLine":14,"endColumn":12},{"ruleId":"263","severity":1,"message":"284","line":4,"column":8,"nodeType":"265","messageId":"266","endLine":4,"endColumn":13},{"ruleId":"263","severity":1,"message":"298","line":2,"column":10,"nodeType":"265","messageId":"266","endLine":2,"endColumn":14},{"ruleId":"263","severity":1,"message":"288","line":4,"column":32,"nodeType":"265","messageId":"266","endLine":4,"endColumn":42},{"ruleId":"263","severity":1,"message":"305","line":3,"column":10,"nodeType":"265","messageId":"266","endLine":3,"endColumn":16},{"ruleId":"263","severity":1,"message":"306","line":28,"column":11,"nodeType":"265","messageId":"266","endLine":28,"endColumn":27},{"ruleId":"263","severity":1,"message":"307","line":2,"column":25,"nodeType":"265","messageId":"266","endLine":2,"endColumn":33},{"ruleId":"267","severity":1,"message":"308","line":27,"column":8,"nodeType":"269","endLine":27,"endColumn":20,"suggestions":"309"},{"ruleId":"295","severity":1,"message":"296","line":172,"column":11,"nodeType":"297","endLine":172,"endColumn":76},{"ruleId":"263","severity":1,"message":"310","line":69,"column":11,"nodeType":"265","messageId":"266","endLine":69,"endColumn":15},{"ruleId":"263","severity":1,"message":"311","line":1,"column":17,"nodeType":"265","messageId":"266","endLine":1,"endColumn":27},{"ruleId":"263","severity":1,"message":"312","line":2,"column":8,"nodeType":"265","messageId":"266","endLine":2,"endColumn":18},{"ruleId":"263","severity":1,"message":"304","line":13,"column":22,"nodeType":"265","messageId":"266","endLine":13,"endColumn":26},{"ruleId":"263","severity":1,"message":"313","line":24,"column":10,"nodeType":"265","messageId":"266","endLine":24,"endColumn":22},{"ruleId":"263","severity":1,"message":"314","line":24,"column":24,"nodeType":"265","messageId":"266","endLine":24,"endColumn":37},{"ruleId":"263","severity":1,"message":"290","line":96,"column":9,"nodeType":"265","messageId":"266","endLine":96,"endColumn":16},{"ruleId":"267","severity":1,"message":"308","line":146,"column":6,"nodeType":"269","endLine":146,"endColumn":18,"suggestions":"315"},{"ruleId":"263","severity":1,"message":"316","line":1,"column":9,"nodeType":"265","messageId":"266","endLine":1,"endColumn":15},{"ruleId":"263","severity":1,"message":"317","line":1,"column":17,"nodeType":"265","messageId":"266","endLine":1,"endColumn":24},{"ruleId":"318","severity":1,"message":"319","line":24,"column":42,"nodeType":"297","endLine":24,"endColumn":120},{"ruleId":"318","severity":1,"message":"319","line":26,"column":5,"nodeType":"297","endLine":26,"endColumn":63},"no-native-reassign",["320"],"no-negated-in-lhs",["321"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["322"],"'postListAdded' is assigned a value but never used.","'postListRemoved' is assigned a value but never used.","'postListUpdated' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'makeStyles' is defined but never used.","'userAuthID' is assigned a value but never used.","'setUserAuthID' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["323"],["324"],"'userPostRemoved' is assigned a value but never used.","'axios' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Typography' is defined but never used.","'CssBaseline' is defined but never used.","'classes' is assigned a value but never used.","'Container' is defined but never used.","'orgPhoto' is defined but never used.","'unknownUserPhoto' is defined but never used.","'checkPhoto' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'Link' is defined but never used.","'connect' is defined but never used.","React Hook useEffect has a missing dependency: '_id'. Either include it or remove the dependency array.",["325"],"'FontAwesomeIcon' is defined but never used.","'faPlusCircle' is defined but never used.","'Icon' is defined but never used.","'faEdit' is defined but never used.","'handleEditButton' is assigned a value but never used.","'Redirect' is defined but never used.","React Hook useEffect has missing dependencies: 'props.authToken' and 'props.match.params.id'. Either include them or remove the dependency array.",["326"],"'data' is assigned a value but never used.","'useContext' is defined but never used.","'DatePicker' is defined but never used.","'CodeOutlined' is defined but never used.","'LaptopWindows' is defined but never used.",["327"],"'AppBar' is defined but never used.","'Toolbar' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","no-global-assign","no-unsafe-negation",{"desc":"328","fix":"329"},{"desc":"330","fix":"331"},{"desc":"332","fix":"333"},{"desc":"334","fix":"335"},{"desc":"336","fix":"337"},{"desc":"336","fix":"338"},"Update the dependencies array to be: [props]",{"range":"339","text":"340"},"Update the dependencies array to be: [props.history]",{"range":"341","text":"342"},"Update the dependencies array to be: [props, props.auth.token]",{"range":"343","text":"344"},"Update the dependencies array to be: [_id]",{"range":"345","text":"346"},"Update the dependencies array to be: [props.authToken, props.match.params.id, props.post]",{"range":"347","text":"348"},{"range":"349","text":"348"},[1371,1373],"[props]",[674,676],"[props.history]",[804,822],"[props, props.auth.token]",[1653,1655],"[_id]",[772,784],"[props.authToken, props.match.params.id, props.post]",[3061,3073]]