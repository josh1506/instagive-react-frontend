[{"E:\\Projects\\Instagive\\instagive-frontend\\src\\index.jsx":"1","E:\\Projects\\Instagive\\instagive-frontend\\src\\App.jsx":"2","E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\landingPage\\LandingPage.jsx":"3","E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\detailsPage\\DetailsPage.jsx":"4","E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\common\\Nav.jsx":"5","E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\adminPage\\AdminPage.jsx":"6","E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\userPage\\UserPage.jsx":"7","E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\authPage\\AuthPage.jsx":"8","E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\landingPage\\Posts.jsx":"9","E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\detailsPage\\DetailsPageContent.jsx":"10","E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\detailsPage\\DetailsUpdatePage.jsx":"11","E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\common\\Sidebar.jsx":"12","E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\userPage\\PostList.jsx":"13","E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\adminPage\\AdminRejected.jsx":"14","E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\adminPage\\AdminPending.jsx":"15","E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\authPage\\Login.jsx":"16","E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\adminPage\\AdminAccepted.jsx":"17","E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\userPage\\PostCreate.jsx":"18","E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\authPage\\ForgotPass.jsx":"19","E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\landingPage\\ShowContent.jsx":"20","E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\authPage\\Register.jsx":"21","E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\common\\PostCard.jsx":"22","E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\common\\Table.jsx":"23","E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\userPage\\PostCreateDetails.jsx":"24","E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\userPage\\PostCreateUpdate.jsx":"25","E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\common\\TableBody.jsx":"26","E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\common\\TableHead.jsx":"27","E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\common\\NotFound.jsx":"28","E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\adminPage\\AdminLogin.jsx":"29","E:\\Projects\\Instagive\\instagive-frontend\\src\\context\\postContext.js":"30","E:\\Projects\\Instagive\\instagive-frontend\\src\\context\\accountList.js":"31","E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\userPage\\UserPostDetails.jsx":"32","E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\others\\cityLocation.js":"33"},{"size":311,"mtime":1613806688416,"results":"34","hashOfConfig":"35"},{"size":1572,"mtime":1614004877734,"results":"36","hashOfConfig":"35"},{"size":281,"mtime":1613825159583,"results":"37","hashOfConfig":"35"},{"size":1590,"mtime":1613908545708,"results":"38","hashOfConfig":"35"},{"size":914,"mtime":1613824073111,"results":"39","hashOfConfig":"35"},{"size":1631,"mtime":1613908620208,"results":"40","hashOfConfig":"35"},{"size":686,"mtime":1614047855382,"results":"41","hashOfConfig":"35"},{"size":994,"mtime":1613908578898,"results":"42","hashOfConfig":"35"},{"size":777,"mtime":1613879163724,"results":"43","hashOfConfig":"35"},{"size":769,"mtime":1613878352763,"results":"44","hashOfConfig":"35"},{"size":4337,"mtime":1613828706040,"results":"45","hashOfConfig":"35"},{"size":508,"mtime":1613898788296,"results":"46","hashOfConfig":"35"},{"size":676,"mtime":1614047872127,"results":"47","hashOfConfig":"35"},{"size":1534,"mtime":1613908671488,"results":"48","hashOfConfig":"35"},{"size":2787,"mtime":1613908604295,"results":"49","hashOfConfig":"35"},{"size":1824,"mtime":1613965111968,"results":"50","hashOfConfig":"35"},{"size":3040,"mtime":1613908635487,"results":"51","hashOfConfig":"35"},{"size":488,"mtime":1614055488797,"results":"52","hashOfConfig":"35"},{"size":1696,"mtime":1613817960706,"results":"53","hashOfConfig":"35"},{"size":539,"mtime":1613878785588,"results":"54","hashOfConfig":"35"},{"size":8592,"mtime":1613965111989,"results":"55","hashOfConfig":"35"},{"size":1389,"mtime":1614046110552,"results":"56","hashOfConfig":"35"},{"size":268,"mtime":1613902047099,"results":"57","hashOfConfig":"35"},{"size":4982,"mtime":1614092528284,"results":"58","hashOfConfig":"35"},{"size":455,"mtime":1613355079231,"results":"59","hashOfConfig":"35"},{"size":423,"mtime":1613902014634,"results":"60","hashOfConfig":"35"},{"size":323,"mtime":1613901738411,"results":"61","hashOfConfig":"35"},{"size":385,"mtime":1613881503846,"results":"62","hashOfConfig":"35"},{"size":1372,"mtime":1613889814449,"results":"63","hashOfConfig":"35"},{"size":134,"mtime":1613804635392,"results":"64","hashOfConfig":"35"},{"size":142,"mtime":1613897826978,"results":"65","hashOfConfig":"35"},{"size":156,"mtime":1614045362321,"results":"66","hashOfConfig":"35"},{"size":427,"mtime":1614091686640,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"emno9w",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"70"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"70"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"70"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"70"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"70"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"70"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"70"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"70"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"70"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"70"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"70"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Projects\\Instagive\\instagive-frontend\\src\\index.jsx",[],["148","149"],"E:\\Projects\\Instagive\\instagive-frontend\\src\\App.jsx",[],"E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\landingPage\\LandingPage.jsx",[],"E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\detailsPage\\DetailsPage.jsx",[],"E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\common\\Nav.jsx",[],"E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\adminPage\\AdminPage.jsx",[],"E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\userPage\\UserPage.jsx",["150"],"import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport PostList from './PostList';\r\nimport PostCreate from './PostCreate';\r\nimport UserPostDetails from './UserPostDetails';\r\n\r\nfunction UserPage(props) {\r\n    console.log('asd', props);\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Switch>\r\n                    <Route path='/user/post-create' component={PostCreate} />\r\n                    <Route path='/user/post-details' component={UserPostDetails} />\r\n                    <Route path='/user/' exact component={PostList} />\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserPage;","E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\authPage\\AuthPage.jsx",["151"],"import React, { useState } from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport Login from './Login';\r\nimport Register from './Register';\r\nimport ForgotPass from './ForgotPass';\r\nimport '../../../style/authPage/authPage.css'\r\n\r\nfunction AuthPage(props) {\r\n    return (\r\n        <div className='auth-container'>\r\n            <div className='authBackgroundImage'>\r\n            </div>\r\n            <div className='authForm'>\r\n                <div className='center'>\r\n                    <Switch>\r\n                        <Route path='/auth/login' component={Login} />\r\n                        <Route path='/auth/register' component={Register} />\r\n                        <Route path='/auth/forgot' component={ForgotPass} />\r\n                        <Redirect from='/auth' to='/auth/login' exact />\r\n                        <Redirect to='/not-found' />\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AuthPage;","E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\landingPage\\Posts.jsx",[],"E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\detailsPage\\DetailsPageContent.jsx",["152"],"import React from 'react';\r\nimport '../../../style/detailsPage/detailsPageContent.css'\r\nimport banner1 from '../../../img/Landscape-Color.jpg'\r\n\r\nfunction DetailsPageContent(props) {\r\n    if (!props.onSelectedPost) return <div>Loading</div>\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img src={banner1} alt=\"Photo\" className='detailsPageImage' />\r\n            </div>\r\n            {props.children}\r\n            <p className='donationContent'>\r\n                {props.onSelectedPost ? props.onSelectedPost.description : ''}\r\n            </p>\r\n            <div className='donateNowContainer'>\r\n                <button className='donate-button'>Donate Now</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DetailsPageContent;","E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\detailsPage\\DetailsUpdatePage.jsx",["153"],"import React, { useState } from 'react';\r\nimport '../../../style/detailsPage/detailsUpdatePage.css'\r\n\r\nfunction DetailsUpdatePage(props) {\r\n    const [posts, setPosts] = useState([\r\n        {\r\n            id: 1,\r\n            title: 'Update Title',\r\n            date: 'Jan 20, 2020',\r\n            details: \"Nothing to see But a dozen dying roses at our feet Your timing is perfect Ironic to me Showing up the moment that you shouldn't be Last time I checked You're the one that left Last words you said That you couldn't care less It's funny how you miss me more than you could ever love me How you couldn't give me everything and now you want it from me Yeah, it's funny how it's different now that I got somebody Yeah it's funny Ooh Yeah it's funny, funny, funny, how you answer, answer, answer 'Cause his lips seem, lips seem, lips seem, both my hands are on his body Yeah it's funny how it's different now that I got somebody Yeah it's funny Ooh Sending a message Through mutual friends It's like I'm talking to you using them You heard I was happy…\",\r\n            img: ''\r\n        }, {\r\n            id: 2,\r\n            title: 'Update Title',\r\n            date: 'Feb 14, 2020',\r\n            details: \"Nothing to see But a dozen dying roses at our feet Your timing is perfect Ironic to me Showing up the moment that you shouldn't be Last time I checked You're the one that left Last words you said That you couldn't care less It's funny how you miss me more than you could ever love me How you couldn't give me everything and now you want it from me Yeah, it's funny how it's different now that I got somebody Yeah it's funny Ooh Yeah it's funny, funny, funny, how you answer, answer, answer 'Cause his lips seem, lips seem, lips seem, both my hands are on his body Yeah it's funny how it's different now that I got somebody Yeah it's funny Ooh Sending a message Through mutual friends It's like I'm talking to you using them You heard I was happy…\",\r\n            img: ''\r\n        }, {\r\n            id: 3,\r\n            title: 'Update Title',\r\n            date: 'May 17, 2020',\r\n            details: \"Nothing to see But a dozen dying roses at our feet Your timing is perfect Ironic to me Showing up the moment that you shouldn't be Last time I checked You're the one that left Last words you said That you couldn't care less It's funny how you miss me more than you could ever love me How you couldn't give me everything and now you want it from me Yeah, it's funny how it's different now that I got somebody Yeah it's funny Ooh Yeah it's funny, funny, funny, how you answer, answer, answer 'Cause his lips seem, lips seem, lips seem, both my hands are on his body Yeah it's funny how it's different now that I got somebody Yeah it's funny Ooh Sending a message Through mutual friends It's like I'm talking to you using them You heard I was happy…\",\r\n            img: ''\r\n        }, {\r\n            id: 4,\r\n            title: 'Update Title',\r\n            date: 'Nov 26, 2020',\r\n            details: \"Nothing to see But a dozen dying roses at our feet Your timing is perfect Ironic to me Showing up the moment that you shouldn't be Last time I checked You're the one that left Last words you said That you couldn't care less It's funny how you miss me more than you could ever love me How you couldn't give me everything and now you want it from me Yeah, it's funny how it's different now that I got somebody Yeah it's funny Ooh Yeah it's funny, funny, funny, how you answer, answer, answer 'Cause his lips seem, lips seem, lips seem, both my hands are on his body Yeah it's funny how it's different now that I got somebody Yeah it's funny Ooh Sending a message Through mutual friends It's like I'm talking to you using them You heard I was happy…\",\r\n            img: ''\r\n        }\r\n    ])\r\n\r\n    return (\r\n        <div>\r\n            {props.children}\r\n            <div className=\"update-container\">\r\n                {posts.map(post =>\r\n                    <div key={post.id}>\r\n                        <h3 className='update-title'>{post.title} - {post.date}</h3>\r\n                        <p className='update-details'>{post.details}</p>\r\n                        <img src={post.img} alt=\"carousel\" />\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DetailsUpdatePage;","E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\common\\Sidebar.jsx",[],"E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\userPage\\PostList.jsx",[],"E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\adminPage\\AdminRejected.jsx",[],"E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\adminPage\\AdminPending.jsx",["154"],"import React, { useContext } from 'react';\r\nimport axios from 'axios'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCheck, faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport AccountList from './../../../context/accountList';\r\n\r\nfunction AdminPending(props) {\r\n    const accountList = useContext(AccountList)\r\n    const data = accountList.filter(account => account.accountStatus === 'pending')\r\n\r\n    const theadData = [\r\n        {\r\n            label: 'Organization',\r\n            name: 'orgName'\r\n        },\r\n        {\r\n            label: 'Email',\r\n            name: 'email'\r\n        },\r\n        {\r\n            label: 'City',\r\n            name: 'city'\r\n        },\r\n        {\r\n            label: 'Rep. Name',\r\n            name: 'repName'\r\n        },\r\n    ]\r\n\r\n    const handleApproveAccount = (event, account) => {\r\n        console.log(account);\r\n    }\r\n\r\n\r\n    const handleRejectAccount = (event, account) => {\r\n        console.log(account);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1 className='admin-page-title'>Pending</h1>\r\n            <table className='table-container'>\r\n                <thead>\r\n                    <tr>\r\n                        {theadData.map(tableHead =>\r\n                            <th key={tableHead.name} className='table-header'>{tableHead.label}</th>\r\n                        )}\r\n                        <th>Status</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {data.map(account =>\r\n                        <tr key={account.id}>\r\n                            {theadData.map(tableHead =>\r\n                                <td key={tableHead.name} className='table-item'>\r\n                                    {account[tableHead.name]}\r\n                                </td>\r\n                            )}\r\n                            <td className='table-item' id='table-button-container'>\r\n                                <FontAwesomeIcon\r\n                                    icon={faCheck}\r\n                                    className='table-icon'\r\n                                    size='lg'\r\n                                    onClick={e => handleApproveAccount(e, account)}\r\n                                />\r\n                                <FontAwesomeIcon\r\n                                    icon={faTimes}\r\n                                    className='table-icon'\r\n                                    size='lg'\r\n                                    onClick={e => handleRejectAccount(e, account)}\r\n                                />\r\n                            </td>\r\n                        </tr>\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AdminPending;","E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\authPage\\Login.jsx",["155"],"import { faWindowRestore } from '@fortawesome/free-solid-svg-icons';\r\nimport axios from 'axios';\r\nimport React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport '../../../style/authPage/login.css'\r\n\r\nfunction Login(props) {\r\n    const [auth, setAuth] = useState({ username: '', password: '' })\r\n    const handleSubmit = event => {\r\n        event.preventDefault()\r\n        axios.post('http://localhost:5000/user/login', auth)\r\n    }\r\n    \r\n    return (\r\n        <div className='LoginContainer'>\r\n            <div>\r\n                <h1 className='authTitle'>Welcome!</h1>\r\n            </div>\r\n            <form action=\"#\" className='form-container' onSubmit={handleSubmit}>\r\n                <label htmlFor=\"username\" className='form-label'>Username</label>\r\n                <input type=\"text\" name=\"username\" id=\"username\" placeholder='Username' className='form-input-text' required value={auth.username} onChange={e => setAuth({ ...auth, username: e.target.value })} />\r\n                <label htmlFor=\"password\" className='form-label'>Password</label>\r\n                <input type=\"password\" name=\"password\" id=\"password\" placeholder='Password' className='form-input-text' required value={auth.password} onChange={e => setAuth({ ...auth, password: e.target.value })} />\r\n                <div style={{ width: '100%' }}>\r\n                    <Link to=\"/auth/forgot\" className='form-link'>Forgot Password</Link>\r\n                    <div className='form-button-container'>\r\n                        <button  className='form-button'  >Login</button>\r\n                        <button  className='form-button' onClick={() => props.history.push('/auth/register')}>Sign up</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;","E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\adminPage\\AdminAccepted.jsx",["156"],"import React, { useContext } from 'react';\r\nimport axios from 'axios'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faEdit, faTrash } from '@fortawesome/free-solid-svg-icons'\r\nimport AccountList from './../../../context/accountList';\r\n\r\nfunction AdminAccepted(props) {\r\n    const accountList = useContext(AccountList)\r\n    const data = accountList.filter(account => account.accountStatus === 'pending')\r\n\r\n    const theadData = [\r\n        {\r\n            label: 'Organization',\r\n            name: 'orgName'\r\n        },\r\n        {\r\n            label: 'Email',\r\n            name: 'email'\r\n        },\r\n        {\r\n            label: 'City',\r\n            name: 'city'\r\n        },\r\n        {\r\n            label: 'Rep. Name',\r\n            name: 'repName'\r\n        },\r\n    ]\r\n\r\n\r\n    const handleEditButton = (event, account) => {\r\n        console.log(account);\r\n    }\r\n\r\n    const handleDeleteButton = (event, account) => {\r\n        console.log(account);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1 className='admin-page-title'>Accepted</h1>\r\n            <table className='table-container'>\r\n                <thead>\r\n                    <tr>\r\n                        {theadData.map(tableHead =>\r\n                            <th key={tableHead.name} className='table-header'>{tableHead.label}</th>\r\n                        )}\r\n                        <th className='table-header'>No. of Post</th>\r\n                        <th className='table-header'>Status</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {data.map(account =>\r\n                        <tr key={account.id}>\r\n                            {theadData.map(tableHead =>\r\n                                <td key={tableHead.name} className='table-item'>\r\n                                    {account[tableHead.name]}</td>\r\n                            )}\r\n                            <td className='table-item'>\r\n\r\n                            </td>\r\n                            <td className='table-item'>\r\n                                <FontAwesomeIcon\r\n                                    icon={faEdit}\r\n                                    className='table-icon'\r\n                                    size='lg'\r\n                                    onClick={e => handleEditButton(e, account)}\r\n                                    style={{ cursor: 'pointer' }}\r\n                                />\r\n                                <FontAwesomeIcon\r\n                                    icon={faTrash}\r\n                                    className='table-icon'\r\n                                    size='lg'\r\n                                    onClick={e => handleDeleteButton(e, account)}\r\n                                    style={{ cursor: 'pointer' }}\r\n                                />\r\n                            </td>\r\n                        </tr>\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AdminAccepted;","E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\userPage\\PostCreate.jsx",["157","158"],"import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport PostCreateDetails from './PostCreateDetails';\r\nimport PostCreateUpdate from './PostCreateUpdate';\r\n\r\nfunction PostCreate(props) {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Switch>\r\n                    <Route path='/user/post-create' component={PostCreateDetails} />\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PostCreate;","E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\authPage\\ForgotPass.jsx",["159","160"],"import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport '../../../style/authPage/forgotPassword.css'\r\n\r\nfunction ForgotPass(props) {\r\n    const [email, setEmail] = useState({ email: '' })\r\n    const [showMessage, setShowMessage] = useState(false)\r\n\r\n    const handleSendEmail = () => {\r\n        setShowMessage(true)\r\n    }\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault()\r\n\r\n        // handleSendEmail()\r\n    }\r\n\r\n    return (\r\n        <div className='forgot-pass-container'>\r\n            <div className='forgot-pass-title'>\r\n                <h1 className='authTitle'>Forgot Password</h1>\r\n                <p className='authDetails'>You can change your password for security reasons or reset it if you forget it. Your Google Account password is used to access many Google products, like Gmail and YouTube.</p>\r\n            </div>\r\n            <form action=\"\" className='form-container' onSubmit={handleSubmit}>\r\n                <label htmlFor=\"email\" className='form-label'>Email</label>\r\n                <input type=\"email\" name=\"email\" id=\"email\" className='form-input-text' />\r\n                {showMessage ? <p>We send a request password in your email</p> : ''}\r\n            </form>\r\n            <div style={{ width: '100%' }} className='form-button-container'>\r\n                <div>\r\n                    <Link to=\"/auth/login\" className='form-link'>Login</Link>\r\n                    <Link to=\"/auth/register\" className='form-link'>Signup</Link>\r\n                </div>\r\n                <button className='form-button' onClick={handleSendEmail}>Send</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ForgotPass;","E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\landingPage\\ShowContent.jsx",[],"E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\authPage\\Register.jsx",["161"],"import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport '../../../style/authPage/register.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Register(props) {\r\n  const [checkPassword, setCheckPassword] = useState({ confirm_pass: '' });\r\n  const [userForm, setUserForm] = useState({\r\n    email: '',\r\n    password: '',\r\n    city: '',\r\n    orgName: '',\r\n    orgAddress: '',\r\n\r\n    orgNumber: '',\r\n    repName: '',\r\n\r\n    orgDescriptions: '',\r\n  });\r\n\r\n  const [files, setFiles] = useState({\r\n    orgPhoto: '',\r\n    orgDocuments: '',\r\n    repId: '',\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    console.log(event.target.value);\r\n\r\n    setUserForm({\r\n      ...userForm,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handlerepId = (file) => {\r\n    setFiles({ ...files, repId: file });\r\n  };\r\n\r\n  const handleorgPhoto = (file) => {\r\n    setFiles({ ...files, orgPhoto: file });\r\n  };\r\n\r\n  const handleorgDocuments = (multifiles) => {\r\n    setFiles({ ...files, orgDocuments: multifiles });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const formdata = new FormData();\r\n\r\n    formdata.append('repId', files.repId);\r\n    formdata.append('orgPhoto', files.orgPhoto);\r\n\r\n    for (const key in files.orgDocuments) {\r\n      formdata.append('orgDocuments', files.orgDocuments[key]);\r\n    }\r\n\r\n    formdata.append('email', userForm.email);\r\n    formdata.append('city', userForm.city);\r\n    formdata.append('password', userForm.password);\r\n\r\n    formdata.append('orgName', userForm.orgName);\r\n    formdata.append('orgAddress', userForm.orgAddress);\r\n    formdata.append('orgNumber', userForm.orgNumber);\r\n    formdata.append('repName', userForm.repName);\r\n    formdata.append('orgDescriptions', userForm.orgDescriptions);\r\n\r\n    await axios.post('http://localhost:5000/user/register', formdata);\r\n\r\n    setUserForm({\r\n        email: '',\r\n        password: '',\r\n        city: '',\r\n        orgName: '',\r\n        orgAddress: '',\r\n        orgPhoto: '',\r\n        orgNumber: '',\r\n        repName: '',\r\n        repId: '',\r\n        orgDocuments: [],\r\n        orgDescriptions: ''\r\n    })\r\n\r\n    setFiles({\r\n      orgPhoto: '',\r\n    orgDocuments: '',\r\n    repId: '',\r\n    })\r\n  };\r\n\r\n  return (\r\n    <div className='register-container'>\r\n      <div>\r\n        <h1 className='authTitle'>Account Details</h1>\r\n      </div>\r\n      <form encType='multipart/form-data' action='' onSubmit={handleSubmit}>\r\n        <div className='register-form1'>\r\n          <div className='register-input-container1'>\r\n            <label className='form-label' htmlFor='email'>\r\n              Email\r\n            </label>\r\n            <input\r\n              type='text'\r\n              name='email'\r\n              id='email'\r\n              value={userForm.email}\r\n              placeholder='Email'\r\n              className='register-form-input-text'\r\n              onChange={handleChange}\r\n            />\r\n            <label className='form-label' htmlFor='password'>\r\n              Password\r\n            </label>\r\n            <input\r\n              type='text'\r\n              name='password'\r\n              id='password'\r\n              value={userForm.password}\r\n              placeholder='Password'\r\n              className='register-form-input-text'\r\n              onChange={handleChange}\r\n            />\r\n            <label className='form-label' htmlFor='confirm-pass'>\r\n              Confirm Password\r\n            </label>\r\n            <input\r\n              type='text'\r\n              name='confirm-pass'\r\n              id='confirm-pass'\r\n              placeholder='confirm Password'\r\n              className='register-form-input-text'\r\n              onChange={(e) => setCheckPassword(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className='register-form2'>\r\n          <div className='register-input-container2'>\r\n            <label className='form-label' htmlFor='orgName'>\r\n              Organization Name\r\n            </label>\r\n            <input\r\n              type='text'\r\n              name='orgName'\r\n              value={userForm.orgName}\r\n              onChange={handleChange}\r\n              id='orgName'\r\n              placeholder='Organization Name'\r\n              className='register-form-input-text'\r\n            />\r\n          </div>\r\n          <div className='register-input-container2'>\r\n            <label className='form-label' htmlFor='orgNumber'>\r\n              Organization No.\r\n            </label>\r\n            <input\r\n              type='text'\r\n              name='orgNumber'\r\n              value={userForm.orgNumber}\r\n              onChange={handleChange}\r\n              id='orgNumber'\r\n              placeholder='Organization No.'\r\n              className='register-form-input-text'\r\n            />\r\n          </div>\r\n          <div className='register-input-container2'>\r\n            <label className='form-label' htmlFor='city'>\r\n              City\r\n            </label>\r\n            <input\r\n              type='text'\r\n              name='city'\r\n              value={userForm.city}\r\n              onChange={handleChange}\r\n              id='city'\r\n              placeholder='City'\r\n              className='register-form-input-text'\r\n            />\r\n          </div>\r\n          <div className='register-input-container2'>\r\n            <label className='form-label' htmlFor='orgAddress'>\r\n              Organization Address\r\n            </label>\r\n            <input\r\n              type='text'\r\n              name='orgAddress'\r\n              value={userForm.orgAddress}\r\n              onChange={handleChange}\r\n              id='orgAddress'\r\n              placeholder='Organization Address'\r\n              className='register-form-input-text'\r\n            />\r\n          </div>\r\n          <div className='register-input-container2'>\r\n            <label className='form-label' htmlFor='repName'>\r\n              Representative Name\r\n            </label>\r\n            <input\r\n              type='text'\r\n              name='repName'\r\n              value={userForm.repName}\r\n              onChange={handleChange}\r\n              id='repName'\r\n              placeholder='Representative Name'\r\n              className='register-form-input-text'\r\n            />\r\n          </div>\r\n\r\n          <div className='register-input-container2'>\r\n            <label className='form-label' htmlFor='repId'>\r\n              Representative ID\r\n            </label>\r\n            <input\r\n              type='file'\r\n              id='repId'\r\n              name='repId'\r\n              onChange={(e) => {\r\n                const file = e.target.files[0];\r\n                handlerepId(file);\r\n              }}\r\n              className='form-input-file'\r\n            ></input>\r\n          </div>\r\n\r\n          <div className='register-input-container2'>\r\n            <label className='form-label' htmlFor='orgDocuments'>\r\n              Organization Documents\r\n            </label>\r\n            <input\r\n              type='file'\r\n              id='orgDocuments'\r\n              name='orgDocuments'\r\n              onChange={(e) => {\r\n                const multifiles = e.target.files;\r\n                handleorgDocuments(multifiles);\r\n              }}\r\n              multiple\r\n              className='form-input-file'\r\n            ></input>\r\n          </div>\r\n          <div className='register-input-container2'>\r\n            <label className='org-photo' htmlFor='orgPhoto'>\r\n              Organization Photo\r\n            </label>\r\n            <input\r\n              type='file'\r\n              id='orgPhoto'\r\n              name='orgPhoto'\r\n              onChange={(e) => {\r\n                const file = e.target.files[0];\r\n                handleorgPhoto(file);\r\n              }}\r\n              className='form-input-file'\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className='register-org-description-container'>\r\n          <label className='org-photo' htmlFor='orgDescriptions'>\r\n            Organization Description\r\n          </label>\r\n          <textarea\r\n            name='orgDescriptions'\r\n            value={userForm.orgDescriptions}\r\n            onChange={handleChange}\r\n            id='orgDescriptions'\r\n            className='register-form-input-text'\r\n          ></textarea>\r\n        </div>\r\n        <div className='form-button-container'>\r\n          <Link to='/auth/login' className='form-link'>\r\n            Cancel\r\n          </Link>\r\n          <button className='form-button'>Send Registration</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\common\\PostCard.jsx",["162","163","164","165"],"\r\nimport React, { useState, useContext } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport '../../style/common/postCard.css';\r\nimport PostContext from './../../context/postContext';\r\n\r\nfunction PostCard(props) {\r\n  const postList = useContext(PostContext);\r\n  return (\r\n    <div className='postCardContainer'>\r\n      {postList.map((post) => (\r\n        <div className='postCard' key={post.id}>\r\n          <div className=\"category\">{post.location}</div>\r\n          <img src={post.imageList[0]} alt='Photo' width='100%' />\r\n          <h3 style={{ paddingLeft: 5 }}>\r\n            {post.Title.substring(0, 29)}\r\n            {post.Title.length > 29 ? '...' : ''}\r\n          </h3>\r\n          <p style={{ paddingLeft: 10, paddingRight: 10 }}>\r\n            {post.description.length > 100\r\n              ? `${post.description.substring(0, 100)}...`\r\n              : post.description.substring(0, 100)}\r\n          </p>\r\n          <div className='buttonContainer'>\r\n            <button\r\n              className='details-button'\r\n              style={{ borderRadius: 7 }}\r\n              onClick={() => props.history.push(`/details/${post.id}`)}\r\n            >\r\n              Details\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostCard;\r\n","E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\common\\Table.jsx",[],["166","167"],"E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\userPage\\PostCreateDetails.jsx",["168"],"E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\userPage\\PostCreateUpdate.jsx",[],"E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\common\\TableBody.jsx",[],"E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\common\\TableHead.jsx",[],"E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\common\\NotFound.jsx",[],"E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\adminPage\\AdminLogin.jsx",["169"],"import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction AdminLogin(props) {\r\n    const [auth, setAuth] = useState({ username: '', password: '' })\r\n\r\n    const handleSubmit = async event => {\r\n        event.preventDefault()\r\n\r\n        // await axios.post('', auth)\r\n    }\r\n\r\n    return (\r\n        <div className='LoginContainer'>\r\n            <div>\r\n                <h1 className='authTitle'>Admin Login</h1>\r\n            </div>\r\n            <form action=\"#\" className='form-container' onSubmit={handleSubmit}>\r\n                <label htmlFor=\"username\" className='form-label'>Username</label>\r\n                <input type=\"text\" name=\"username\" id=\"username\" placeholder='Username' className='form-input-text' value={auth.username} onChange={e => setAuth({ ...auth, username: e.target.value })} />\r\n                <label htmlFor=\"password\" className='form-label'>Password</label>\r\n                <input type=\"password\" name=\"password\" id=\"password\" placeholder='Password' className='form-input-text' value={auth.password} onChange={e => setAuth({ ...auth, password: e.target.value })} />\r\n                <div style={{ width: '100%' }}>\r\n                    <button className='form-button' style={{ width: '100%' }}>Login</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AdminLogin;","E:\\Projects\\Instagive\\instagive-frontend\\src\\context\\postContext.js",[],"E:\\Projects\\Instagive\\instagive-frontend\\src\\context\\accountList.js",[],"E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\userPage\\UserPostDetails.jsx",[],"E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\others\\cityLocation.js",[],{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","severity":1,"message":"175","line":2,"column":25,"nodeType":"176","messageId":"177","endLine":2,"endColumn":33},{"ruleId":"174","severity":1,"message":"178","line":1,"column":17,"nodeType":"176","messageId":"177","endLine":1,"endColumn":25},{"ruleId":"179","severity":1,"message":"180","line":11,"column":17,"nodeType":"181","endLine":11,"endColumn":79},{"ruleId":"174","severity":1,"message":"182","line":5,"column":19,"nodeType":"176","messageId":"177","endLine":5,"endColumn":27},{"ruleId":"174","severity":1,"message":"183","line":2,"column":8,"nodeType":"176","messageId":"177","endLine":2,"endColumn":13},{"ruleId":"174","severity":1,"message":"184","line":1,"column":10,"nodeType":"176","messageId":"177","endLine":1,"endColumn":25},{"ruleId":"174","severity":1,"message":"183","line":2,"column":8,"nodeType":"176","messageId":"177","endLine":2,"endColumn":13},{"ruleId":"174","severity":1,"message":"175","line":2,"column":25,"nodeType":"176","messageId":"177","endLine":2,"endColumn":33},{"ruleId":"174","severity":1,"message":"185","line":4,"column":8,"nodeType":"176","messageId":"177","endLine":4,"endColumn":24},{"ruleId":"174","severity":1,"message":"186","line":6,"column":12,"nodeType":"176","messageId":"177","endLine":6,"endColumn":17},{"ruleId":"174","severity":1,"message":"187","line":6,"column":19,"nodeType":"176","messageId":"177","endLine":6,"endColumn":27},{"ruleId":"174","severity":1,"message":"188","line":7,"column":10,"nodeType":"176","messageId":"177","endLine":7,"endColumn":23},{"ruleId":"174","severity":1,"message":"178","line":2,"column":17,"nodeType":"176","messageId":"177","endLine":2,"endColumn":25},{"ruleId":"174","severity":1,"message":"189","line":3,"column":10,"nodeType":"176","messageId":"177","endLine":3,"endColumn":25},{"ruleId":"174","severity":1,"message":"190","line":4,"column":10,"nodeType":"176","messageId":"177","endLine":4,"endColumn":17},{"ruleId":"179","severity":1,"message":"180","line":15,"column":11,"nodeType":"181","endLine":15,"endColumn":67},{"ruleId":"170","replacedBy":"191"},{"ruleId":"172","replacedBy":"192"},{"ruleId":"193","severity":1,"message":"194","line":107,"column":25,"nodeType":"181","endLine":107,"endColumn":37},{"ruleId":"174","severity":1,"message":"195","line":2,"column":10,"nodeType":"176","messageId":"177","endLine":2,"endColumn":14},"no-native-reassign",["196"],"no-negated-in-lhs",["197"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'setPosts' is assigned a value but never used.","'axios' is defined but never used.","'faWindowRestore' is defined but never used.","'PostCreateUpdate' is defined but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'checkPassword' is assigned a value but never used.","'FontAwesomeIcon' is defined but never used.","'faTimes' is defined but never used.",["196"],["197"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Link' is defined but never used.","no-global-assign","no-unsafe-negation"]