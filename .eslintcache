[{"E:\\Projects\\Instagive\\instagive-react-frontend\\src\\index.jsx":"1","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\app\\configStore.js":"2","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\App.jsx":"3","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\app\\reducer.js":"4","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\app\\postList.js":"5","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\app\\accounts.js":"6","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\app\\auth.js":"7","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\landingPage\\LandingPage.jsx":"8","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\common\\Nav.jsx":"9","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\authPage\\AuthPage.jsx":"10","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\common\\NotFound.jsx":"11","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\userPage\\UserPage.jsx":"12","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\detailsPage\\DetailsPage.jsx":"13","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\adminPage\\AdminPage.jsx":"14","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\landingPage\\AllPostList.jsx":"15","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\app\\user.js":"16","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\route\\instagive.js":"17","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\landingPage\\Posts.jsx":"18","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\landingPage\\Content.jsx":"19","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\authPage\\Login.jsx":"20","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\authPage\\Register.jsx":"21","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\detailsPage\\DetailsUpdatePage.jsx":"22","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\adminPage\\AdminPending.jsx":"23","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\adminPage\\AdminAccepted.jsx":"24","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\common\\Sidebar.jsx":"25","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\adminPage\\AdminRejected.jsx":"26","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\landingPage\\ShowContent.jsx":"27","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\authPage\\ForgotPass.jsx":"28","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\userPage\\PostList.jsx":"29","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\userPage\\postDetailPage\\PostCreate.jsx":"30","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\userPage\\postDetailPage\\UserPostDetails.jsx":"31","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\userPage\\ledgerPage\\LedgerPage.jsx":"32","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\userPage\\postUpdatePage\\UpdateUserPost.jsx":"33","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\detailsPage\\DetailsPageContent.jsx":"34","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\adminPage\\AdminLogin.jsx":"35","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\userPage\\changePassPage\\ChangePass.jsx":"36","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\common\\PostCard.jsx":"37","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\others\\cityLocation.js":"38","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\userPage\\postUpdatePage\\PostCreateUpdate.jsx":"39","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\userPage\\postUpdatePage\\PostDetailUpdate.jsx":"40","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\userPage\\postDetailPage\\PostCreateDetails.jsx":"41","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\userPage\\ledgerPage\\LedgerCreate.jsx":"42","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\userPage\\ledgerPage\\LedgerList.jsx":"43"},{"size":418,"mtime":1615129978594,"results":"44","hashOfConfig":"45"},{"size":181,"mtime":1615117898583,"results":"46","hashOfConfig":"45"},{"size":2086,"mtime":1615129999402,"results":"47","hashOfConfig":"45"},{"size":252,"mtime":1615117898991,"results":"48","hashOfConfig":"45"},{"size":1315,"mtime":1615117898991,"results":"49","hashOfConfig":"45"},{"size":1819,"mtime":1615117898583,"results":"50","hashOfConfig":"45"},{"size":950,"mtime":1615117898583,"results":"51","hashOfConfig":"45"},{"size":355,"mtime":1615129999474,"results":"52","hashOfConfig":"45"},{"size":4996,"mtime":1615129999413,"results":"53","hashOfConfig":"45"},{"size":1404,"mtime":1615117899722,"results":"54","hashOfConfig":"45"},{"size":385,"mtime":1615117899037,"results":"55","hashOfConfig":"45"},{"size":1658,"mtime":1615117899777,"results":"56","hashOfConfig":"45"},{"size":1655,"mtime":1615117899729,"results":"57","hashOfConfig":"45"},{"size":2085,"mtime":1615117899488,"results":"58","hashOfConfig":"45"},{"size":3950,"mtime":1615188806977,"results":"59","hashOfConfig":"45"},{"size":2069,"mtime":1615185344873,"results":"60","hashOfConfig":"45"},{"size":100,"mtime":1615117899838,"results":"61","hashOfConfig":"45"},{"size":785,"mtime":1615129999483,"results":"62","hashOfConfig":"45"},{"size":1389,"mtime":1615194123621,"results":"63","hashOfConfig":"45"},{"size":2970,"mtime":1615129978507,"results":"64","hashOfConfig":"45"},{"size":8788,"mtime":1615117899724,"results":"65","hashOfConfig":"45"},{"size":1373,"mtime":1615117899733,"results":"66","hashOfConfig":"45"},{"size":3056,"mtime":1615117899680,"results":"67","hashOfConfig":"45"},{"size":3054,"mtime":1615117899487,"results":"68","hashOfConfig":"45"},{"size":508,"mtime":1615117899092,"results":"69","hashOfConfig":"45"},{"size":1526,"mtime":1615117899681,"results":"70","hashOfConfig":"45"},{"size":1054,"mtime":1615188806978,"results":"71","hashOfConfig":"45"},{"size":2698,"mtime":1615188806975,"results":"72","hashOfConfig":"45"},{"size":3276,"mtime":1615188806982,"results":"73","hashOfConfig":"45"},{"size":504,"mtime":1615117899802,"results":"74","hashOfConfig":"45"},{"size":7006,"mtime":1615117899804,"results":"75","hashOfConfig":"45"},{"size":534,"mtime":1615117899802,"results":"76","hashOfConfig":"45"},{"size":544,"mtime":1615117899809,"results":"77","hashOfConfig":"45"},{"size":4764,"mtime":1615188806976,"results":"78","hashOfConfig":"45"},{"size":2819,"mtime":1615188806974,"results":"79","hashOfConfig":"45"},{"size":4044,"mtime":1615188806983,"results":"80","hashOfConfig":"45"},{"size":2945,"mtime":1615117899038,"results":"81","hashOfConfig":"45"},{"size":418,"mtime":1615117899453,"results":"82","hashOfConfig":"45"},{"size":455,"mtime":1615117899806,"results":"83","hashOfConfig":"45"},{"size":301,"mtime":1615117899806,"results":"84","hashOfConfig":"45"},{"size":7682,"mtime":1615188806991,"results":"85","hashOfConfig":"45"},{"size":4755,"mtime":1615188806990,"results":"86","hashOfConfig":"45"},{"size":10341,"mtime":1615188806990,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"1b622li",{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"90"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"90"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"90"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"90"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"90"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"90"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"90"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"90"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"90"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"90"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"90"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"90"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"90"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"90"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"90"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"90"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"90"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"90"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"90"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"90"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"90"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"193"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"90"},"E:\\Projects\\Instagive\\instagive-react-frontend\\src\\index.jsx",[],["199","200"],"E:\\Projects\\Instagive\\instagive-react-frontend\\src\\app\\configStore.js",[],"E:\\Projects\\Instagive\\instagive-react-frontend\\src\\App.jsx",["201","202"],"import React, { useEffect, useState } from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux'\r\n\r\nimport { postListFeched } from './app/postList'\r\nimport { accountFetched } from './app/accounts'\r\nimport { authAdd } from './app/auth'\r\nimport Nav from './components/common/Nav';\r\nimport LandingPage from './components/pages/landingPage/LandingPage';\r\nimport DetailsPage from './components/pages/detailsPage/DetailsPage';\r\nimport AuthPage from './components/pages/authPage/AuthPage';\r\nimport UserPage from './components/pages/userPage/UserPage';\r\nimport AdminPage from './components/pages/adminPage/AdminPage';\r\nimport NotFound from './components/common/NotFound';\r\nimport './App.css';\r\nimport AllPostList from './components/pages/landingPage/AllPostList';\r\n\r\n\r\nfunction App(props) {\r\n\r\n  useEffect(() => {\r\n    const getAllData = async () => {\r\n      props.accountFetched()\r\n      props.postListFeched()\r\n    };\r\n\r\n    const validateAuthID = async () => {\r\n      // Validating if token is valid\r\n      // await axios.post('/checkusertoken', token)\r\n\r\n      props.authAdd(token, type)\r\n    }\r\n\r\n    // check if there's a user in local storage\r\n    const token = localStorage.getItem('user') || localStorage.getItem('admin')\r\n    const type = localStorage.key(token)\r\n\r\n    validateAuthID()\r\n    getAllData();\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <div className='App'>\r\n      <Nav />\r\n      <Switch>\r\n        <Route path='/post-list' component={AllPostList} />\r\n        <Route path='/details/:id' component={DetailsPage} />\r\n        <Route path='/auth' component={AuthPage} />\r\n        <Route path='/user' component={UserPage} />\r\n        <Route path='/not-found' component={NotFound} />\r\n        <Route path='/admin' component={AdminPage} />\r\n        <Route path='/' exact component={LandingPage} />\r\n        <Redirect to='/not-found' />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return { state }\r\n}\r\n\r\nexport default connect(mapStateToProps,\r\n  { authAdd, postListFeched, accountFetched })(App);\r\n","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\app\\reducer.js",[],"E:\\Projects\\Instagive\\instagive-react-frontend\\src\\app\\postList.js",["203","204","205","206"],"import route from '../route/instagive'\r\n\r\n// Action Type\r\nconst POST_LIST_FECHED = 'postListFeched'\r\nconst POST_LIST_ADDED = 'postListAdded'\r\nconst POST_LIST_REMOVED = 'postListRemoved'\r\nconst POST_LIST_UPDATED = 'postListUpdated'\r\n\r\n\r\n// Action\r\nexport const postListFeched = () => async dispatch => {\r\n    const {data} = await route.get('/landing')\r\n    dispatch({\r\n        type: POST_LIST_FECHED,\r\n        payload: data\r\n    })\r\n}\r\n\r\nconst postListAdded = (post) => {\r\n    return {\r\n        type: POST_LIST_ADDED,\r\n        payload: post\r\n    }\r\n}\r\n\r\nconst postListRemoved = (id) => {\r\n    return {\r\n        type: POST_LIST_REMOVED,\r\n        payload: {id}\r\n    }\r\n}\r\n\r\nconst postListUpdated = (post) => {\r\n    return {\r\n        type: POST_LIST_UPDATED,\r\n        payload: post\r\n    }\r\n}\r\n\r\n\r\n\r\n// Reducer\r\nexport default (state=[], action) => {\r\n    switch (action.type) {\r\n        case POST_LIST_FECHED:\r\n            return action.payload\r\n    \r\n        case POST_LIST_REMOVED:\r\n            return state.filter(post => \r\n                post._id !== action.payload.id)\r\n    \r\n        case POST_LIST_UPDATED:\r\n            return state.map(post =>\r\n                post._id === action.payload.id ?\r\n                action.payload :\r\n                post)\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\app\\accounts.js",["207"],"import route from '../route/instagive'\r\n\r\n// Action Type\r\nconst ACCOUNT_FETCHED = 'accountFetched'\r\nconst ACCOUNT_APPROVED = 'accountApproved'\r\nconst ACCOUNT_REJECTED = 'accountRejected'\r\n\r\n\r\n// Actions\r\nconst accountFetched = () => async dispatch => {\r\n    const {data} = await route.get('/admin/getusers')\r\n\r\n    dispatch({\r\n        type:ACCOUNT_FETCHED,\r\n        payload: data\r\n    })\r\n}\r\n\r\nconst accountApproved = account => async dispatch => {\r\n    await route.post(`/admin/changestatus/${account._id}/approved`)\r\n    dispatch({\r\n        type:ACCOUNT_APPROVED,\r\n        payload: account\r\n    })\r\n}\r\n\r\nconst accountRejected = account => async dispatch => {\r\n    await route.post(`/admin/changestatus/${account._id}/rejected`)\r\n    dispatch({\r\n        type:ACCOUNT_REJECTED,\r\n        payload: account\r\n    })\r\n}\r\n\r\n\r\nconst accountList = {\r\n    pending: [],\r\n    approved: [],\r\n    rejected: []\r\n}\r\n// Reducer\r\nexport default (state=accountList, action) => {\r\n    switch (action.type) {\r\n        case ACCOUNT_FETCHED:\r\n            return action.payload\r\n    \r\n        case ACCOUNT_APPROVED:\r\n            return {\r\n                ...state,\r\n                pending: state.pending.filter(account => account._id !== action.payload._id),\r\n                approved: [...state.approved, action.payload]\r\n            }\r\n        \r\n        case ACCOUNT_REJECTED:\r\n            return {\r\n                ...state,\r\n                pending: state.pending.filter(account => account._id !== action.payload._id),\r\n                approved: state.approved.filter(account => account._id !== action.payload._id),\r\n                rejected: [...state.approved, action.payload]\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\nexport {\r\n    accountFetched,\r\n    accountApproved,\r\n    accountRejected\r\n}","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\app\\auth.js",["208"],"// Action Type\r\nconst AUTH_ADDED = 'authAdded'\r\nconst AUTH_REMOVED = 'authRemoved'\r\n\r\n// Actions\r\nconst authAdd = (token, type) => {\r\n    return {\r\n        type: AUTH_ADDED,\r\n        payload: {\r\n            token,\r\n            type\r\n        }\r\n    }\r\n}\r\n\r\nconst authRemove = () => {\r\n    return {\r\n        type: AUTH_REMOVED,\r\n        payload: {\r\n            token: '',\r\n            type: ''\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// Data\r\nconst authData = {\r\n    token: '',\r\n    type: ''\r\n}\r\n\r\n\r\n// Reducer\r\nexport default (auth=authData, action) => {\r\n    switch (action.type) {\r\n        case AUTH_ADDED:\r\n            return {\r\n                token: action.payload.token,\r\n                type: action.payload.type\r\n            }\r\n        \r\n        case AUTH_REMOVED:\r\n            return {\r\n                token: '',\r\n                type: ''\r\n            }\r\n\r\n        default:\r\n            return auth\r\n    }\r\n}\r\n\r\n\r\nexport {\r\n    authAdd,\r\n    authRemove\r\n}","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\landingPage\\LandingPage.jsx",[],"E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\common\\Nav.jsx",["209"],"import React from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\n\r\nimport { authRemove } from '../../app/auth'\r\nimport logo from '../../img/Instagive-logo-2.png'\r\nimport '../../style/common/Nav.css'\r\n\r\nfunction Nav(props) {\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n\r\n    const handleMenu = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <nav className=\"navBar\">\r\n            <span>\r\n                <Link to=\"/\" className='navLogo'>\r\n                    <img src={logo} alt=\"logo\" height='45px' className='logo' style={{ marginRight: 10 }} />\r\n                    <p className='navLogoName'>InstaGive</p>\r\n                </Link>\r\n                <span>\r\n                    {/* Other nav links */}\r\n                </span>\r\n            </span>\r\n            <span className='navLogin'>\r\n                {props.auth.token ?\r\n                    <span>\r\n                        {props.auth.type === 'user' ?\r\n                            <span>\r\n                                <div>\r\n                                    <IconButton\r\n                                        aria-label=\"account of current user\"\r\n                                        aria-controls=\"menu-appbar\"\r\n                                        aria-haspopup=\"true\"\r\n                                        onClick={handleMenu}\r\n                                        color=\"inherit\"\r\n                                    >\r\n                                        <AccountCircle fontSize='large' />\r\n                                    </IconButton>\r\n                                    <Menu\r\n                                        id=\"menu-appbar\"\r\n                                        anchorEl={anchorEl}\r\n                                        anchorOrigin={{\r\n                                            vertical: 'top',\r\n                                            horizontal: 'right',\r\n                                        }}\r\n                                        keepMounted\r\n                                        transformOrigin={{\r\n                                            vertical: 'top',\r\n                                            horizontal: 'right',\r\n                                        }}\r\n                                        open={open}\r\n                                        onClose={handleClose}\r\n                                    >\r\n                                        <MenuItem>\r\n                                            <NavLink to=\"/user/ledger\" className='navLink'>Ledger</NavLink>\r\n                                        </MenuItem>\r\n                                        <MenuItem>\r\n                                            <NavLink to=\"/user\" className='navLink'>Dashboard</NavLink>\r\n                                        </MenuItem>\r\n                                        <MenuItem>\r\n                                            <NavLink to=\"/user/change-password\" className='navLink'>ChangePassword</NavLink>\r\n                                        </MenuItem>\r\n                                        <MenuItem>\r\n                                            <NavLink to='/' className='navLink' onClick={() => {\r\n                                                localStorage.removeItem('user')\r\n                                                localStorage.removeItem('admin')\r\n                                                props.authRemove()\r\n                                            }}>Logout</NavLink>\r\n                                        </MenuItem>\r\n                                    </Menu>\r\n                                </div>\r\n                            </span> :\r\n                            <NavLink to='/' className='navLink' onClick={() => {\r\n                                localStorage.removeItem('user')\r\n                                localStorage.removeItem('admin')\r\n                                props.authRemove()\r\n                            }}>Logout</NavLink>\r\n                        }\r\n                    </span> :\r\n                    <span>\r\n                        <NavLink to=\"/auth/register\" className='navLink'>Signup</NavLink>\r\n                        |\r\n                        <NavLink to=\"/auth/login\" className='navLink'>Login</NavLink>\r\n                    </span>\r\n                }\r\n            </span>\r\n        </nav>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    console.log(state);\r\n    return { auth: state.auth }\r\n}\r\n\r\nexport default connect(mapStateToProps, { authRemove })(Nav);","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\authPage\\AuthPage.jsx",["210","211","212"],"import React, { useEffect, useState } from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport Login from './Login';\r\nimport Register from './Register';\r\nimport ForgotPass from './ForgotPass';\r\nimport '../../../style/authPage/authPage.css'\r\n\r\nfunction AuthPage(props) {\r\n    const [userAuthID, setUserAuthID] = useState()\r\n\r\n    useEffect(() => {\r\n        // check if there's a user in coockies\r\n        const userAuthID = localStorage.getItem('user')\r\n\r\n        const validateAuthID = async () => {\r\n            // Same logic for user login\r\n            if (userAuthID) props.history.replace('/user')\r\n        }\r\n\r\n        validateAuthID()\r\n    }, [])\r\n\r\n    return (\r\n        <div className='auth-container'>\r\n            <div className='authBackgroundImage'>\r\n            </div>\r\n            <div className='authForm'>\r\n                <div className='center'>\r\n                    <Switch>\r\n                        <Route path='/auth/login' component={Login} />\r\n                        <Route path='/auth/register' component={Register} />\r\n                        <Route path='/auth/forgot' component={ForgotPass} />\r\n                        <Redirect from='/auth' to='/auth/login' exact />\r\n                        <Redirect to='/not-found' />\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AuthPage;","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\common\\NotFound.jsx",[],"E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\userPage\\UserPage.jsx",["213"],"import React, { useEffect } from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nimport PostList from './PostList';\r\nimport LedgerPage from './ledgerPage/LedgerPage';\r\nimport PostCreate from './postDetailPage/PostCreate';\r\nimport UserPostDetails from './postDetailPage/UserPostDetails';\r\nimport ChangePass from './changePassPage/ChangePass';\r\nimport UpdateUserPost from './postUpdatePage/UpdateUserPost';\r\nimport { authRemove } from '../../../app/auth'\r\nimport { userDataFetch } from '../../../app/user'\r\n\r\nfunction UserPage(props) {\r\n    useEffect(() => {\r\n        if (!localStorage.getItem('user')) return props.history.push('/auth')\r\n        if (props.auth.token) {\r\n            props.userDataFetch(props.auth.token)\r\n        }\r\n\r\n    }, [props.auth.token])\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Switch>\r\n                    <Route path='/user/change-password' component={ChangePass} />\r\n                    <Route path='/user/post-create' component={PostCreate} />\r\n                    <Route path='/user/post-details/:id' component={UserPostDetails} />\r\n                    <Route path='/user/ledger' component={LedgerPage} />\r\n                    <Route path='/user/update-details/:id' component={UpdateUserPost} />\r\n                    <Route path='/user/' exact component={PostList} />\r\n                    <Redirect to='/not-found' />\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return state\r\n}\r\n\r\nexport default connect(mapStateToProps, { authRemove, userDataFetch })(UserPage);","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\detailsPage\\DetailsPage.jsx",[],"E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\adminPage\\AdminPage.jsx",[],"E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\landingPage\\AllPostList.jsx",[],"E:\\Projects\\Instagive\\instagive-react-frontend\\src\\app\\user.js",["214","215"],"import route from '../route/instagive'\r\n\r\n// Action Types\r\nconst USER_DATA_FETCH = 'userDataFetch'\r\nconst USER_LEDGER_ADDED = 'userLedgerAdded'\r\nconst USER_LEDGER_REMOVED = 'userLedgerRemoved'\r\nconst USER_LEDGER_UPDATED = 'userLedgerUpdated'\r\n\r\nconst USER_POST_FETCH = 'userPostFetch'\r\nconst USER_POST_ADDED = 'userPostAdded'\r\nconst USER_POST_REMOVED = 'userPostRemoved'\r\nconst USER_POST_UPDATED = 'userPostUpdated'\r\n\r\n\r\n// Action\r\n// Ledger\r\nconst userDataFetch = (token) => async dispatch => {\r\n    const { data: ledger } = await route.post('/ledger/getall', {token})\r\n    const { data: post } = await route.post('/post/userpost', { token })\r\n\r\n    dispatch({\r\n        type: USER_DATA_FETCH,\r\n        payload: {ledger, post} \r\n    })\r\n}\r\n\r\n\r\nconst userLedgerAdded = (ledgerForm, token) => async dispatch => {\r\n    await route.post(`/ledger/${ledgerForm.postId}`, {...ledgerForm, token})\r\n    \r\n    dispatch({\r\n        type: USER_LEDGER_ADDED,\r\n        payload: ledgerForm\r\n    })\r\n}\r\n\r\n\r\n// Post\r\n\r\n\r\n// Data\r\nconst userData = {\r\n    ledger: [],\r\n    post: []\r\n}\r\n\r\n\r\n// Reducer\r\nexport default (state=userData, action) => {\r\n    switch (action.type) {\r\n        case USER_DATA_FETCH:\r\n            return action.payload\r\n    \r\n        case USER_LEDGER_ADDED:\r\n            return {...state, ledger: [...state.ledger, action.payload]}\r\n    \r\n        case USER_LEDGER_REMOVED:\r\n            return {\r\n                ...state,\r\n                ledger: state.ledger.filter(ledger => ledger._id !== action.payload._id)\r\n            }\r\n    \r\n        case USER_LEDGER_UPDATED:\r\n            return state\r\n    \r\n        case USER_POST_ADDED:\r\n            return {...state, post: [...state.post, action.payload]}\r\n    \r\n        case USER_POST_REMOVED:\r\n            return {\r\n                ...state,\r\n                post: state.post.filter(post => post._id !== action.payload._id)\r\n            }\r\n    \r\n        case USER_POST_UPDATED:\r\n            return state\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport {\r\n    userDataFetch,\r\n    userLedgerAdded\r\n}","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\route\\instagive.js",[],"E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\landingPage\\Posts.jsx",[],"E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\landingPage\\Content.jsx",["216","217","218","219","220"],"import React from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Container from '@material-ui/core/Container';\r\nimport imgWave from '../../../img/wave.png'\r\nimport orgPhoto from '../../../img/org-image-content.png'\r\nimport unknownUserPhoto from '../../../img/unknown-user.png'\r\nimport checkPhoto from '../../../img/check.png'\r\n\r\nfunction Content(props) {\r\n    return (\r\n        <div className='content-container'>\r\n            <div className='content-items-container'>\r\n                <div className='item-content'>\r\n                    <img src={orgPhoto} alt=\"Image 1\" className='content-image-1' />\r\n                    <div className='content-item-text'>All organization are verified</div>\r\n                </div>\r\n                <div className='item-content'>\r\n                    <img src={unknownUserPhoto} alt=\"Image 1\" className='content-image-2' />\r\n                    <div className='content-item-text'>Donate anonymously</div>\r\n                </div>\r\n                <div className='item-content'>\r\n                    <img src={checkPhoto} alt=\"Image 1\" className='content-image-3' />\r\n                    <div className='content-item-text'>All donation are transparent</div>\r\n                </div>\r\n            </div>\r\n            <img src={imgWave} alt=\"wave\" className='content-wave' />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Content;","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\authPage\\Login.jsx",["221","222"],"import axios from 'axios';\r\nimport React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux'\r\n\r\nimport { authAdd } from '../../../app/auth'\r\nimport route from '../../../route/instagive'\r\nimport '../../../style/authPage/login.css';\r\n\r\nimport {TextField, Button} from '@material-ui/core'\r\n\r\n\r\n\r\nfunction Login(props) {\r\n  const [auth, setAuth] = useState({ username: '', password: '' });\r\n  const [error, setError] = useState({\r\n\r\n    valid: false,\r\n    msg: ''\r\n\r\n  });\r\n  \r\n\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const { data } = await route.post('/user/login', auth);\r\n\r\n    if (data.valid !== true) {\r\n      setError({valid: true, msg: data.valid })\r\n\r\n    } else {\r\n      // Set Item\r\n      localStorage.setItem('user', data.token)\r\n      props.authAdd(data.token, 'user')\r\n      props.history.push('/user')\r\n\r\n    }\r\n\r\n    // If there is error in auth, set the error to TRUE\r\n    setAuth({username: '', password: ''})\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className='LoginContainer'>\r\n      {/* Show this if the error is true */}\r\n   \r\n   \r\n\r\n      <div>\r\n        <h1 className='authTitle'>Welcome!</h1>\r\n\r\n\r\n\r\n      </div>\r\n      <form className='form-container' >\r\n      \r\n      {error && <p style={{\r\n        color: 'red',\r\n        alignSelf: 'center',\r\n        fontSize: '1.6rem'\r\n        \r\n        \r\n      }}>{error.msg}</p>}\r\n\r\n        <TextField\r\n          type='text'\r\n          name='email'\r\n          id='email'\r\n          className='form-input-text'\r\n          margin=\"normal\"\r\n\r\n          variant=\"outlined\"\r\n          label=\"Enter Email\"\r\n          autoFocus\r\n          \r\n          required={true}\r\n          value={auth.username}\r\n          onChange={(e) => setAuth({ ...auth, username: e.target.value })}\r\n        />\r\n    \r\n        <TextField\r\n          type='password'\r\n          margin=\"normal\"\r\n          required={true}\r\n          fullWidth\r\n          name='password'\r\n          id='password'\r\n          variant=\"outlined\"\r\n          label=\"Enter Password\"\r\n          className='form-input-text'\r\n          required\r\n          value={auth.password}\r\n          onChange={(e) => setAuth({ ...auth, password: e.target.value })}\r\n        />\r\n        <div style={{ width: '100%' }}>\r\n         <Button variant=\"text\"> <Link to='/auth/forgot' className='form-link'>\r\n            Forgot Password\r\n          </Link> </Button>\r\n          <div className='form-button-container'>\r\n            <Button fullWidth style={{margin: '10px'}} color=\"primary\" variant=\"contained\" onClick={handleSubmit}>Login</Button>\r\n           \r\n            <Button  style={{margin: '10px'}} fullWidth variant=\"contained\"\r\n              onClick={() => props.history.push('/auth/register')}\r\n            >\r\n              Sign up\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default connect(null, { authAdd })(Login);\r\n","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\authPage\\Register.jsx",["223"],"import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport '../../../style/authPage/register.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Register(props) {\r\n  const [checkPassword, setCheckPassword] = useState({ confirm_pass: '' });\r\n  const [userForm, setUserForm] = useState({\r\n    email: '',\r\n    password: '',\r\n    city: '',\r\n    orgName: '',\r\n    orgAddress: '',\r\n\r\n    orgNumber: '',\r\n    repName: '',\r\n\r\n    orgDescriptions: '',\r\n  });\r\n\r\n  const [files, setFiles] = useState({\r\n    orgPhoto: '',\r\n    orgDocuments: '',\r\n    repId: '',\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    console.log(event.target.value);\r\n\r\n    setUserForm({\r\n      ...userForm,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handlerepId = (file) => {\r\n    setFiles({ ...files, repId: file });\r\n  };\r\n\r\n  const handleorgPhoto = (file) => {\r\n    setFiles({ ...files, orgPhoto: file });\r\n  };\r\n\r\n  const handleorgDocuments = (multifiles) => {\r\n    setFiles({ ...files, orgDocuments: multifiles });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const formdata = new FormData();\r\n\r\n    formdata.append('repId', files.repId);\r\n    formdata.append('orgPhoto', files.orgPhoto);\r\n\r\n    for (const key in files.orgDocuments) {\r\n      formdata.append('orgDocuments', files.orgDocuments[key]);\r\n    }\r\n\r\n    formdata.append('email', userForm.email);\r\n    formdata.append('city', userForm.city);\r\n    formdata.append('password', userForm.password);\r\n\r\n    formdata.append('orgName', userForm.orgName);\r\n    formdata.append('orgAddress', userForm.orgAddress);\r\n    formdata.append('orgNumber', userForm.orgNumber);\r\n    formdata.append('repName', userForm.repName);\r\n    formdata.append('orgDescriptions', userForm.orgDescriptions);\r\n\r\n    const data = await axios.post('http://localhost:5000/user/register', formdata);\r\n    console.log(data)\r\n\r\n    setUserForm({\r\n      email: '',\r\n      password: '',\r\n      city: '',\r\n      orgName: '',\r\n      orgAddress: '',\r\n      orgPhoto: '',\r\n      orgNumber: '',\r\n      repName: '',\r\n      repId: '',\r\n      orgDocuments: [],\r\n      orgDescriptions: ''\r\n    })\r\n\r\n    setFiles({\r\n      orgPhoto: '',\r\n      orgDocuments: '',\r\n      repId: '',\r\n    })\r\n\r\n\r\n    document.getElementById('repId').value = null;\r\n    document.getElementById('orgDocuments').value = null;\r\n    document.getElementById('orgPhoto').value = null;\r\n\r\n\r\n\r\n\r\n  };\r\n\r\n  return (\r\n    <div className='register-container'>\r\n      <div>\r\n        <h1 className='authTitle'>Account Details</h1>\r\n      </div>\r\n      <form encType='multipart/form-data' action='' onSubmit={handleSubmit}>\r\n        <div className='register-form1'>\r\n          <div className='register-input-container1'>\r\n            <label className='form-label' htmlFor='email'>\r\n              Email\r\n            </label>\r\n            <input\r\n              type='text'\r\n              name='email'\r\n              id='email'\r\n              value={userForm.email}\r\n              placeholder='Email'\r\n              className='register-form-input-text'\r\n              onChange={handleChange}\r\n            />\r\n            <label className='form-label' htmlFor='password'>\r\n              Password\r\n            </label>\r\n            <input\r\n              type='text'\r\n              name='password'\r\n              id='password'\r\n              value={userForm.password}\r\n              placeholder='Password'\r\n              className='register-form-input-text'\r\n              onChange={handleChange}\r\n            />\r\n            <label className='form-label' htmlFor='confirm-pass'>\r\n              Confirm Password\r\n            </label>\r\n            <input\r\n              type='text'\r\n              name='confirm-pass'\r\n              id='confirm-pass'\r\n              placeholder='confirm Password'\r\n              className='register-form-input-text'\r\n              onChange={(e) => setCheckPassword(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className='register-form2'>\r\n          <div className='register-input-container2'>\r\n            <label className='form-label' htmlFor='orgName'>\r\n              Organization Name\r\n            </label>\r\n            <input\r\n              type='text'\r\n              name='orgName'\r\n              value={userForm.orgName}\r\n              onChange={handleChange}\r\n              id='orgName'\r\n              placeholder='Organization Name'\r\n              className='register-form-input-text'\r\n            />\r\n          </div>\r\n          <div className='register-input-container2'>\r\n            <label className='form-label' htmlFor='orgNumber'>\r\n              Organization No.\r\n            </label>\r\n            <input\r\n              type='text'\r\n              name='orgNumber'\r\n              value={userForm.orgNumber}\r\n              onChange={handleChange}\r\n              id='orgNumber'\r\n              placeholder='Organization No.'\r\n              className='register-form-input-text'\r\n            />\r\n          </div>\r\n          <div className='register-input-container2'>\r\n            <label className='form-label' htmlFor='city'>\r\n              City\r\n            </label>\r\n            <input\r\n              type='text'\r\n              name='city'\r\n              value={userForm.city}\r\n              onChange={handleChange}\r\n              id='city'\r\n              placeholder='City'\r\n              className='register-form-input-text'\r\n            />\r\n          </div>\r\n          <div className='register-input-container2'>\r\n            <label className='form-label' htmlFor='orgAddress'>\r\n              Organization Address\r\n            </label>\r\n            <input\r\n              type='text'\r\n              name='orgAddress'\r\n              value={userForm.orgAddress}\r\n              onChange={handleChange}\r\n              id='orgAddress'\r\n              placeholder='Organization Address'\r\n              className='register-form-input-text'\r\n            />\r\n          </div>\r\n          <div className='register-input-container2'>\r\n            <label className='form-label' htmlFor='repName'>\r\n              Representative Name\r\n            </label>\r\n            <input\r\n              type='text'\r\n              name='repName'\r\n              value={userForm.repName}\r\n              onChange={handleChange}\r\n              id='repName'\r\n              placeholder='Representative Name'\r\n              className='register-form-input-text'\r\n            />\r\n          </div>\r\n\r\n          <div className='register-input-container2'>\r\n            <label className='form-label' htmlFor='repId'>\r\n              Representative ID\r\n            </label>\r\n            <input\r\n              type='file'\r\n              id='repId'\r\n              name='repId'\r\n              onChange={(e) => {\r\n                const file = e.target.files[0];\r\n                handlerepId(file);\r\n              }}\r\n              className='form-input-file'\r\n            ></input>\r\n          </div>\r\n\r\n          <div className='register-input-container2'>\r\n            <label className='form-label' htmlFor='orgDocuments'>\r\n              Organization Documents\r\n            </label>\r\n            <input\r\n              type='file'\r\n              id='orgDocuments'\r\n              name='orgDocuments'\r\n              onChange={(e) => {\r\n                const multifiles = e.target.files;\r\n                handleorgDocuments(multifiles);\r\n              }}\r\n              multiple\r\n              className='form-input-file'\r\n            ></input>\r\n          </div>\r\n          <div className='register-input-container2'>\r\n            <label className='org-photo' htmlFor='orgPhoto'>\r\n              Organization Photo\r\n            </label>\r\n            <input\r\n              type='file'\r\n              id='orgPhoto'\r\n              name='orgPhoto'\r\n              onChange={(e) => {\r\n                const file = e.target.files[0];\r\n                handleorgPhoto(file);\r\n              }}\r\n              className='form-input-file'\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className='register-org-description-container'>\r\n          <label className='org-photo' htmlFor='orgDescriptions'>\r\n            Organization Description\r\n          </label>\r\n          <textarea\r\n            name='orgDescriptions'\r\n            value={userForm.orgDescriptions}\r\n            onChange={handleChange}\r\n            id='orgDescriptions'\r\n            className='register-form-input-text'\r\n          ></textarea>\r\n        </div>\r\n        <div className='form-button-container'>\r\n          <Link to='/auth/login' className='form-link'>\r\n            Cancel\r\n          </Link>\r\n          <button className='form-button'>Send Registration</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\detailsPage\\DetailsUpdatePage.jsx",["224","225","226"],"import axios from 'axios';\r\nimport React, { useState, useEffect } from 'react';\r\nimport '../../../style/detailsPage/detailsUpdatePage.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction DetailsUpdatePage(props) {\r\n    const [updates, setPosts] = useState([])\r\n\r\n\r\n    \r\n    useEffect(() => {\r\n        // Update the document title using the browser API\r\n   \r\n        const fetchUpdates = async () => {\r\n\r\n            await axios.post(`http://localhost:5000/updates/getall/${props.match.params.id}`, {token: localStorage.getItem('user')}).then(data => setPosts(data.data))\r\n\r\n        }\r\n        \r\n        fetchUpdates()\r\n        console.log(updates)\r\n      },[]);\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n                \r\n          \r\n            {/* {props.children}\r\n            <div className=\"update-container\">\r\n                {updates.map(update =>\r\n                    <div key={update.id}>\r\n                        <h3 className='update-title'>{update.title} - {update.date}</h3>\r\n                        <p className='update-details'>{update.details}</p>\r\n                        <img src={update.img} alt=\"carousel\" />\r\n                    </div>\r\n                )}\r\n            </div> */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DetailsUpdatePage;","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\adminPage\\AdminPending.jsx",["227"],"import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCheck, faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport axios from 'axios'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { accountApproved, accountRejected } from '../../../app/accounts'\r\n\r\n\r\nfunction AdminPending(props) {\r\n\r\n    const theadData = [\r\n        {\r\n            label: 'Organization',\r\n            name: 'orgName'\r\n        },\r\n        {\r\n            label: 'Email',\r\n            name: 'email'\r\n        },\r\n        {\r\n            label: 'City',\r\n            name: 'city'\r\n        },\r\n        {\r\n            label: 'Rep. Name',\r\n            name: 'repName'\r\n        },\r\n    ]\r\n\r\n    const handleApproveAccount = async (account) => {\r\n        // await axios.post(`http://localhost:5000/admin/changestatus/${account}/approved`)\r\n        //     .then(() => accountList = [])\r\n        props.accountApproved(account)\r\n        // window.location.reload();\r\n    };\r\n\r\n    const handleRejectAccount = async (account) => {\r\n        props.accountRejected(account)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1 className='admin-page-title'>Pending</h1>\r\n            <table className='table-container'>\r\n                <thead>\r\n                    <tr>\r\n                        {theadData.map(tableHead =>\r\n                            <th key={tableHead.name} className='table-header'>{tableHead.label}</th>\r\n                        )}\r\n                        <th>Status</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {props.accountPending.map(account =>\r\n                        <tr key={account._id}>\r\n                            {theadData.map(tableHead =>\r\n                                <td key={tableHead.name} className='table-item'>\r\n                                    {account[tableHead.name]}\r\n                                </td>\r\n                            )}\r\n                            <td className='table-item' id='table-button-container'>\r\n                                <FontAwesomeIcon\r\n                                    icon={faCheck}\r\n                                    className='table-icon'\r\n                                    size='lg'\r\n                                    onClick={() => handleApproveAccount(account)}\r\n                                />\r\n                                <FontAwesomeIcon\r\n                                    icon={faTimes}\r\n                                    className='table-icon'\r\n                                    size='lg'\r\n                                    onClick={() => handleRejectAccount(account)}\r\n                                />\r\n                            </td>\r\n                        </tr>\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return { accountPending: state.accounts.pending }\r\n}\r\nexport default connect(mapStateToProps, { accountApproved, accountRejected })(AdminPending);","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\adminPage\\AdminAccepted.jsx",["228","229"],"import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faEdit, faTrash } from '@fortawesome/free-solid-svg-icons'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { accountRejected } from '../../../app/accounts'\r\n\r\nfunction AdminAccepted(props) {\r\n    const theadData = [\r\n        {\r\n            label: 'Organization',\r\n            name: 'orgName'\r\n        },\r\n        {\r\n            label: 'Email',\r\n            name: 'email'\r\n        },\r\n        {\r\n            label: 'City',\r\n            name: 'city'\r\n        },\r\n        {\r\n            label: 'Rep. Name',\r\n            name: 'repName'\r\n        },\r\n    ]\r\n\r\n    const handleEditButton = (account) => {\r\n        console.log(account);\r\n    }\r\n\r\n    const handleDeleteButton = async (account) => {\r\n        props.accountRejected(account)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1 className='admin-page-title'>Accepted</h1>\r\n            <table className='table-container'>\r\n                <thead>\r\n                    <tr>\r\n                        {theadData.map(tableHead =>\r\n                            <th key={tableHead.name} className='table-header'>{tableHead.label}</th>\r\n                        )}\r\n                        <th className='table-header'>No. of Post</th>\r\n                        <th className='table-header'>Status</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {props.accApproved.map(account =>\r\n                        <tr key={account._id}>\r\n                            {theadData.map(tableHead =>\r\n                                <td key={tableHead.name} className='table-item'>\r\n                                    {account[tableHead.name]}</td>\r\n                            )}\r\n                            <td className='table-item'>\r\n\r\n                            </td>\r\n                            <td className='table-item'>\r\n                                {/* <FontAwesomeIcon\r\n                                    icon={faEdit}\r\n                                    className='table-icon'\r\n                                    size='lg'\r\n                                    onClick={e => handleEditButton(account)}\r\n                                    style={{ cursor: 'pointer' }}\r\n                                /> */}\r\n                                <FontAwesomeIcon\r\n                                    icon={faTrash}\r\n                                    className='table-icon'\r\n                                    size='lg'\r\n                                    onClick={e => handleDeleteButton(account)}\r\n                                    style={{ cursor: 'pointer' }}\r\n                                />\r\n                            </td>\r\n                        </tr>\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return { accApproved: state.accounts.approved }\r\n}\r\n\r\nexport default connect(mapStateToProps, { accountRejected })(AdminAccepted);","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\common\\Sidebar.jsx",[],"E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\adminPage\\AdminRejected.jsx",[],"E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\landingPage\\ShowContent.jsx",["230"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport '../../../style/landingPage/showContent.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction ShowContent(props) {\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    margin: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    extendedIcon: {\r\n      marginRight: theme.spacing(1),\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div id='showcase'>\r\n      <div className='container showcase-container'>\r\n        <h1>Welcome to InstaGive</h1>\r\n        <p>\r\n          Online donation platform for the residence of Pampanga\r\n        </p>\r\n        <Button\r\n        classes\r\n          variant=\"contained\"\r\n          size=\"large\"\r\n          style={{ opacity: 0.9 }}\r\n          color=\"primary\" className={classes.margin}\r\n          onClick={() => props.history.push('/post-list')}>\r\n          Browse Donations\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ShowContent;\r\n","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\authPage\\ForgotPass.jsx",[],"E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\userPage\\PostList.jsx",["231","232"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { connect } from 'react-redux';\r\nimport Icon from '@material-ui/core/Icon';\r\n\r\n\r\nfunction PostList(props) {\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      maxWidth: 345,\r\n    },\r\n    media: {\r\n      height: 140,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n  });\r\n  const classes = useStyles();\r\n\r\n  if (!props.post)\r\n    return (\r\n      <div className='postCardContainer'>\r\n        <CircularProgress color='inherit' />\r\n      </div>\r\n    );\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n          style={{margin: '12px'}}\r\n\r\nonClick={() => props.history.push('/user/post-create')}\r\n        variant='contained'\r\n        color='primary'\r\n        endIcon={<Icon fontSize=\"small\">add_circle</Icon>\r\n    }\r\n      >Create Post</Button>\r\n\r\n      <div className='postCardContainer shadow-container'>\r\n\r\n        {props.post.map((post) => (\r\n          <Card className={classes.root} style={{ margin: '20px' }}>\r\n            <CardActionArea>\r\n              <CardMedia\r\n                component='img'\r\n                alt={post.profilePic}\r\n                height='140'\r\n                image={`/docs/${post.profilePic}`}\r\n                title={post.profilePic}\r\n              />\r\n              <CardContent>\r\n                <Typography gutterBottom variant='h5' component='h2'>\r\n                  {post.Title.substring(0, 20)}\r\n                  {post.Title.length > 20 ? '...' : ''}\r\n                </Typography>\r\n                <Typography className={classes.pos} color='textSecondary'>\r\n                  {post.location} |{' '}\r\n                  {post.donationType === 'both'\r\n                    ? 'Cash, In-kind'\r\n                    : post.donationType === 'cash'\r\n                    ? 'Cash'\r\n                    : 'In-kind'}\r\n                </Typography>\r\n                <Typography variant='body2' color='textSecondary' component='p'>\r\n                  {post.description.substring(0, 255)}\r\n                  {post.description.length > 250 ? '...' : ''}\r\n                </Typography>\r\n              </CardContent>\r\n            </CardActionArea>\r\n            <CardActions>\r\n              <Button\r\n                size='small'\r\n                color='primary'\r\n                onClick={() =>\r\n                  props.history.push(`/user/post-details/${post._id}`)\r\n                }\r\n              >\r\n               View Post\r\n              </Button>\r\n            </CardActions>\r\n          </Card>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { post: state.user.post };\r\n};\r\n\r\nexport default connect(mapStateToProps)(PostList);\r\n","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\userPage\\postDetailPage\\PostCreate.jsx",[],"E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\userPage\\postDetailPage\\UserPostDetails.jsx",["233","234","235","236"],"import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { cityLocation } from '../../../others/cityLocation'\r\nimport axios from 'axios'\r\n\r\n\r\n\r\nfunction UserPostDetails(props) {\r\n    const post = props.post\r\n    const [editPost, setEditPost] = useState(false)\r\n    const [postForm, setPostForm] = useState({\r\n        Title: '',\r\n        description: '',\r\n        location: 'Angeles City',\r\n        donationType: ''\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (post) setPostForm({\r\n            Title: post.Title,\r\n            description: post.description,\r\n            location: post.location,\r\n            donationType: post.donationType,\r\n        })\r\n    }, [post])\r\n\r\n    const handleSubmit = (e) => {\r\n       \r\n        e.preventDefault();\r\n\r\n\r\n        console.log(post)\r\n\r\n        const saveUpdate = async () => {\r\n\r\n\r\n\r\n\r\n           await axios.put(`http://localhost:5000/post/edit/${post._id}`, {...postForm, token: localStorage.getItem('user')})\r\n\r\n\r\n\r\n        }\r\n\r\n        saveUpdate();\r\n\r\n   \r\n    }\r\n\r\n    if (!props.post) {\r\n        return (\r\n            <div>Loading...</div>\r\n        )\r\n    }\r\n\r\n    console.log(props);\r\n\r\n    return (\r\n        <div>\r\n            <h1>Post Details</h1>\r\n            {!editPost ? <button onClick={() => setEditPost(true)}>Edit</button> : ''}\r\n            <form className='post-container' onSubmit={handleSubmit}>\r\n                <div className=\"post-create-container\">\r\n                    <label className='form-label' htmlFor='post-profile-pic'>\r\n                        Cover Photo\r\n                    </label>\r\n                    <img src={`/docs/${post.imageName}`} alt=\"Profile Photo Here\" />\r\n\r\n                    <label htmlFor=\"title\">Title:</label>\r\n                    {!editPost ?\r\n                        <p>{post.Title}</p> :\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"title\"\r\n                            id=\"title\"\r\n                            value={postForm.Title}\r\n                            onChange={e => setPostForm({ ...postForm, Title: e.target.value })}\r\n                        />\r\n                    }\r\n\r\n                    <div>\r\n                        <div>\r\n                            <label htmlFor=\"title\">Location:</label>\r\n                            {!editPost ?\r\n                                <p>{post.location}</p> :\r\n                                <select\r\n                                    name=\"city\"\r\n                                    id=\"city\"\r\n                                    value={postForm.location}\r\n                                    onChange={e =>\r\n                                        setPostForm({ ...postForm, location: e.target.value })}\r\n                                >\r\n                                    {cityLocation.map(city =>\r\n                                        <option value={city} key={city}>\r\n                                            {city}\r\n                                        </option>\r\n                                    )}\r\n                                </select>\r\n                            }\r\n\r\n\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"\">Donation Type:</label>\r\n                            {!editPost ?\r\n                                <p>{post.donationType}</p> :\r\n                                <div>\r\n                                    <input type=\"radio\"\r\n                                        id=\"post-radio-cash\"\r\n                                        name=\"donation-type\"\r\n                                        value=\"cash\"\r\n                                        defaultChecked={postForm.donationType === \"cash\" ?\r\n                                            true : false}\r\n                                        onClick={e => setPostForm({ ...postForm, donationType: e.target.value })}\r\n                                    />\r\n                                    <label htmlFor=\"post-radio-cash\">Cash</label>\r\n                                    <input type=\"radio\"\r\n                                        id=\"post-radio-in-kind\"\r\n                                        name=\"donation-type\"\r\n                                        value=\"in-kind\"\r\n                                        defaultChecked={postForm.donationType === 'in-kind'\r\n                                            ? true : false}\r\n                                        onClick={e => setPostForm({ ...postForm, donationType: e.target.value })}\r\n                                    />\r\n                                    <label htmlFor=\"post-radio-in-kind\">In-kind</label>\r\n                                    <input type=\"radio\"\r\n                                        id=\"post-radio-both\"\r\n                                        name=\"donation-type\"\r\n                                        value=\"both\"\r\n                                        defaultChecked={postForm.donationType === \"both\"\r\n                                            ? true : false}\r\n                                        onClick={e => setPostForm({ ...postForm, donationType: e.target.value })}\r\n                                    />\r\n                                    <label htmlFor=\"post-radio-both\">Both</label>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <label htmlFor=\"details\">Details:</label>\r\n                    {!editPost ?\r\n                        <p>{post.description}</p> :\r\n                        <textarea\r\n                            name='postDetails'\r\n                            value={post.description}\r\n                            onChange={e => setPostForm({ ...postForm, description: e.target.value })}\r\n                            id='postDetails'\r\n                            className=''\r\n                        ></textarea>\r\n                    }\r\n                    <label className='form-label' htmlFor='postImages'>\r\n                        Images:\r\n                    </label>\r\n\r\n                    <img src=\"\" alt=\"Image 1\" />\r\n                    <img src=\"\" alt=\"Image 2\" />\r\n                    <img src=\"\" alt=\"Image 3\" />\r\n\r\n                    {editPost ?\r\n                        <div>\r\n                            <button onClick={() => setEditPost(false)}>Cancel</button>\r\n                            <button>Save</button>\r\n                        </div> : ''\r\n                    }\r\n                </div>\r\n            </form>\r\n            {!editPost &&\r\n                <div>\r\n                    <button onClick={() => props.history.push('/user')}>View Post List</button>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = (state, myProps) => {\r\n    return { post: state.user.post.find(post => post._id === myProps.match.params.id) }\r\n}\r\n\r\nexport default connect(mapStateToProps)(UserPostDetails);","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\userPage\\ledgerPage\\LedgerPage.jsx",[],"E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\userPage\\postUpdatePage\\UpdateUserPost.jsx",["237"],"import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport PostCreateUpdate from './PostCreateUpdate';\r\nimport PostDetailUpdate from './PostDetailUpdate';\r\n\r\nfunction UpdateUserPost(props) {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route path='/user/update-details/:id/create' component={PostCreateUpdate} />\r\n                <Route path='/user/update-details/:id' component={PostDetailUpdate} />\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UpdateUserPost;","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\detailsPage\\DetailsPageContent.jsx",["238","239","240"],"import React, {useState} from 'react';\r\nimport '../../../style/detailsPage/detailsPageContent.css'\r\nimport banner1 from '../../../img/Landscape-Color.jpg'\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport axios from 'axios'\r\n\r\n\r\n\r\n\r\nfunction DetailsPageContent(props) {\r\n  \r\n  \r\n  const [donateForm, setDonateForm] = useState({\r\n    \r\n    name: '',\r\n    amount: '',\r\n    message: '',\r\n    email: '',\r\n    \r\n    \r\n    \r\n  })\r\n  const [hasAmount , setHasAmount] = useState (false)\r\n  \r\n  \r\n  const [openModal, setModal] = useState(false);\r\n  \r\n    const handleClickOpen = () => {\r\n        setModal(true);\r\n      };\r\n    \r\n      const handleClose = () => {\r\n        setHasAmount(false)\r\n        setModal(false);\r\n      };\r\n    \r\n  \r\n      const handleSubmit = async () => {\r\n\r\n        if(donateForm.amount === '') return setHasAmount(true);\r\n\r\nelse await axios.post(`http://localhost:5000/donate/${props.match.params.id}`, donateForm)\r\n\r\n\r\n      }\r\n\r\n\r\n\r\n  \r\n    if (!props.onSelectedPost) return <div>Loading</div>\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img src={`/docs/${props.onSelectedPost.profilePic}`} alt=\"Photo\" className='detailsPageImage' />\r\n            </div>\r\n            {props.children}\r\n            <p className='donationContent'>\r\n                {props.onSelectedPost ? props.onSelectedPost.description : ''}\r\n            </p>\r\n           \r\n            <div>\r\n                {props.onSelectedPost.imageList.map(imageName => \r\n                    \r\n                    \r\n                    <img src={`/docs/${imageName}`}  alt=\"Photo\" className='detailsPageImage' />\r\n\r\n                    \r\n                    \r\n                    )}\r\n           \r\n                    </div>\r\n           \r\n           \r\n            <div className='donateNowContainer'>\r\n                <button className='donate-button' onClick={handleClickOpen}>Donate Now</button>\r\n            </div>\r\n       \r\n            <Dialog open={openModal} onClose={handleClose} aria-labelledby=\"form-dialog-title\" maxWidth='sm' fullWidth='true'>\r\n        <DialogTitle id=\"form-dialog-title\"  style={{alignSelf: 'center', fontSize: '50px'}}>Donate</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Please Fill the Inputs Bellow: \r\n          </DialogContentText>\r\n       \r\n       \r\n       \r\n          <TextField\r\n          variant=\"outlined\"\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Name (Leave Blank for Anonymous Donation)\"\r\n            type=\"text\"\r\n            fullWidth\r\n            onChange={(e) =>\r\n                setDonateForm({ ...donateForm, name: e.target.value })\r\n              }\r\n          />\r\n       \r\n\r\n\r\n    {hasAmount && <h4 style={{color: 'red', marginLeft:'2px'}}>Amount is required</h4>}\r\n       <TextField\r\n          variant=\"outlined\"\r\n            margin=\"dense\"\r\n            id=\"amount\"\r\n            label=\"Enter Amount: (Required) \"\r\n            required='true'\r\n            type=\"number\"\r\n            fullWidth\r\n            onChange={(e) =>\r\n                setDonateForm({ ...donateForm, amount: e.target.value })\r\n              }\r\n          />\r\n       \r\n\r\n\r\n\r\n       <TextField\r\n        \r\n          variant=\"outlined\"\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"email\"\r\n            label=\"Email (Optional, For Sending the Certificate)\"\r\n            type=\"email\"\r\n            fullWidth\r\n            onChange={(e) =>\r\n                setDonateForm({ ...donateForm, email: e.target.value })\r\n              }\r\n          />\r\n       \r\n       <TextField\r\n          variant=\"outlined\"\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"outlined-multiline-static\"\r\n            label=\"Message\"\r\n            rows={4}\r\n            type=\"text\"\r\n            multiline\r\n            fullWidth\r\n            onChange={(e) =>\r\n                setDonateForm({ ...donateForm, message: e.target.value })\r\n              }\r\n          />\r\n       \r\n       \r\n       \r\n\r\n\r\n       \r\n       \r\n       \r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleSubmit} color=\"primary\">\r\n            Donate\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n   \r\n       \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DetailsPageContent;","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\adminPage\\AdminLogin.jsx",["241","242"],"import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport {Container, TextField,  Typography,  CssBaseline, Button} from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nfunction AdminLogin(props) {\r\n    const [auth, setAuth] = useState({ username: '', password: '' })\r\n\r\n    const handleSubmit = async event => {\r\n        event.preventDefault()\r\n\r\n        const valid = await axios.post('http://localhost:5000/admin/login', auth);\r\n      \r\n        if (valid.data.valid !== true) \r\n            window.alert(valid.data.valid);\r\n    \r\n        else{\r\n\r\n\r\n            console.log(valid.data.token);\r\n      localStorage.setItem('admin', valid.data.token)\r\n      window.location.reload();\r\n\r\n      window.alert('Login Success');\r\n\r\n        }\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        paper: {\r\n          marginTop: theme.spacing(8),\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          alignItems: 'center',\r\n          justifyContent: 'center'\r\n        },\r\n        avatar: {\r\n          margin: theme.spacing(1),\r\n          backgroundColor: theme.palette.secondary.main,\r\n        },\r\n        form: {\r\n          width: '100%', \r\n          marginTop: theme.spacing(1),\r\n        },\r\n        submit: {\r\n          margin: theme.spacing(3, 0, 2),\r\n        },\r\n      }));\r\n    \r\n    \r\n    \r\n      const classes = useStyles();\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    return (\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        \r\n        <Container component=\"main\" maxWidth=\"sm\" >\r\n\r\n\r\n\r\n\r\n<CssBaseline/>\r\n\r\n\r\n\r\n\r\n  <div className={classes.paper}>\r\n   \r\n  \r\n\r\n            <div style={{padding: '5px 25px 50px 25px'}} className=\"shadow-container\">\r\n                <h1 style={{position:'relative', left:'30%'}} className='authTitle'>Admin Login</h1>\r\n          \r\n            \r\n          \r\n            <form action=\"#\" className='form-container' >\r\n                <TextField style={{marginBottom: '12px'}}variant=\"outlined\" type=\"text\" name=\"username\" id=\"username\" label='Enter Username: ' className='form-input-text' value={auth.username} onChange={e => setAuth({ ...auth, username: e.target.value })} />\r\n                <TextField style={{marginBottom: '12px'}} variant=\"outlined\" type=\"password\" name=\"password\" id=\"password\" label='Enter Password' className='form-input-text' value={auth.password} onChange={e => setAuth({ ...auth, password: e.target.value })} />\r\n              \r\n              \r\n              \r\n              \r\n              \r\n                    <Button variant=\"contained\" color=\"primary\"  onClick={handleSubmit} fullWidth>Login</Button>\r\n            </form>\r\n            </div>\r\n            </div>\r\n            </Container>\r\n            \r\n    );\r\n}\r\n\r\nexport default AdminLogin;","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\userPage\\changePassPage\\ChangePass.jsx",[],"E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\common\\PostCard.jsx",[],"E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\others\\cityLocation.js",[],"E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\userPage\\postUpdatePage\\PostCreateUpdate.jsx",[],"E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\userPage\\postUpdatePage\\PostDetailUpdate.jsx",["243","244"],"import React from 'react';\r\n\r\nfunction PostDetailUpdate(props) {\r\n    return (\r\n        <div>\r\n            <h1>Title</h1>\r\n            <p>Details here</p>\r\n            <img src=\"\" alt=\"Image 1\" />\r\n            <img src=\"\" alt=\"Image 2\" />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PostDetailUpdate;","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\userPage\\postDetailPage\\PostCreateDetails.jsx",["245"],"import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../../../../style/userPage/userPage.css';\r\nimport { cityLocation } from '../../../others/cityLocation';\r\nimport axios from 'axios';\r\nimport {\r\n  Container,\r\n  TextField,\r\n  Typography,\r\n  CssBaseline,\r\n  Button,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  FormLabel,\r\n  FormControlLabel,\r\n  Radio,\r\n  RadioGroup,\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nfunction PostCreateDetails(props) {\r\n  const [postForm, setPostForm] = useState({\r\n    Title: '',\r\n    description: '',\r\n    location: '',\r\n    donationType: 'Cash',\r\n    totalAmount: 0,\r\n  });\r\n  const [files, setFiles] = useState({\r\n    imageList: '',\r\n    profilePic: '',\r\n  });\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const formdata = new FormData();\r\n\r\n    formdata.append('profilePic', files.profilePic);\r\n\r\n    for (const key in files.imageList) {\r\n      formdata.append('imageList', files.imageList[key]);\r\n    }\r\n    formdata.append('Title', postForm.Title);\r\n    formdata.append('description', postForm.description);\r\n    formdata.append('location', postForm.location);\r\n    formdata.append('donationType', postForm.donationType);\r\n    formdata.append('totalAmount', postForm.totalAmount);\r\n    formdata.append('token', localStorage.getItem('user'));\r\n    console.log(...formdata);\r\n   \r\n   \r\n    const data = await axios.post(\r\n      'http://localhost:5000/post/createpost',\r\n      formdata\r\n    );\r\n\r\n\r\n    window.location.replace('http://localhost:5001/user');\r\n  };\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      marginTop: theme.spacing(8),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n      width: '100%',\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n    formControl: {\r\n      minWidth: 120,\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Container component='main' maxWidth='md'>\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n         \r\n         <div  style={{padding: '50px 25px 50px 25px'}} className=\"shadow-container\">\r\n         \r\n         \r\n          <Typography component='h1' variant='h5'>\r\n            Creating New Post{' '}\r\n          </Typography>\r\n\r\n          <form encType='multipart/form-data' className={classes.form}>\r\n            <Button variant='outlined' color='primary' component='label' >\r\n              Upload Cover Photo\r\n              <input\r\n                hidden\r\n                type='file'\r\n                onChange={(e) => {\r\n                  const file = e.target.files[0];\r\n                  setFiles({ ...files, profilePic: file });\r\n                }}\r\n              ></input>\r\n            </Button>\r\n\r\n            <TextField\r\n              color='primary'\r\n              margin='normal'\r\n              fullWidth\r\n              variant='outlined'\r\n              label='Enter Post Title'\r\n              type='text'\r\n              name='title'\r\n              id='title'\r\n              className='user-form-input'\r\n              value={postForm.Title}\r\n              onChange={(e) =>\r\n                setPostForm({ ...postForm, Title: e.target.value })\r\n              }\r\n            />\r\n\r\n\r\n\r\n            <FormControl fullWidth className={classes.formControl}>\r\n              <InputLabel style={{ marginLeft: '12px' }} id='city'>\r\n                Select Location\r\n              </InputLabel>\r\n\r\n              <Select\r\n                variant='outlined'\r\n                label='city'\r\n                name='city'\r\n                id='city'\r\n                fullWidth\r\n                value={postForm.location}\r\n                onChange={(e) =>\r\n                  setPostForm({ ...postForm, location: e.target.value })\r\n                }\r\n              >\r\n                {cityLocation.map((city) => (\r\n                  <MenuItem key={city} value={city}>{city}</MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            <FormControl\r\n              component='fieldset'\r\n              style={{ margin: '12px 0 0 12px' }}\r\n            >\r\n              <FormLabel component='legend'>Select Donation Type</FormLabel>\r\n              <RadioGroup\r\n                aria-label='gender'\r\n                name='gender1'\r\n                value={postForm.donationType}\r\n                onChange={(e) =>\r\n                  setPostForm({ ...postForm, donationType: e.target.value })\r\n                }\r\n              >\r\n                <FormControlLabel\r\n                  value='Cash'\r\n                  control={<Radio />}\r\n                  label='Cash'\r\n                />\r\n                <FormControlLabel\r\n                  value='In-Kind'\r\n                  control={<Radio />}\r\n                  label='In-Kind'\r\n                />\r\n                <FormControlLabel\r\n                  value='Both'\r\n                  control={<Radio />}\r\n                  label='Both'\r\n                />\r\n              </RadioGroup>\r\n            </FormControl>\r\n\r\n            <TextField\r\n              color='primary'\r\n              margin='normal'\r\n              fullWidth\r\n              variant='outlined'\r\n              label='Enter Amount'\r\n              type='number'\r\n              name='totalAmount'\r\n              id='totalAmount'\r\n              className='user-form-input'\r\n              value={postForm.totalAmount}\r\n              onChange={(e) =>\r\n                setPostForm({ ...postForm, totalAmount: e.target.value })\r\n              }\r\n            />\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            <TextField\r\n                      variant=\"outlined\"\r\n                      rows={10}\r\n                      type='text'\r\n                      multiline\r\n                      id='description'\r\n              fullWidth\r\n           \r\n           \r\n           \r\n              label=\"Enter your Post Description, You can include your own payment option and account, (etc, GCASH, BPI, PAYPAL) or  your address for In-Kind Donation\"\r\n              name='description'\r\n              value={postForm.description}\r\n              onChange={(e) =>\r\n                setPostForm({ ...postForm, description: e.target.value })\r\n              }\r\n          \r\n\r\n\r\n              \r\n            />\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            <Button variant='outlined' color='primary' component='label' style={{marginTop:'12px'}}>\r\n                Upload Reference Picture (Can Have Multiple Pictures)\r\n            <input\r\n            hidden\r\n              type='file'\r\n              id='postImages'\r\n              name='postImages'\r\n              onChange={(e) => {\r\n                const multifiles = e.target.files;\r\n                setFiles({ ...files, imageList: multifiles });\r\n              }}\r\n              multiple\r\n              \r\n            ></input>\r\n                      </Button>\r\n\r\n          \r\n          \r\n          \r\n          \r\n          \r\n          \r\n          \r\n            <div style={{marginTop: '12px', display: 'flex'}}>\r\n             <Button variant='outlined' color=\"default\" style={{marginRight: '12px'}}> <Link to='/user'>Cancel</Link> </Button>\r\n            \r\n            \r\n            \r\n              <Button variant='contained' color='primary' onClick={handleSubmit}>Save</Button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostCreateDetails;\r\n",["246","247"],"E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\userPage\\ledgerPage\\LedgerCreate.jsx",[],"E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\userPage\\ledgerPage\\LedgerList.jsx",["248","249","250"],"import React, { useContext, useState } from 'react';\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Container from '@material-ui/core/Container'\r\nimport {TextField, Button, Icon, FormControl, InputLabel, Select, Radio, RadioGroup, FormLabel, FormControlLabel, MenuItem\r\n} from '@material-ui/core/'\r\nimport {connect} from 'react-redux'\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport axios from 'axios'\r\n\r\n\r\n\r\n\r\n\r\nfunction LedgerList(props) {\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n    },\r\n  }))(TableCell);\r\n  \r\n  const StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n      '&:nth-of-type(odd)': {\r\n        backgroundColor: theme.palette.action.hover,\r\n      },\r\n    },\r\n  \r\n  }))(TableRow)\r\n\r\n\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    table: {\r\n      minWidth: 700,\r\n    },\r\n    paper: {\r\n      marginTop: theme.spacing(8),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n      width: '100%',\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n    formControl: {\r\n      minWidth: 120,\r\n    },\r\n  }));  \r\n  \r\n  \r\n  const classes = useStyles();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Modal\r\n\r\nconst [dateValue, setDateValue] = useState()\r\nconst [ledgerForm, setLedgerForm] = useState({\r\n    postId: '',\r\n    donorName: '',\r\n    donationType: 'Cash',\r\n    paymentAddress: '',\r\n    amount: '',\r\n    remarks: '',\r\n    date: '' ,\r\n    email: ''\r\n})\r\n\r\nconst handleSubmit = async event => {\r\n    event.preventDefault()\r\n    // if (ledgerForm.postId === 'Select Post' || ledgerForm.postId === '') return alert('Select Post first')\r\n    // if (ledgerForm.date === '') return alert('Select Date first')\r\n\r\n\r\n    await axios.post(`http://localhost:5000/ledger/${ledgerForm.postId}`, {...ledgerForm, token: localStorage.getItem('user')})\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\nconst [openModal, setModal] = useState(false);\r\n  \r\nconst handleClickOpen = async () => {\r\n    setModal(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setModal(false);\r\n  };\r\n\r\n\r\n  \r\n\r\n  return (\r\n\r\n    <div>\r\n   \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n   <Button\r\n        style={{margin: '12px'}}\r\n        onClick={handleClickOpen}\r\n        variant='contained'\r\n        color='primary'\r\n        endIcon={<Icon fontSize=\"small\">add_circle</Icon>\r\n    }\r\n      >Add Data</Button>\r\n\r\n      \r\n\r\n\r\n      <Container component='main' maxWidth='xl' className=\"shadow-container\">\r\n\r\n\r\n\r\n\r\n      <div>\r\n      \r\n        <TextField variant='outlined' style={{width: '50%', display: 'relative', left:'25%', marginBottom: '30px'}}label=\"Search Here\"/>\r\n\r\n\r\n      </div>\r\n\r\n      <div style={{ overflowX: 'auto' }}>\r\n        \r\n        \r\n        <TableContainer component={Paper}>\r\n          <Table className={classes.table}\r\n            aria-label='customized table'\r\n          >\r\n            <TableHead>\r\n              <TableRow>\r\n                <StyledTableCell align='center'>POST</StyledTableCell>\r\n                <StyledTableCell align='center'>NAME</StyledTableCell>\r\n                <StyledTableCell align='center'>EMAIL</StyledTableCell>\r\n                <StyledTableCell align='center'>DONATION TYPE</StyledTableCell>\r\n                <StyledTableCell align='center'>\r\n                  Payment Method (If Cash Donation)\r\n                </StyledTableCell>\r\n                <StyledTableCell align='center'>AMOUNT / ITEM QUANTITY</StyledTableCell>\r\n                <StyledTableCell align='center'>REMARKS</StyledTableCell>\r\n                <StyledTableCell align='center'>DATE</StyledTableCell>\r\n                \r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {props.ledger &&\r\n                props.ledger.map((data) => (\r\n                  <StyledTableRow key={data._id}>\r\n                    <StyledTableCell  align='center'>{ props.post.filter(postData => postData._id === data.postId )[0].Title }</StyledTableCell>\r\n                    <StyledTableCell align='center'>{data.donorName}</StyledTableCell>\r\n                    <StyledTableCell align='center'>{data.email}</StyledTableCell>\r\n                    <StyledTableCell align='center'>{data.donationType}</StyledTableCell>\r\n                    <StyledTableCell align='center'>{data.paymentAddress}</StyledTableCell>\r\n                    <StyledTableCell align='center'>{data.amount}</StyledTableCell>\r\n                    <StyledTableCell style={{maxWidth: '20vw'}} align='center'>{data.remarks}</StyledTableCell>\r\n                    <StyledTableCell align='center'>{(data.date)}</StyledTableCell>\r\n                  </StyledTableRow>\r\n                ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n\r\n      </Container>\r\n\r\n\r\n\r\n\r\n\r\n\r\n{/* Modal */}\r\n\r\n<Dialog open={openModal} onClose={handleClose} aria-labelledby=\"form-dialog-title\" maxWidth='sm' fullWidth={true}>\r\n        <DialogTitle id=\"form-dialog-title\"  style={{alignSelf: 'center', fontSize: '50px'}}>Add New Data</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Please Fill the Inputs Bellow: \r\n          </DialogContentText>\r\n\r\n\r\n            <FormControl style={{marginBottom: '12px'}} fullWidth={true} className={classes.formControl}>\r\n            <InputLabel style={{ marginLeft: '12px' }} id='post'>\r\n\r\n\r\n            Select Post\r\n              </InputLabel>\r\n\r\n              <Select\r\n                variant='outlined'\r\n                label='city'\r\n                name='city'\r\n                id='city'\r\n                fullWidth={true}\r\n                value={ledgerForm.postId}\r\n                onChange={(e) =>\r\n                  setLedgerForm({ ...ledgerForm, postId: e.target.value })\r\n                }\r\n              >\r\n                 {props.post && props.post.map(post =>\r\n\r\n          <MenuItem  key={post._id} value={post._id}>{post.Title}</MenuItem>\r\n\r\n\r\n                )}\r\n                              </Select>\r\n\r\n\r\n            </FormControl>\r\n\r\n\r\n\r\n\r\n\r\n            <TextField style={{marginBottom: '12px'}} variant=\"outlined\" fullWidth={true} label=\"Enter Donor Name (Can be Anonymous)\" type=\"text\" name=\"donorName\" id=\"donorName\"\r\n                        value={ledgerForm.donorName}\r\n                        onChange={e => setLedgerForm({ ...ledgerForm, donorName: e.target.value })}\r\n                    />\r\n\r\n\r\n\r\n            <TextField style={{marginBottom: '12px'}} variant=\"outlined\" fullWidth={true} label=\"Enter Email (Optional)\" type=\"text\" name=\"\" id=\"\"  onChange={e => setLedgerForm({ ...ledgerForm, email: e.target.value })} />\r\n\r\n            <FormControl style={{marginBottom: '12px'}} fullWidth={true} component=\"fieldset\">\r\n              <FormLabel component='legend'>Select Donation Type</FormLabel>\r\n\r\n\r\n              <RadioGroup\r\n                aria-label='gender'\r\n                name='gender1'\r\n                value={ledgerForm.donationType}\r\n                onChange={(e) =>\r\n                  setLedgerForm({ ...ledgerForm, donationType: e.target.value })\r\n                }>\r\n\r\n        <FormControlLabel\r\n                  value='Cash'\r\n                  control={<Radio />}\r\n                  label='Cash'\r\n                />\r\n                <FormControlLabel\r\n                  value='In-Kind'\r\n                  control={<Radio />}\r\n                  label='In-Kind'\r\n                />\r\n\r\n</RadioGroup>\r\n\r\n                \r\n                </FormControl>\r\n\r\n <TextField style={{marginBottom: '12px'}} variant=\"outlined\" fullWidth={true} label=\"Enter Payment Method\" type=\"text\" name=\"paymentAddress\" id=\"paymentAddress\"\r\n                        value={ledgerForm.paymentAddress}\r\n                        onChange={e => setLedgerForm({ ...ledgerForm, paymentAddress: e.target.value })}\r\n                    />\r\n\r\n<TextField style={{marginBottom: '12px'}} variant=\"outlined\" fullWidth={true} label=\"Enter Amount(Cash) / Item Quantity(In-Kind)\" type=\"text\" name=\"amount\" id=\"amount\"\r\n                        value={ledgerForm.amount}\r\n                        onChange={e => setLedgerForm({ ...ledgerForm, amount: e.target.value })}\r\n                    />\r\n\r\n\r\n<TextField style={{marginBottom: '12px'}} variant=\"outlined\" fullWidth={true} rows={4} multiline label=\"Enter Remarks\" type=\"text\" name=\"remarks\" id=\"remarks\"\r\n                        value={ledgerForm.remarks}\r\n                        onChange={e => setLedgerForm({ ...ledgerForm, remarks: e.target.value })}\r\n                    />\r\n\r\n\r\n\r\n      <TextField style={{marginBottom: '12px'}} variant=\"outlined\" fullWidth={true}  InputLabelProps={{\r\n      shrink: true,\r\n    }} type=\"date\"  onChange={date => {\r\n                        setDateValue(date)\r\n                        setLedgerForm({ ...ledgerForm, date: date.target.value })\r\n                    }} />\r\n\r\n\r\n\r\n\r\n\r\n\r\n          </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleSubmit} color=\"primary\">\r\n            Donate\r\n          </Button>\r\n        </DialogActions>\r\n    \r\n      </Dialog>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n\r\nreturn {ledger: state.user.ledger, post: state.user.post, userToken: state.auth.token\r\n}\r\n\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(LedgerList);\r\n",{"ruleId":"251","replacedBy":"252"},{"ruleId":"253","replacedBy":"254"},{"ruleId":"255","severity":1,"message":"256","line":1,"column":28,"nodeType":"257","messageId":"258","endLine":1,"endColumn":36},{"ruleId":"259","severity":1,"message":"260","line":40,"column":6,"nodeType":"261","endLine":40,"endColumn":8,"suggestions":"262"},{"ruleId":"255","severity":1,"message":"263","line":19,"column":7,"nodeType":"257","messageId":"258","endLine":19,"endColumn":20},{"ruleId":"255","severity":1,"message":"264","line":26,"column":7,"nodeType":"257","messageId":"258","endLine":26,"endColumn":22},{"ruleId":"255","severity":1,"message":"265","line":33,"column":7,"nodeType":"257","messageId":"258","endLine":33,"endColumn":22},{"ruleId":"266","severity":1,"message":"267","line":43,"column":1,"nodeType":"268","endLine":61,"endColumn":2},{"ruleId":"266","severity":1,"message":"267","line":42,"column":1,"nodeType":"268","endLine":65,"endColumn":2},{"ruleId":"266","severity":1,"message":"267","line":35,"column":1,"nodeType":"268","endLine":52,"endColumn":2},{"ruleId":"255","severity":1,"message":"269","line":6,"column":10,"nodeType":"257","messageId":"258","endLine":6,"endColumn":20},{"ruleId":"255","severity":1,"message":"270","line":9,"column":12,"nodeType":"257","messageId":"258","endLine":9,"endColumn":22},{"ruleId":"255","severity":1,"message":"271","line":9,"column":24,"nodeType":"257","messageId":"258","endLine":9,"endColumn":37},{"ruleId":"259","severity":1,"message":"272","line":21,"column":8,"nodeType":"261","endLine":21,"endColumn":10,"suggestions":"273"},{"ruleId":"259","severity":1,"message":"260","line":21,"column":8,"nodeType":"261","endLine":21,"endColumn":26,"suggestions":"274"},{"ruleId":"255","severity":1,"message":"275","line":9,"column":7,"nodeType":"257","messageId":"258","endLine":9,"endColumn":22},{"ruleId":"266","severity":1,"message":"267","line":49,"column":1,"nodeType":"268","endLine":81,"endColumn":2},{"ruleId":"255","severity":1,"message":"276","line":2,"column":8,"nodeType":"257","messageId":"258","endLine":2,"endColumn":19},{"ruleId":"255","severity":1,"message":"277","line":3,"column":8,"nodeType":"257","messageId":"258","endLine":3,"endColumn":17},{"ruleId":"278","severity":1,"message":"279","line":14,"column":21,"nodeType":"280","endLine":14,"endColumn":85},{"ruleId":"278","severity":1,"message":"279","line":18,"column":21,"nodeType":"280","endLine":18,"endColumn":93},{"ruleId":"278","severity":1,"message":"279","line":22,"column":21,"nodeType":"280","endLine":22,"endColumn":87},{"ruleId":"255","severity":1,"message":"281","line":1,"column":8,"nodeType":"257","messageId":"258","endLine":1,"endColumn":13},{"ruleId":"282","severity":1,"message":"283","line":99,"column":11,"nodeType":"284","endLine":99,"endColumn":19},{"ruleId":"255","severity":1,"message":"285","line":7,"column":10,"nodeType":"257","messageId":"258","endLine":7,"endColumn":23},{"ruleId":"255","severity":1,"message":"286","line":4,"column":10,"nodeType":"257","messageId":"258","endLine":4,"endColumn":25},{"ruleId":"255","severity":1,"message":"287","line":5,"column":10,"nodeType":"257","messageId":"258","endLine":5,"endColumn":22},{"ruleId":"259","severity":1,"message":"288","line":29,"column":9,"nodeType":"261","endLine":29,"endColumn":11,"suggestions":"289"},{"ruleId":"255","severity":1,"message":"281","line":4,"column":8,"nodeType":"257","messageId":"258","endLine":4,"endColumn":13},{"ruleId":"255","severity":1,"message":"290","line":3,"column":10,"nodeType":"257","messageId":"258","endLine":3,"endColumn":16},{"ruleId":"255","severity":1,"message":"291","line":28,"column":11,"nodeType":"257","messageId":"258","endLine":28,"endColumn":27},{"ruleId":"255","severity":1,"message":"292","line":6,"column":10,"nodeType":"257","messageId":"258","endLine":6,"endColumn":14},{"ruleId":"255","severity":1,"message":"286","line":11,"column":10,"nodeType":"257","messageId":"258","endLine":11,"endColumn":25},{"ruleId":"255","severity":1,"message":"287","line":12,"column":10,"nodeType":"257","messageId":"258","endLine":12,"endColumn":22},{"ruleId":"278","severity":1,"message":"279","line":67,"column":21,"nodeType":"280","endLine":67,"endColumn":85},{"ruleId":"278","severity":1,"message":"279","line":154,"column":21,"nodeType":"280","endLine":154,"endColumn":49},{"ruleId":"278","severity":1,"message":"279","line":155,"column":21,"nodeType":"280","endLine":155,"endColumn":49},{"ruleId":"278","severity":1,"message":"279","line":156,"column":21,"nodeType":"280","endLine":156,"endColumn":49},{"ruleId":"255","severity":1,"message":"293","line":2,"column":25,"nodeType":"257","messageId":"258","endLine":2,"endColumn":33},{"ruleId":"255","severity":1,"message":"294","line":3,"column":8,"nodeType":"257","messageId":"258","endLine":3,"endColumn":15},{"ruleId":"278","severity":1,"message":"279","line":62,"column":17,"nodeType":"280","endLine":62,"endColumn":114},{"ruleId":"278","severity":1,"message":"279","line":73,"column":21,"nodeType":"280","endLine":73,"endColumn":97},{"ruleId":"255","severity":1,"message":"292","line":2,"column":10,"nodeType":"257","messageId":"258","endLine":2,"endColumn":14},{"ruleId":"255","severity":1,"message":"295","line":4,"column":32,"nodeType":"257","messageId":"258","endLine":4,"endColumn":42},{"ruleId":"278","severity":1,"message":"279","line":8,"column":13,"nodeType":"280","endLine":8,"endColumn":41},{"ruleId":"278","severity":1,"message":"279","line":9,"column":13,"nodeType":"280","endLine":9,"endColumn":41},{"ruleId":"255","severity":1,"message":"296","line":55,"column":11,"nodeType":"257","messageId":"258","endLine":55,"endColumn":15},{"ruleId":"251","replacedBy":"297"},{"ruleId":"253","replacedBy":"298"},{"ruleId":"255","severity":1,"message":"299","line":1,"column":17,"nodeType":"257","messageId":"258","endLine":1,"endColumn":27},{"ruleId":"255","severity":1,"message":"300","line":2,"column":8,"nodeType":"257","messageId":"258","endLine":2,"endColumn":18},{"ruleId":"255","severity":1,"message":"301","line":95,"column":8,"nodeType":"257","messageId":"258","endLine":95,"endColumn":17},"no-native-reassign",["302"],"no-negated-in-lhs",["303"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["304"],"'postListAdded' is assigned a value but never used.","'postListRemoved' is assigned a value but never used.","'postListUpdated' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'makeStyles' is defined but never used.","'userAuthID' is assigned a value but never used.","'setUserAuthID' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["305"],["306"],"'USER_POST_FETCH' is assigned a value but never used.","'CssBaseline' is defined but never used.","'Container' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'axios' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'checkPassword' is assigned a value but never used.","'FontAwesomeIcon' is defined but never used.","'faPlusCircle' is defined but never used.","React Hook useEffect has missing dependencies: 'props.match.params.id' and 'updates'. Either include them or remove the dependency array.",["307"],"'faEdit' is defined but never used.","'handleEditButton' is assigned a value but never used.","'Link' is defined but never used.","'Redirect' is defined but never used.","'banner1' is defined but never used.","'Typography' is defined but never used.","'data' is assigned a value but never used.",["302"],["303"],"'useContext' is defined but never used.","'DatePicker' is defined but never used.","'dateValue' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"308","fix":"309"},{"desc":"310","fix":"311"},{"desc":"312","fix":"313"},{"desc":"314","fix":"315"},"Update the dependencies array to be: [props]",{"range":"316","text":"317"},"Update the dependencies array to be: [props.history]",{"range":"318","text":"319"},"Update the dependencies array to be: [props, props.auth.token]",{"range":"320","text":"321"},"Update the dependencies array to be: [props.match.params.id, updates]",{"range":"322","text":"323"},[1369,1371],"[props]",[674,676],"[props.history]",[804,822],"[props, props.auth.token]",[768,770],"[props.match.params.id, updates]"]