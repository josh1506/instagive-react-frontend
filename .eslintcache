[{"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\index.jsx":"1","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\App.jsx":"2","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\context\\postContext.js":"3","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\context\\accountList.js":"4","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\context\\userLedger.js":"5","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\common\\NotFound.jsx":"6","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\landingPage\\LandingPage.jsx":"7","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\detailsPage\\DetailsPage.jsx":"8","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\common\\Nav.jsx":"9","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\authPage\\AuthPage.jsx":"10","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\adminPage\\AdminPage.jsx":"11","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\UserPage.jsx":"12","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\detailsPage\\DetailsPageContent.jsx":"13","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\landingPage\\ShowContent.jsx":"14","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\detailsPage\\DetailsUpdatePage.jsx":"15","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\authPage\\Register.jsx":"16","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\landingPage\\Posts.jsx":"17","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\authPage\\ForgotPass.jsx":"18","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\common\\Sidebar.jsx":"19","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\authPage\\Login.jsx":"20","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\adminPage\\AdminPending.jsx":"21","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\adminPage\\AdminRejected.jsx":"22","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\adminPage\\AdminAccepted.jsx":"23","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\adminPage\\AdminLogin.jsx":"24","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\PostList.jsx":"25","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\postDetailPage\\PostCreate.jsx":"26","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\ledgerPage\\LedgerPage.jsx":"27","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\postDetailPage\\UserPostDetails.jsx":"28","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\others\\cityLocation.js":"29","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\common\\PostCard.jsx":"30","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\postDetailPage\\PostCreateDetails.jsx":"31","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\ledgerPage\\LedgerList.jsx":"32","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\ledgerPage\\LedgerCreate.jsx":"33"},{"size":325,"mtime":1614122508024,"results":"34","hashOfConfig":"35"},{"size":2317,"mtime":1614419235209,"results":"36","hashOfConfig":"35"},{"size":134,"mtime":1614122508020,"results":"37","hashOfConfig":"35"},{"size":142,"mtime":1614122508020,"results":"38","hashOfConfig":"35"},{"size":133,"mtime":1614419235263,"results":"39","hashOfConfig":"35"},{"size":385,"mtime":1614122508006,"results":"40","hashOfConfig":"35"},{"size":281,"mtime":1614419235236,"results":"41","hashOfConfig":"35"},{"size":1590,"mtime":1614122508014,"results":"42","hashOfConfig":"35"},{"size":1761,"mtime":1614419698615,"results":"43","hashOfConfig":"35"},{"size":1404,"mtime":1614419235227,"results":"44","hashOfConfig":"35"},{"size":2085,"mtime":1614421282225,"results":"45","hashOfConfig":"35"},{"size":1682,"mtime":1614419698616,"results":"46","hashOfConfig":"35"},{"size":769,"mtime":1614122508014,"results":"47","hashOfConfig":"35"},{"size":539,"mtime":1614122508016,"results":"48","hashOfConfig":"35"},{"size":4337,"mtime":1614122508015,"results":"49","hashOfConfig":"35"},{"size":8809,"mtime":1614401205784,"results":"50","hashOfConfig":"35"},{"size":919,"mtime":1614419235240,"results":"51","hashOfConfig":"35"},{"size":1696,"mtime":1614122508012,"results":"52","hashOfConfig":"35"},{"size":508,"mtime":1614122508006,"results":"53","hashOfConfig":"35"},{"size":2442,"mtime":1614420594634,"results":"54","hashOfConfig":"35"},{"size":3050,"mtime":1614419235213,"results":"55","hashOfConfig":"35"},{"size":1519,"mtime":1614419235214,"results":"56","hashOfConfig":"35"},{"size":3189,"mtime":1614419235211,"results":"57","hashOfConfig":"35"},{"size":1770,"mtime":1614421673835,"results":"58","hashOfConfig":"35"},{"size":829,"mtime":1614419235245,"results":"59","hashOfConfig":"35"},{"size":504,"mtime":1614419235253,"results":"60","hashOfConfig":"35"},{"size":534,"mtime":1614419235253,"results":"61","hashOfConfig":"35"},{"size":5724,"mtime":1614419235262,"results":"62","hashOfConfig":"35"},{"size":427,"mtime":1614303857842,"results":"63","hashOfConfig":"35"},{"size":1434,"mtime":1614419235210,"results":"64","hashOfConfig":"35"},{"size":5232,"mtime":1614419235254,"results":"65","hashOfConfig":"35"},{"size":2809,"mtime":1614419235252,"results":"66","hashOfConfig":"35"},{"size":3732,"mtime":1614419768431,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"w933ur",{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"70"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"70"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"70"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"70"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"70"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"70"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"70"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"70"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"70"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"70"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"70"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"70"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\index.jsx",[],["147","148"],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\App.jsx",["149"],"import React, { useEffect, useState } from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport Nav from './components/common/Nav';\r\nimport LandingPage from './components/pages/landingPage/LandingPage';\r\nimport DetailsPage from './components/pages/detailsPage/DetailsPage';\r\nimport AuthPage from './components/pages/authPage/AuthPage';\r\nimport UserPage from './components/pages/userPage/UserPage';\r\nimport AdminPage from './components/pages/adminPage/AdminPage';\r\nimport PostContext from './context/postContext';\r\nimport NotFound from './components/common/NotFound';\r\nimport AccountList from './context/accountList';\r\nimport UserLedger from './context/userLedger';\r\nimport './App.css';\r\n\r\nconst axios = require('axios');\r\n\r\nfunction App() {\r\n  const [post, setPost] = useState([])\r\n  const [userLedger, setUserLedger] = useState([])\r\n  const [accountList, setAccountList] = useState({\r\n    accepted: [],\r\n    pending: [],\r\n    rejected: []\r\n  })\r\n\r\n  useEffect(() => {\r\n    // Run API here\r\n    // axios post\r\n    // axios list\r\n    setPost([]);\r\n    const getAllData = async () => {\r\n      await axios\r\n        .get('http://localhost:5000/admin/getusers')\r\n        .then((data) => setAccountList(data.data));\r\n\r\n      await axios.get('http://localhost:5000/landing')\r\n        .then((data) => console.log(data.data))\r\n\r\n      // got ledger post here\r\n      // await axios.get('')\r\n      //   .then((data) => setUserLedger(data.data));\r\n    };\r\n\r\n    getAllData();\r\n  }, []);\r\n\r\n  return (\r\n    <PostContext.Provider value={post}>\r\n      <AccountList.Provider value={accountList}>\r\n        <UserLedger.Provider value={userLedger}>\r\n          <div className='App'>\r\n            <Nav />\r\n            <Switch>\r\n              <Route path='/details/:id' component={DetailsPage} />\r\n              <Route path='/auth' component={AuthPage} />\r\n              <Route path='/user' component={UserPage} />\r\n              <Route path='/not-found' component={NotFound} />\r\n              <Route path='/admin' component={AdminPage} />\r\n              <Route path='/' exact component={LandingPage} />\r\n              <Redirect to='/not-found' />\r\n            </Switch>\r\n          </div>\r\n        </UserLedger.Provider>\r\n      </AccountList.Provider>\r\n    </PostContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\context\\postContext.js",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\context\\accountList.js",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\context\\userLedger.js",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\common\\NotFound.jsx",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\landingPage\\LandingPage.jsx",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\detailsPage\\DetailsPage.jsx",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\common\\Nav.jsx",["150"],"import React, { useEffect, useState } from 'react';\r\nimport '../../style/common/Nav.css'\r\nimport logo from '../../img/Instagive-logo-2.png'\r\nimport { Link, NavLink } from 'react-router-dom';\r\n\r\nfunction Nav(props) {\r\n    const [userAuth, setUserAuth] = useState()\r\n\r\n    useEffect(() => {\r\n        setUserAuth(localStorage.getItem('user') || localStorage.getItem('admin'))\r\n    })\r\n\r\n    return (\r\n        <nav className=\"navBar\">\r\n            <span>\r\n                <Link to=\"/\" className='navLogo'>\r\n                    <img src={logo} alt=\"logo\" height='45px' className='logo' style={{ marginRight: 10 }} />\r\n                    <p className='navLogoName'>InstaGive</p>\r\n                </Link>\r\n                <span>\r\n                    {/* Other nav links */}\r\n                </span>\r\n            </span>\r\n            <span className='navLogin'>\r\n                {userAuth ?\r\n                    <span>\r\n\r\n                        <NavLink to=\"/user/ledger\" className='navLink'>Ledger</NavLink>\r\n                        <NavLink to=\"/user\" className='navLink'>Dashboard</NavLink>\r\n                        <NavLink to='/' className='navLink' onClick={() => {\r\n                            localStorage.removeItem('user')\r\n                            localStorage.removeItem('admin')\r\n                            setUserAuth('')\r\n                        }}>Logout</NavLink>\r\n                    </span> :\r\n                    <span>\r\n                        <NavLink to=\"/auth/register\" className='navLink'>Signup</NavLink>\r\n                        |\r\n                        <NavLink to=\"/auth/login\" className='navLink'>Login</NavLink>\r\n                    </span>\r\n                }\r\n            </span>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Nav;","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\authPage\\AuthPage.jsx",["151","152","153"],"import React, { useEffect, useState } from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport Login from './Login';\r\nimport Register from './Register';\r\nimport ForgotPass from './ForgotPass';\r\nimport '../../../style/authPage/authPage.css'\r\n\r\nfunction AuthPage(props) {\r\n    const [userAuthID, setUserAuthID] = useState()\r\n\r\n    useEffect(() => {\r\n        // check if there's a user in coockies\r\n        const userAuthID = localStorage.getItem('user')\r\n\r\n        const validateAuthID = async () => {\r\n            // Same logic for user login\r\n            if (userAuthID) props.history.replace('/user')\r\n        }\r\n\r\n        validateAuthID()\r\n    }, [])\r\n\r\n    return (\r\n        <div className='auth-container'>\r\n            <div className='authBackgroundImage'>\r\n            </div>\r\n            <div className='authForm'>\r\n                <div className='center'>\r\n                    <Switch>\r\n                        <Route path='/auth/login' component={Login} />\r\n                        <Route path='/auth/register' component={Register} />\r\n                        <Route path='/auth/forgot' component={ForgotPass} />\r\n                        <Redirect from='/auth' to='/auth/login' exact />\r\n                        <Redirect to='/not-found' />\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AuthPage;","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\adminPage\\AdminPage.jsx",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\UserPage.jsx",["154","155"],"import React, { useEffect, useState } from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport PostList from './PostList';\r\nimport LedgerPage from './ledgerPage/LedgerPage';\r\nimport PostCreate from './postDetailPage/PostCreate';\r\nimport UserPostDetails from './postDetailPage/UserPostDetails';\r\nimport axios from 'axios'\r\n\r\nfunction UserPage(props) {\r\n    useEffect(() => {\r\n        // check if there's a user in local storage\r\n        const userToken = { token: localStorage.getItem('user') }\r\n\r\n        const validateAuthID = async () => {\r\n            // Same logic for user login\r\n            // axios for validating ID\r\n            await axios.post('/checkusertoken', userToken)\r\n                .then(({ data }) => {\r\n                    // data.repName\r\n                })\r\n                .catch(({ data }) => {\r\n                    // if data.valid{\r\n                    // localStorage.removeItem('user')\r\n                    // props.history.push('/auth')\r\n                    // }\r\n                })\r\n        }\r\n\r\n        validateAuthID()\r\n        if (!userToken) props.history.replace('/auth')\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Switch>\r\n                    <Route path='/user/post-create' component={PostCreate} />\r\n                    <Route path='/user/post-details' component={UserPostDetails} />\r\n                    <Route path='/user/ledger' component={LedgerPage} />\r\n                    <Route path='/user/' exact component={PostList} />\r\n                    <Redirect to='/not-found' />\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserPage;","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\detailsPage\\DetailsPageContent.jsx",["156"],"import React from 'react';\r\nimport '../../../style/detailsPage/detailsPageContent.css'\r\nimport banner1 from '../../../img/Landscape-Color.jpg'\r\n\r\nfunction DetailsPageContent(props) {\r\n    if (!props.onSelectedPost) return <div>Loading</div>\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img src={banner1} alt=\"Photo\" className='detailsPageImage' />\r\n            </div>\r\n            {props.children}\r\n            <p className='donationContent'>\r\n                {props.onSelectedPost ? props.onSelectedPost.description : ''}\r\n            </p>\r\n            <div className='donateNowContainer'>\r\n                <button className='donate-button'>Donate Now</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DetailsPageContent;","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\landingPage\\ShowContent.jsx",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\detailsPage\\DetailsUpdatePage.jsx",["157"],"import React, { useState } from 'react';\r\nimport '../../../style/detailsPage/detailsUpdatePage.css'\r\n\r\nfunction DetailsUpdatePage(props) {\r\n    const [posts, setPosts] = useState([\r\n        {\r\n            id: 1,\r\n            title: 'Update Title',\r\n            date: 'Jan 20, 2020',\r\n            details: \"Nothing to see But a dozen dying roses at our feet Your timing is perfect Ironic to me Showing up the moment that you shouldn't be Last time I checked You're the one that left Last words you said That you couldn't care less It's funny how you miss me more than you could ever love me How you couldn't give me everything and now you want it from me Yeah, it's funny how it's different now that I got somebody Yeah it's funny Ooh Yeah it's funny, funny, funny, how you answer, answer, answer 'Cause his lips seem, lips seem, lips seem, both my hands are on his body Yeah it's funny how it's different now that I got somebody Yeah it's funny Ooh Sending a message Through mutual friends It's like I'm talking to you using them You heard I was happy…\",\r\n            img: ''\r\n        }, {\r\n            id: 2,\r\n            title: 'Update Title',\r\n            date: 'Feb 14, 2020',\r\n            details: \"Nothing to see But a dozen dying roses at our feet Your timing is perfect Ironic to me Showing up the moment that you shouldn't be Last time I checked You're the one that left Last words you said That you couldn't care less It's funny how you miss me more than you could ever love me How you couldn't give me everything and now you want it from me Yeah, it's funny how it's different now that I got somebody Yeah it's funny Ooh Yeah it's funny, funny, funny, how you answer, answer, answer 'Cause his lips seem, lips seem, lips seem, both my hands are on his body Yeah it's funny how it's different now that I got somebody Yeah it's funny Ooh Sending a message Through mutual friends It's like I'm talking to you using them You heard I was happy…\",\r\n            img: ''\r\n        }, {\r\n            id: 3,\r\n            title: 'Update Title',\r\n            date: 'May 17, 2020',\r\n            details: \"Nothing to see But a dozen dying roses at our feet Your timing is perfect Ironic to me Showing up the moment that you shouldn't be Last time I checked You're the one that left Last words you said That you couldn't care less It's funny how you miss me more than you could ever love me How you couldn't give me everything and now you want it from me Yeah, it's funny how it's different now that I got somebody Yeah it's funny Ooh Yeah it's funny, funny, funny, how you answer, answer, answer 'Cause his lips seem, lips seem, lips seem, both my hands are on his body Yeah it's funny how it's different now that I got somebody Yeah it's funny Ooh Sending a message Through mutual friends It's like I'm talking to you using them You heard I was happy…\",\r\n            img: ''\r\n        }, {\r\n            id: 4,\r\n            title: 'Update Title',\r\n            date: 'Nov 26, 2020',\r\n            details: \"Nothing to see But a dozen dying roses at our feet Your timing is perfect Ironic to me Showing up the moment that you shouldn't be Last time I checked You're the one that left Last words you said That you couldn't care less It's funny how you miss me more than you could ever love me How you couldn't give me everything and now you want it from me Yeah, it's funny how it's different now that I got somebody Yeah it's funny Ooh Yeah it's funny, funny, funny, how you answer, answer, answer 'Cause his lips seem, lips seem, lips seem, both my hands are on his body Yeah it's funny how it's different now that I got somebody Yeah it's funny Ooh Sending a message Through mutual friends It's like I'm talking to you using them You heard I was happy…\",\r\n            img: ''\r\n        }\r\n    ])\r\n\r\n    return (\r\n        <div>\r\n            {props.children}\r\n            <div className=\"update-container\">\r\n                {posts.map(post =>\r\n                    <div key={post.id}>\r\n                        <h3 className='update-title'>{post.title} - {post.date}</h3>\r\n                        <p className='update-details'>{post.details}</p>\r\n                        <img src={post.img} alt=\"carousel\" />\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DetailsUpdatePage;","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\authPage\\Register.jsx",["158"],"import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport '../../../style/authPage/register.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Register(props) {\r\n  const [checkPassword, setCheckPassword] = useState({ confirm_pass: '' });\r\n  const [userForm, setUserForm] = useState({\r\n    email: '',\r\n    password: '',\r\n    city: '',\r\n    orgName: '',\r\n    orgAddress: '',\r\n\r\n    orgNumber: '',\r\n    repName: '',\r\n\r\n    orgDescriptions: '',\r\n  });\r\n\r\n  const [files, setFiles] = useState({\r\n    orgPhoto: '',\r\n    orgDocuments: '',\r\n    repId: '',\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    console.log(event.target.value);\r\n\r\n    setUserForm({\r\n      ...userForm,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handlerepId = (file) => {\r\n    setFiles({ ...files, repId: file });\r\n  };\r\n\r\n  const handleorgPhoto = (file) => {\r\n    setFiles({ ...files, orgPhoto: file });\r\n  };\r\n\r\n  const handleorgDocuments = (multifiles) => {\r\n    setFiles({ ...files, orgDocuments: multifiles });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const formdata = new FormData();\r\n\r\n    formdata.append('repId', files.repId);\r\n    formdata.append('orgPhoto', files.orgPhoto);\r\n\r\n    for (const key in files.orgDocuments) {\r\n      formdata.append('orgDocuments', files.orgDocuments[key]);\r\n    }\r\n\r\n    formdata.append('email', userForm.email);\r\n    formdata.append('city', userForm.city);\r\n    formdata.append('password', userForm.password);\r\n\r\n    formdata.append('orgName', userForm.orgName);\r\n    formdata.append('orgAddress', userForm.orgAddress);\r\n    formdata.append('orgNumber', userForm.orgNumber);\r\n    formdata.append('repName', userForm.repName);\r\n    formdata.append('orgDescriptions', userForm.orgDescriptions);\r\n\r\n   const data =   await axios.post('http://localhost:5000/user/register', formdata);\r\n   console.log(data)\r\n\r\n    setUserForm({\r\n        email: '',\r\n        password: '',\r\n        city: '',\r\n        orgName: '',\r\n        orgAddress: '',\r\n        orgPhoto: '',\r\n        orgNumber: '',\r\n        repName: '',\r\n        repId: '',\r\n        orgDocuments: [],\r\n        orgDescriptions: ''\r\n    })\r\n\r\n    setFiles({\r\n      orgPhoto: '',\r\n    orgDocuments: '',\r\n    repId: '',\r\n    })\r\n\r\n\r\n    document.getElementById('repId').value=   null;\r\n    document.getElementById('orgDocuments').value=   null;\r\n    document.getElementById('orgPhoto').value=   null;\r\n\r\n\r\n\r\n\r\n  };\r\n\r\n  return (\r\n    <div className='register-container'>\r\n      <div>\r\n        <h1 className='authTitle'>Account Details</h1>\r\n      </div>\r\n      <form encType='multipart/form-data' action='' onSubmit={handleSubmit}>\r\n        <div className='register-form1'>\r\n          <div className='register-input-container1'>\r\n            <label className='form-label' htmlFor='email'>\r\n              Email\r\n            </label>\r\n            <input\r\n              type='text'\r\n              name='email'\r\n              id='email'\r\n              value={userForm.email}\r\n              placeholder='Email'\r\n              className='register-form-input-text'\r\n              onChange={handleChange}\r\n            />\r\n            <label className='form-label' htmlFor='password'>\r\n              Password\r\n            </label>\r\n            <input\r\n              type='text'\r\n              name='password'\r\n              id='password'\r\n              value={userForm.password}\r\n              placeholder='Password'\r\n              className='register-form-input-text'\r\n              onChange={handleChange}\r\n            />\r\n            <label className='form-label' htmlFor='confirm-pass'>\r\n              Confirm Password\r\n            </label>\r\n            <input\r\n              type='text'\r\n              name='confirm-pass'\r\n              id='confirm-pass'\r\n              placeholder='confirm Password'\r\n              className='register-form-input-text'\r\n              onChange={(e) => setCheckPassword(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className='register-form2'>\r\n          <div className='register-input-container2'>\r\n            <label className='form-label' htmlFor='orgName'>\r\n              Organization Name\r\n            </label>\r\n            <input\r\n              type='text'\r\n              name='orgName'\r\n              value={userForm.orgName}\r\n              onChange={handleChange}\r\n              id='orgName'\r\n              placeholder='Organization Name'\r\n              className='register-form-input-text'\r\n            />\r\n          </div>\r\n          <div className='register-input-container2'>\r\n            <label className='form-label' htmlFor='orgNumber'>\r\n              Organization No.\r\n            </label>\r\n            <input\r\n              type='text'\r\n              name='orgNumber'\r\n              value={userForm.orgNumber}\r\n              onChange={handleChange}\r\n              id='orgNumber'\r\n              placeholder='Organization No.'\r\n              className='register-form-input-text'\r\n            />\r\n          </div>\r\n          <div className='register-input-container2'>\r\n            <label className='form-label' htmlFor='city'>\r\n              City\r\n            </label>\r\n            <input\r\n              type='text'\r\n              name='city'\r\n              value={userForm.city}\r\n              onChange={handleChange}\r\n              id='city'\r\n              placeholder='City'\r\n              className='register-form-input-text'\r\n            />\r\n          </div>\r\n          <div className='register-input-container2'>\r\n            <label className='form-label' htmlFor='orgAddress'>\r\n              Organization Address\r\n            </label>\r\n            <input\r\n              type='text'\r\n              name='orgAddress'\r\n              value={userForm.orgAddress}\r\n              onChange={handleChange}\r\n              id='orgAddress'\r\n              placeholder='Organization Address'\r\n              className='register-form-input-text'\r\n            />\r\n          </div>\r\n          <div className='register-input-container2'>\r\n            <label className='form-label' htmlFor='repName'>\r\n              Representative Name\r\n            </label>\r\n            <input\r\n              type='text'\r\n              name='repName'\r\n              value={userForm.repName}\r\n              onChange={handleChange}\r\n              id='repName'\r\n              placeholder='Representative Name'\r\n              className='register-form-input-text'\r\n            />\r\n          </div>\r\n\r\n          <div className='register-input-container2'>\r\n            <label className='form-label' htmlFor='repId'>\r\n              Representative ID\r\n            </label>\r\n            <input\r\n              type='file'\r\n              id='repId'\r\n              name='repId'\r\n              onChange={(e) => {\r\n                const file = e.target.files[0];\r\n                handlerepId(file);\r\n              }}\r\n              className='form-input-file'\r\n            ></input>\r\n          </div>\r\n\r\n          <div className='register-input-container2'>\r\n            <label className='form-label' htmlFor='orgDocuments'>\r\n              Organization Documents\r\n            </label>\r\n            <input\r\n              type='file'\r\n              id='orgDocuments'\r\n              name='orgDocuments'\r\n              onChange={(e) => {\r\n                const multifiles = e.target.files;\r\n                handleorgDocuments(multifiles);\r\n              }}\r\n              multiple\r\n              className='form-input-file'\r\n            ></input>\r\n          </div>\r\n          <div className='register-input-container2'>\r\n            <label className='org-photo' htmlFor='orgPhoto'>\r\n              Organization Photo\r\n            </label>\r\n            <input\r\n              type='file'\r\n              id='orgPhoto'\r\n              name='orgPhoto'\r\n              onChange={(e) => {\r\n                const file = e.target.files[0];\r\n                handleorgPhoto(file);\r\n              }}\r\n              className='form-input-file'\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className='register-org-description-container'>\r\n          <label className='org-photo' htmlFor='orgDescriptions'>\r\n            Organization Description\r\n          </label>\r\n          <textarea\r\n            name='orgDescriptions'\r\n            value={userForm.orgDescriptions}\r\n            onChange={handleChange}\r\n            id='orgDescriptions'\r\n            className='register-form-input-text'\r\n          ></textarea>\r\n        </div>\r\n        <div className='form-button-container'>\r\n          <Link to='/auth/login' className='form-link'>\r\n            Cancel\r\n          </Link>\r\n          <button className='form-button'>Send Registration</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\landingPage\\Posts.jsx",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\authPage\\ForgotPass.jsx",["159","160"],"import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport '../../../style/authPage/forgotPassword.css'\r\n\r\nfunction ForgotPass(props) {\r\n    const [email, setEmail] = useState({ email: '' })\r\n    const [showMessage, setShowMessage] = useState(false)\r\n\r\n    const handleSendEmail = () => {\r\n        setShowMessage(true)\r\n    }\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault()\r\n\r\n        // handleSendEmail()\r\n    }\r\n\r\n    return (\r\n        <div className='forgot-pass-container'>\r\n            <div className='forgot-pass-title'>\r\n                <h1 className='authTitle'>Forgot Password</h1>\r\n                <p className='authDetails'>You can change your password for security reasons or reset it if you forget it. Your Google Account password is used to access many Google products, like Gmail and YouTube.</p>\r\n            </div>\r\n            <form action=\"\" className='form-container' onSubmit={handleSubmit}>\r\n                <label htmlFor=\"email\" className='form-label'>Email</label>\r\n                <input type=\"email\" name=\"email\" id=\"email\" className='form-input-text' />\r\n                {showMessage ? <p>We send a request password in your email</p> : ''}\r\n            </form>\r\n            <div style={{ width: '100%' }} className='form-button-container'>\r\n                <div>\r\n                    <Link to=\"/auth/login\" className='form-link'>Login</Link>\r\n                    <Link to=\"/auth/register\" className='form-link'>Signup</Link>\r\n                </div>\r\n                <button className='form-button' onClick={handleSendEmail}>Send</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ForgotPass;","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\common\\Sidebar.jsx",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\authPage\\Login.jsx",["161"],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\adminPage\\AdminPending.jsx",["162"],"import React, { useContext, useEffect } from 'react';\r\nimport axios from 'axios'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCheck, faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport AccountList from './../../../context/accountList';\r\n\r\nfunction AdminPending(props) {\r\n    let accountList = useContext(AccountList)\r\n    let data = accountList.pending ? accountList.pending : [];\r\n\r\n    const theadData = [\r\n        {\r\n            label: 'Organization',\r\n            name: 'orgName'\r\n        },\r\n        {\r\n            label: 'Email',\r\n            name: 'email'\r\n        },\r\n        {\r\n            label: 'City',\r\n            name: 'city'\r\n        },\r\n        {\r\n            label: 'Rep. Name',\r\n            name: 'repName'\r\n        },\r\n    ]\r\n\r\n    const handleApproveAccount = async (account) => {\r\n        await axios.post(`http://localhost:5000/admin/changestatus/${account}/approved`)\r\n            .then(() => accountList = [])\r\n\r\n        window.location.reload();\r\n    };\r\n\r\n    const handleRejectAccount = async (account) => {\r\n        await axios.post(`http://localhost:5000/admin/changestatus/${account}/rejected`)\r\n            .then(() => accountList = [])\r\n\r\n        window.location.reload();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1 className='admin-page-title'>Pending</h1>\r\n            <table className='table-container'>\r\n                <thead>\r\n                    <tr>\r\n                        {theadData.map(tableHead =>\r\n                            <th key={tableHead.name} className='table-header'>{tableHead.label}</th>\r\n                        )}\r\n                        <th>Status</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {data.map(account =>\r\n                        <tr key={account.id}>\r\n                            {theadData.map(tableHead =>\r\n                                <td key={tableHead.name} className='table-item'>\r\n                                    {account[tableHead.name]}\r\n                                </td>\r\n                            )}\r\n                            <td className='table-item' id='table-button-container'>\r\n                                <FontAwesomeIcon\r\n                                    icon={faCheck}\r\n                                    className='table-icon'\r\n                                    size='lg'\r\n                                    onClick={() => handleApproveAccount(account._id)}\r\n                                />\r\n                                <FontAwesomeIcon\r\n                                    icon={faTimes}\r\n                                    className='table-icon'\r\n                                    size='lg'\r\n                                    onClick={() => handleRejectAccount(account._id)}\r\n                                />\r\n                            </td>\r\n                        </tr>\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AdminPending;","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\adminPage\\AdminRejected.jsx",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\adminPage\\AdminAccepted.jsx",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\adminPage\\AdminLogin.jsx",["163"],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\PostList.jsx",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\postDetailPage\\PostCreate.jsx",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\ledgerPage\\LedgerPage.jsx",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\postDetailPage\\UserPostDetails.jsx",["164","165","166","167","168","169","170","171"],"import React, { useState } from 'react';\r\nimport axios from 'axios'\r\nimport { cityLocation } from '../../../others/cityLocation'\r\n\r\nfunction UserPostDetails(props) {\r\n    const [editPost, setEditPost] = useState(false)\r\n    const [postForm, setPostForm] = useState({\r\n        Title: '',\r\n        description: '',\r\n        location: '',\r\n        donationType: ''\r\n    })\r\n    const [files, setFiles] = useState({\r\n        postImg: '',\r\n        profilePic: '',\r\n    });\r\n\r\n    const handleSubmit = () => {\r\n        // axios for handling postForm\r\n        // axios.post('', postForm)\r\n        // axios for handling files\r\n        // axios.post('', files)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Post Details</h1>\r\n            {!editPost ? <button onClick={() => setEditPost(true)}>Edit</button> : ''}\r\n            <form className='post-container'>\r\n                <div className=\"post-create-container\">\r\n                    <label className='form-label' htmlFor='post-profile-pic'>\r\n                        Cover Photo\r\n                    </label>\r\n                    <img src=\"\" alt=\"Profile Photo Here\" />\r\n\r\n                    <label htmlFor=\"title\">Title:</label>\r\n                    {!editPost ?\r\n                        <p></p> :\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"title\"\r\n                            id=\"title\"\r\n                            value={postForm.Title}\r\n                            onChange={e => setPostForm({ ...postForm, Title: e.target.value })}\r\n                        />\r\n                    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    <div>\r\n                        <div>\r\n                            <label htmlFor=\"title\">Location</label>\r\n                            {!editPost ?\r\n                                <p></p> :\r\n                                <select\r\n                                    name=\"city\"\r\n                                    id=\"city\"\r\n                                    value={postForm.location}\r\n                                    onChange={e =>\r\n                                        setPostForm({ ...postForm, location: e.target.value })}\r\n                                >\r\n                                    {cityLocation.map(city =>\r\n                                        <option value={city} key={city}>\r\n                                            {city}\r\n                                        </option>\r\n                                    )}\r\n                                </select>\r\n                            }\r\n\r\n\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"\">Donation Type:</label>\r\n                            {!editPost ?\r\n                                <p></p> :\r\n                                <div>\r\n                                    <input type=\"radio\"\r\n                                        id=\"post-radio-cash\"\r\n                                        name=\"donation-type\"\r\n                                        value=\"cash\"\r\n                                        onClick={e => setPostForm({ ...postForm, donationType: e.target.value })}\r\n                                    />\r\n                                    <label htmlFor=\"post-radio-cash\">Cash</label>\r\n                                    <input type=\"radio\"\r\n                                        id=\"post-radio-in-kind\"\r\n                                        name=\"donation-type\"\r\n                                        value=\"in-kind\"\r\n                                        onClick={e => setPostForm({ ...postForm, donationType: e.target.value })}\r\n                                    />\r\n                                    <label htmlFor=\"post-radio-in-kind\">In-kind</label>\r\n                                    <input type=\"radio\"\r\n                                        id=\"post-radio-both\"\r\n                                        name=\"donation-type\"\r\n                                        value=\"both\"\r\n                                        onClick={e => setPostForm({ ...postForm, donationType: e.target.value })}\r\n                                    />\r\n                                    <label htmlFor=\"post-radio-both\">Both</label>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <label htmlFor=\"details\">Details:</label>\r\n                    {!editPost ?\r\n                        <p></p> :\r\n                        <textarea\r\n                            name='postDetails'\r\n                            value={postForm.postDetails}\r\n                            onChange={e => setPostForm({ ...postForm, postDetails: e.target.value })}\r\n                            id='postDetails'\r\n                            className=''\r\n                        ></textarea>\r\n                    }\r\n                    <label className='form-label' htmlFor='postImages'>\r\n                        Images:\r\n                    </label>\r\n\r\n                    <img src=\"\" alt=\"Image 1\" />\r\n                    <img src=\"\" alt=\"Image 2\" />\r\n                    <img src=\"\" alt=\"Image 3\" />\r\n\r\n                    {editPost ?\r\n                        <div>\r\n                            <button onClick={() => setEditPost(false)}>Cancel</button>\r\n                            <button>Save</button>\r\n                        </div> : ''\r\n                    }\r\n                </div>\r\n            </form>\r\n            {!editPost ?\r\n                <div>\r\n                    <button>View Post List</button>\r\n                </div> : ''\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserPostDetails;","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\others\\cityLocation.js",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\common\\PostCard.jsx",["172"],"\r\nimport React from 'react';\r\nimport '../../style/common/postCard.css';\r\n\r\nfunction PostCard(props) {\r\n    const postList = props.postList\r\n    return (\r\n        <div className='postCardContainer'>\r\n            {postList.map((post) => (\r\n                <div className='postCard' key={post.id}>\r\n                    <div className=\"category\">{post.location}</div>\r\n                    <img src={post.imageList[0]} alt='Photo' width='100%' />\r\n                    <h3 style={{ paddingLeft: 5 }}>\r\n                        {post.Title.substring(0, 29)}\r\n                        {post.Title.length > 29 ? '...' : ''}\r\n                    </h3>\r\n                    <p style={{ paddingLeft: 10, paddingRight: 10 }}>\r\n                        {post.description.length > 100\r\n                            ? `${post.description.substring(0, 100)}...`\r\n                            : post.description.substring(0, 100)}\r\n                    </p>\r\n                    <div className='buttonContainer'>\r\n                        <button\r\n                            className='details-button'\r\n                            style={{ borderRadius: 7 }}\r\n                            onClick={() => props.history.push(`/details/${post.id}`)}\r\n                        >\r\n                            Details\r\n            </button>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PostCard;\r\n","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\postDetailPage\\PostCreateDetails.jsx",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\ledgerPage\\LedgerList.jsx",["173"],"import React, { useContext } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport UserLedger from './../../../../context/userLedger';\r\n\r\nfunction LedgerList(props) {\r\n    const userLedger = useContext(UserLedger)\r\n    return (\r\n        <div>\r\n            <div>\r\n                <input type=\"text\" />\r\n            </div>\r\n            <div>\r\n                <FontAwesomeIcon\r\n                    icon={faPlusCircle}\r\n                    className='deleteButton'\r\n                    size='lg'\r\n                    onClick={() => props.history.push('/user/ledger/create')}\r\n                />\r\n            </div>\r\n            <div style={{ overflowX: 'auto' }}>\r\n                <table>\r\n                    <tr>\r\n                        <th>Post</th>\r\n                        <th>Name</th>\r\n                        <th>Email(optional)</th>\r\n                        <th>Donation Type</th>\r\n                        <th>Payment Method(if money donation)</th>\r\n                        <th>Amoung/Item</th>\r\n                        <th>Remarks</th>\r\n                        <th>Date</th>\r\n                        <th></th>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Jill</td>\r\n                        <td>Smith</td>\r\n                        <td>Jill</td>\r\n                        <td>Smith</td>\r\n                        <td>Jill</td>\r\n                        <td>Smith</td>\r\n                        <td>Jill</td>\r\n                        <td>Smith</td>\r\n                        <td>\r\n                            <button>Delete</button>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Eve</td>\r\n                        <td>Jackson</td>\r\n                        <td>Eve</td>\r\n                        <td>Jackson</td>\r\n                        <td>Eve</td>\r\n                        <td>Jackson</td>\r\n                        <td>Eve</td>\r\n                        <td>Jackson</td>\r\n                        <td>\r\n                            <button>Delete</button>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Adam</td>\r\n                        <td>Johnson</td>\r\n                        <td>Adam</td>\r\n                        <td>Johnson</td>\r\n                        <td>Adam</td>\r\n                        <td>Johnson</td>\r\n                        <td>Adam</td>\r\n                        <td>Johnson</td>\r\n                        <td>\r\n                            <button>Delete</button>\r\n                        </td>\r\n                    </tr>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LedgerList;","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\ledgerPage\\LedgerCreate.jsx",[],{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","severity":1,"message":"179","line":19,"column":22,"nodeType":"180","messageId":"181","endLine":19,"endColumn":35},{"ruleId":"182","severity":1,"message":"183","line":9,"column":5,"nodeType":"180","endLine":9,"endColumn":14,"suggestions":"184"},{"ruleId":"178","severity":1,"message":"185","line":9,"column":12,"nodeType":"180","messageId":"181","endLine":9,"endColumn":22},{"ruleId":"178","severity":1,"message":"186","line":9,"column":24,"nodeType":"180","messageId":"181","endLine":9,"endColumn":37},{"ruleId":"182","severity":1,"message":"187","line":21,"column":8,"nodeType":"188","endLine":21,"endColumn":10,"suggestions":"189"},{"ruleId":"178","severity":1,"message":"190","line":1,"column":28,"nodeType":"180","messageId":"181","endLine":1,"endColumn":36},{"ruleId":"182","severity":1,"message":"187","line":31,"column":8,"nodeType":"188","endLine":31,"endColumn":10,"suggestions":"191"},{"ruleId":"192","severity":1,"message":"193","line":11,"column":17,"nodeType":"194","endLine":11,"endColumn":79},{"ruleId":"178","severity":1,"message":"195","line":5,"column":19,"nodeType":"180","messageId":"181","endLine":5,"endColumn":27},{"ruleId":"178","severity":1,"message":"196","line":7,"column":10,"nodeType":"180","messageId":"181","endLine":7,"endColumn":23},{"ruleId":"178","severity":1,"message":"197","line":6,"column":12,"nodeType":"180","messageId":"181","endLine":6,"endColumn":17},{"ruleId":"178","severity":1,"message":"198","line":6,"column":19,"nodeType":"180","messageId":"181","endLine":6,"endColumn":27},{"ruleId":"178","severity":1,"message":"199","line":9,"column":17,"nodeType":"180","messageId":"181","endLine":9,"endColumn":25},{"ruleId":"178","severity":1,"message":"200","line":1,"column":29,"nodeType":"180","messageId":"181","endLine":1,"endColumn":38},{"ruleId":"178","severity":1,"message":"201","line":2,"column":10,"nodeType":"180","messageId":"181","endLine":2,"endColumn":14},{"ruleId":"178","severity":1,"message":"202","line":2,"column":8,"nodeType":"180","messageId":"181","endLine":2,"endColumn":13},{"ruleId":"178","severity":1,"message":"203","line":13,"column":12,"nodeType":"180","messageId":"181","endLine":13,"endColumn":17},{"ruleId":"178","severity":1,"message":"204","line":13,"column":19,"nodeType":"180","messageId":"181","endLine":13,"endColumn":27},{"ruleId":"178","severity":1,"message":"205","line":18,"column":11,"nodeType":"180","messageId":"181","endLine":18,"endColumn":23},{"ruleId":"192","severity":1,"message":"193","line":34,"column":21,"nodeType":"194","endLine":34,"endColumn":60},{"ruleId":"192","severity":1,"message":"193","line":120,"column":21,"nodeType":"194","endLine":120,"endColumn":49},{"ruleId":"192","severity":1,"message":"193","line":121,"column":21,"nodeType":"194","endLine":121,"endColumn":49},{"ruleId":"192","severity":1,"message":"193","line":122,"column":21,"nodeType":"194","endLine":122,"endColumn":49},{"ruleId":"192","severity":1,"message":"193","line":12,"column":21,"nodeType":"194","endLine":12,"endColumn":77},{"ruleId":"178","severity":1,"message":"206","line":7,"column":11,"nodeType":"180","messageId":"181","endLine":7,"endColumn":21},"no-native-reassign",["207"],"no-negated-in-lhs",["208"],"no-unused-vars","'setUserLedger' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setUserAuth'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["209"],"'userAuthID' is assigned a value but never used.","'setUserAuthID' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.","ArrayExpression",["210"],"'useState' is defined but never used.",["211"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'setPosts' is assigned a value but never used.","'checkPassword' is assigned a value but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'setError' is assigned a value but never used.","'useEffect' is defined but never used.","'Link' is defined but never used.","'axios' is defined but never used.","'files' is assigned a value but never used.","'setFiles' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'userLedger' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"212","fix":"213"},{"desc":"214","fix":"215"},{"desc":"214","fix":"216"},"Add dependencies array: []",{"range":"217","text":"218"},"Update the dependencies array to be: [props.history]",{"range":"219","text":"220"},{"range":"221","text":"220"},[379,379],", []",[674,676],"[props.history]",[1141,1143]]