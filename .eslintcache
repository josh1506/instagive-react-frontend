[{"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\index.jsx":"1","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\app\\configStore.js":"2","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\App.jsx":"3","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\app\\reducer.js":"4","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\app\\postList.js":"5","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\app\\accounts.js":"6","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\app\\auth.js":"7","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\common\\Nav.jsx":"8","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\common\\NotFound.jsx":"9","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\landingPage\\AllPostList.jsx":"10","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\authPage\\AuthPage.jsx":"11","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\landingPage\\LandingPage.jsx":"12","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\detailsPage\\DetailsPage.jsx":"13","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\UserPage.jsx":"14","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\adminPage\\AdminPage.jsx":"15","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\app\\user.js":"16","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\route\\instagive.js":"17","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\authPage\\Login.jsx":"18","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\authPage\\Register.jsx":"19","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\authPage\\ForgotPass.jsx":"20","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\landingPage\\Content.jsx":"21","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\landingPage\\Posts.jsx":"22","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\detailsPage\\DetailsPageContent.jsx":"23","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\landingPage\\ShowContent.jsx":"24","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\common\\SideBarDonor.jsx":"25","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\PostList.jsx":"26","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\common\\Sidebar.jsx":"27","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\adminPage\\AdminPending.jsx":"28","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\adminPage\\AdminLogin.jsx":"29","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\adminPage\\AdminRejected.jsx":"30","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\adminPage\\AdminAccepted.jsx":"31","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\ledgerPage\\LedgerPage.jsx":"32","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\postDetailPage\\PostCreate.jsx":"33","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\changePassPage\\ChangePass.jsx":"34","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\postUpdatePage\\UpdateUserPost.jsx":"35","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\detailsPage\\DetailsUpdatePage.jsx":"36","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\postDetailPage\\UserPostDetails.jsx":"37","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\common\\PostCard.jsx":"38","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\others\\cityLocation.js":"39","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\postUpdatePage\\PostCreateUpdate.jsx":"40","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\postDetailPage\\PostCreateDetails.jsx":"41","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\ledgerPage\\LedgerCreate.jsx":"42","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\ledgerPage\\LedgerList.jsx":"43","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\postUpdatePage\\PostDetailUpdate.jsx":"44","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\common\\Footer.jsx":"45"},{"size":418,"mtime":1615127977598,"results":"46","hashOfConfig":"47"},{"size":181,"mtime":1615043413061,"results":"48","hashOfConfig":"47"},{"size":2180,"mtime":1615389122788,"results":"49","hashOfConfig":"47"},{"size":252,"mtime":1615043413063,"results":"50","hashOfConfig":"47"},{"size":1315,"mtime":1615043413062,"results":"51","hashOfConfig":"47"},{"size":1819,"mtime":1615043413060,"results":"52","hashOfConfig":"47"},{"size":950,"mtime":1615043413060,"results":"53","hashOfConfig":"47"},{"size":4996,"mtime":1615130120727,"results":"54","hashOfConfig":"47"},{"size":385,"mtime":1615043413065,"results":"55","hashOfConfig":"47"},{"size":3950,"mtime":1615132399757,"results":"56","hashOfConfig":"47"},{"size":1404,"mtime":1615043413072,"results":"57","hashOfConfig":"47"},{"size":355,"mtime":1615388589722,"results":"58","hashOfConfig":"47"},{"size":1967,"mtime":1615260634242,"results":"59","hashOfConfig":"47"},{"size":1658,"mtime":1615273999592,"results":"60","hashOfConfig":"47"},{"size":2085,"mtime":1615043413071,"results":"61","hashOfConfig":"47"},{"size":3154,"mtime":1615303439608,"results":"62","hashOfConfig":"47"},{"size":100,"mtime":1615043413093,"results":"63","hashOfConfig":"47"},{"size":3589,"mtime":1615364850871,"results":"64","hashOfConfig":"47"},{"size":16649,"mtime":1615373003836,"results":"65","hashOfConfig":"47"},{"size":3402,"mtime":1615364353701,"results":"66","hashOfConfig":"47"},{"size":631,"mtime":1615390558602,"results":"67","hashOfConfig":"47"},{"size":785,"mtime":1615130120730,"results":"68","hashOfConfig":"47"},{"size":1104,"mtime":1615298628464,"results":"69","hashOfConfig":"47"},{"size":1054,"mtime":1615132462121,"results":"70","hashOfConfig":"47"},{"size":6819,"mtime":1615386271153,"results":"71","hashOfConfig":"47"},{"size":3438,"mtime":1615368258887,"results":"72","hashOfConfig":"47"},{"size":508,"mtime":1615043413066,"results":"73","hashOfConfig":"47"},{"size":3056,"mtime":1615043413071,"results":"74","hashOfConfig":"47"},{"size":2819,"mtime":1615131885970,"results":"75","hashOfConfig":"47"},{"size":1526,"mtime":1615043413072,"results":"76","hashOfConfig":"47"},{"size":3054,"mtime":1615043413070,"results":"77","hashOfConfig":"47"},{"size":534,"mtime":1615043413084,"results":"78","hashOfConfig":"47"},{"size":504,"mtime":1615043413085,"results":"79","hashOfConfig":"47"},{"size":4044,"mtime":1615132128407,"results":"80","hashOfConfig":"47"},{"size":544,"mtime":1615043413088,"results":"81","hashOfConfig":"47"},{"size":1870,"mtime":1615358976785,"results":"82","hashOfConfig":"47"},{"size":7250,"mtime":1615361863401,"results":"83","hashOfConfig":"47"},{"size":3115,"mtime":1615367861062,"results":"84","hashOfConfig":"47"},{"size":418,"mtime":1615043413069,"results":"85","hashOfConfig":"47"},{"size":455,"mtime":1615043413087,"results":"86","hashOfConfig":"47"},{"size":8433,"mtime":1615367403369,"results":"87","hashOfConfig":"47"},{"size":4755,"mtime":1615192601748,"results":"88","hashOfConfig":"47"},{"size":11602,"mtime":1615371232514,"results":"89","hashOfConfig":"47"},{"size":6427,"mtime":1615362272181,"results":"90","hashOfConfig":"47"},{"size":882,"mtime":1615391065049,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"w933ur",{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"94"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"94"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"94"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"94"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"94"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"94"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"94"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"94"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"94"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"94"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"94"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"94"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"94"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"94"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"94"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"94"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"94"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"94"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"94"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"94"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"94"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"94"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"94"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\index.jsx",[],["206","207"],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\app\\configStore.js",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\App.jsx",["208","209"],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\app\\reducer.js",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\app\\postList.js",["210","211","212","213"],"import route from '../route/instagive'\r\n\r\n// Action Type\r\nconst POST_LIST_FECHED = 'postListFeched'\r\nconst POST_LIST_ADDED = 'postListAdded'\r\nconst POST_LIST_REMOVED = 'postListRemoved'\r\nconst POST_LIST_UPDATED = 'postListUpdated'\r\n\r\n\r\n// Action\r\nexport const postListFeched = () => async dispatch => {\r\n    const {data} = await route.get('/landing')\r\n    dispatch({\r\n        type: POST_LIST_FECHED,\r\n        payload: data\r\n    })\r\n}\r\n\r\nconst postListAdded = (post) => {\r\n    return {\r\n        type: POST_LIST_ADDED,\r\n        payload: post\r\n    }\r\n}\r\n\r\nconst postListRemoved = (id) => {\r\n    return {\r\n        type: POST_LIST_REMOVED,\r\n        payload: {id}\r\n    }\r\n}\r\n\r\nconst postListUpdated = (post) => {\r\n    return {\r\n        type: POST_LIST_UPDATED,\r\n        payload: post\r\n    }\r\n}\r\n\r\n\r\n\r\n// Reducer\r\nexport default (state=[], action) => {\r\n    switch (action.type) {\r\n        case POST_LIST_FECHED:\r\n            return action.payload\r\n    \r\n        case POST_LIST_REMOVED:\r\n            return state.filter(post => \r\n                post._id !== action.payload.id)\r\n    \r\n        case POST_LIST_UPDATED:\r\n            return state.map(post =>\r\n                post._id === action.payload.id ?\r\n                action.payload :\r\n                post)\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\app\\accounts.js",["214"],"import route from '../route/instagive'\r\n\r\n// Action Type\r\nconst ACCOUNT_FETCHED = 'accountFetched'\r\nconst ACCOUNT_APPROVED = 'accountApproved'\r\nconst ACCOUNT_REJECTED = 'accountRejected'\r\n\r\n\r\n// Actions\r\nconst accountFetched = () => async dispatch => {\r\n    const {data} = await route.get('/admin/getusers')\r\n\r\n    dispatch({\r\n        type:ACCOUNT_FETCHED,\r\n        payload: data\r\n    })\r\n}\r\n\r\nconst accountApproved = account => async dispatch => {\r\n    await route.post(`/admin/changestatus/${account._id}/approved`)\r\n    dispatch({\r\n        type:ACCOUNT_APPROVED,\r\n        payload: account\r\n    })\r\n}\r\n\r\nconst accountRejected = account => async dispatch => {\r\n    await route.post(`/admin/changestatus/${account._id}/rejected`)\r\n    dispatch({\r\n        type:ACCOUNT_REJECTED,\r\n        payload: account\r\n    })\r\n}\r\n\r\n\r\nconst accountList = {\r\n    pending: [],\r\n    approved: [],\r\n    rejected: []\r\n}\r\n// Reducer\r\nexport default (state=accountList, action) => {\r\n    switch (action.type) {\r\n        case ACCOUNT_FETCHED:\r\n            return action.payload\r\n    \r\n        case ACCOUNT_APPROVED:\r\n            return {\r\n                ...state,\r\n                pending: state.pending.filter(account => account._id !== action.payload._id),\r\n                approved: [...state.approved, action.payload]\r\n            }\r\n        \r\n        case ACCOUNT_REJECTED:\r\n            return {\r\n                ...state,\r\n                pending: state.pending.filter(account => account._id !== action.payload._id),\r\n                approved: state.approved.filter(account => account._id !== action.payload._id),\r\n                rejected: [...state.approved, action.payload]\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\nexport {\r\n    accountFetched,\r\n    accountApproved,\r\n    accountRejected\r\n}","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\app\\auth.js",["215"],"// Action Type\r\nconst AUTH_ADDED = 'authAdded'\r\nconst AUTH_REMOVED = 'authRemoved'\r\n\r\n// Actions\r\nconst authAdd = (token, type) => {\r\n    return {\r\n        type: AUTH_ADDED,\r\n        payload: {\r\n            token,\r\n            type\r\n        }\r\n    }\r\n}\r\n\r\nconst authRemove = () => {\r\n    return {\r\n        type: AUTH_REMOVED,\r\n        payload: {\r\n            token: '',\r\n            type: ''\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// Data\r\nconst authData = {\r\n    token: '',\r\n    type: ''\r\n}\r\n\r\n\r\n// Reducer\r\nexport default (auth=authData, action) => {\r\n    switch (action.type) {\r\n        case AUTH_ADDED:\r\n            return {\r\n                token: action.payload.token,\r\n                type: action.payload.type\r\n            }\r\n        \r\n        case AUTH_REMOVED:\r\n            return {\r\n                token: '',\r\n                type: ''\r\n            }\r\n\r\n        default:\r\n            return auth\r\n    }\r\n}\r\n\r\n\r\nexport {\r\n    authAdd,\r\n    authRemove\r\n}","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\common\\Nav.jsx",["216"],"import React from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\n\r\nimport { authRemove } from '../../app/auth'\r\nimport logo from '../../img/Instagive-logo-2.png'\r\nimport '../../style/common/Nav.css'\r\n\r\nfunction Nav(props) {\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n\r\n    const handleMenu = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <nav className=\"navBar\">\r\n            <span>\r\n                <Link to=\"/\" className='navLogo'>\r\n                    <img src={logo} alt=\"logo\" height='45px' className='logo' style={{ marginRight: 10 }} />\r\n                    <p className='navLogoName'>InstaGive</p>\r\n                </Link>\r\n                <span>\r\n                    {/* Other nav links */}\r\n                </span>\r\n            </span>\r\n            <span className='navLogin'>\r\n                {props.auth.token ?\r\n                    <span>\r\n                        {props.auth.type === 'user' ?\r\n                            <span>\r\n                                <div>\r\n                                    <IconButton\r\n                                        aria-label=\"account of current user\"\r\n                                        aria-controls=\"menu-appbar\"\r\n                                        aria-haspopup=\"true\"\r\n                                        onClick={handleMenu}\r\n                                        color=\"inherit\"\r\n                                    >\r\n                                        <AccountCircle fontSize='large' />\r\n                                    </IconButton>\r\n                                    <Menu\r\n                                        id=\"menu-appbar\"\r\n                                        anchorEl={anchorEl}\r\n                                        anchorOrigin={{\r\n                                            vertical: 'top',\r\n                                            horizontal: 'right',\r\n                                        }}\r\n                                        keepMounted\r\n                                        transformOrigin={{\r\n                                            vertical: 'top',\r\n                                            horizontal: 'right',\r\n                                        }}\r\n                                        open={open}\r\n                                        onClose={handleClose}\r\n                                    >\r\n                                        <MenuItem>\r\n                                            <NavLink to=\"/user/ledger\" className='navLink'>Ledger</NavLink>\r\n                                        </MenuItem>\r\n                                        <MenuItem>\r\n                                            <NavLink to=\"/user\" className='navLink'>Dashboard</NavLink>\r\n                                        </MenuItem>\r\n                                        <MenuItem>\r\n                                            <NavLink to=\"/user/change-password\" className='navLink'>ChangePassword</NavLink>\r\n                                        </MenuItem>\r\n                                        <MenuItem>\r\n                                            <NavLink to='/' className='navLink' onClick={() => {\r\n                                                localStorage.removeItem('user')\r\n                                                localStorage.removeItem('admin')\r\n                                                props.authRemove()\r\n                                            }}>Logout</NavLink>\r\n                                        </MenuItem>\r\n                                    </Menu>\r\n                                </div>\r\n                            </span> :\r\n                            <NavLink to='/' className='navLink' onClick={() => {\r\n                                localStorage.removeItem('user')\r\n                                localStorage.removeItem('admin')\r\n                                props.authRemove()\r\n                            }}>Logout</NavLink>\r\n                        }\r\n                    </span> :\r\n                    <span>\r\n                        <NavLink to=\"/auth/register\" className='navLink'>Signup</NavLink>\r\n                        |\r\n                        <NavLink to=\"/auth/login\" className='navLink'>Login</NavLink>\r\n                    </span>\r\n                }\r\n            </span>\r\n        </nav>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    console.log(state);\r\n    return { auth: state.auth }\r\n}\r\n\r\nexport default connect(mapStateToProps, { authRemove })(Nav);","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\common\\NotFound.jsx",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\landingPage\\AllPostList.jsx",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\authPage\\AuthPage.jsx",["217","218","219"],"import React, { useEffect, useState } from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport Login from './Login';\r\nimport Register from './Register';\r\nimport ForgotPass from './ForgotPass';\r\nimport '../../../style/authPage/authPage.css'\r\n\r\nfunction AuthPage(props) {\r\n    const [userAuthID, setUserAuthID] = useState()\r\n\r\n    useEffect(() => {\r\n        // check if there's a user in coockies\r\n        const userAuthID = localStorage.getItem('user')\r\n\r\n        const validateAuthID = async () => {\r\n            // Same logic for user login\r\n            if (userAuthID) props.history.replace('/user')\r\n        }\r\n\r\n        validateAuthID()\r\n    }, [])\r\n\r\n    return (\r\n        <div className='auth-container'>\r\n            <div className='authBackgroundImage'>\r\n            </div>\r\n            <div className='authForm'>\r\n                <div className='center'>\r\n                    <Switch>\r\n                        <Route path='/auth/login' component={Login} />\r\n                        <Route path='/auth/register' component={Register} />\r\n                        <Route path='/auth/forgot' component={ForgotPass} />\r\n                        <Redirect from='/auth' to='/auth/login' exact />\r\n                        <Redirect to='/not-found' />\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AuthPage;","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\landingPage\\LandingPage.jsx",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\detailsPage\\DetailsPage.jsx",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\UserPage.jsx",["220"],"import React, { useEffect } from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nimport PostList from './PostList';\r\nimport LedgerPage from './ledgerPage/LedgerPage';\r\nimport PostCreate from './postDetailPage/PostCreate';\r\nimport UserPostDetails from './postDetailPage/UserPostDetails';\r\nimport ChangePass from './changePassPage/ChangePass';\r\nimport UpdateUserPost from './postUpdatePage/UpdateUserPost';\r\nimport { authRemove } from '../../../app/auth'\r\nimport { userDataFetch } from '../../../app/user'\r\n\r\nfunction UserPage(props) {\r\n    useEffect(() => {\r\n        if (!localStorage.getItem('user')) return props.history.push('/auth')\r\n        if (props.auth.token) {\r\n            props.userDataFetch(props.auth.token)\r\n        }\r\n\r\n    }, [props.auth.token])\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Switch>\r\n                    <Route path='/user/change-password' component={ChangePass} />\r\n                    <Route path='/user/post-create' component={PostCreate} />\r\n                    <Route path='/user/post-details/:id' component={UserPostDetails} />\r\n                    <Route path='/user/ledger' component={LedgerPage} />\r\n                    <Route path='/user/update-details/:id' component={UpdateUserPost} />\r\n                    <Route path='/user/' exact component={PostList} />\r\n                    <Redirect to='/not-found' />\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return state\r\n}\r\n\r\nexport default connect(mapStateToProps, { authRemove, userDataFetch })(UserPage);","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\adminPage\\AdminPage.jsx",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\app\\user.js",["221","222"],"import route from '../route/instagive'\r\nimport axios from 'axios'\r\n\r\n// Action Types\r\nconst USER_DATA_FETCH = 'userDataFetch'\r\nconst USER_LEDGER_ADDED = 'userLedgerAdded'\r\nconst USER_LEDGER_REMOVED = 'userLedgerRemoved'\r\nconst USER_LEDGER_UPDATED = 'userLedgerUpdated'\r\n\r\nconst USER_POST_ADDED = 'userPostAdded'\r\nconst USER_POST_REMOVED = 'userPostRemoved'\r\nconst USER_POST_UPDATED = 'userPostUpdated'\r\n\r\n\r\n// Action\r\n// Ledger\r\nconst userDataFetch = (token) => async dispatch => {\r\n    const { data: ledger } = await route.post('/ledger/getall', {token})\r\n    const { data: post } = await route.post('/post/userpost', { token })\r\n\r\n    dispatch({\r\n        type: USER_DATA_FETCH,\r\n        payload: {ledger, post} \r\n    })\r\n}\r\n\r\n\r\nconst userLedgerAdded = (ledgerForm, token) => async dispatch => {\r\n    await axios.post(`http://localhost:5000/ledger/${ledgerForm.postId}`, { ...ledgerForm, token })\r\n    let newForm = {...ledgerForm}\r\n    if (!ledgerForm.donorName) newForm = {...newForm, donorName: 'Anonymous'}\r\n    if (!ledgerForm.email) newForm = {...newForm, email: 'None'}\r\n\r\n    dispatch({\r\n        type: USER_LEDGER_ADDED,\r\n        payload: newForm\r\n    })\r\n}\r\n\r\n\r\n// Post\r\nconst userPostAdded = (formdata) => async dispatch => {\r\n    // await route.post('/post/createpost', formdata)\r\n    console.log(...formdata);\r\n    dispatch({\r\n        type: USER_POST_ADDED,\r\n        payload: formdata\r\n    })\r\n}\r\nconst userPostRemoved = () => async dispatch => {\r\n    // await route.post()\r\n\r\n    dispatch({\r\n        type: USER_POST_REMOVED,\r\n        payload: {\r\n\r\n        }\r\n    })\r\n}\r\nconst userPostUpdated = (postForm, postID, userToken) => async dispatch => {\r\n    await route.put(`/post/edit/${postID}`, { ...postForm, token: userToken })\r\n    dispatch({\r\n        type: USER_POST_UPDATED,\r\n        payload: {\r\n            _id: postID,\r\n            ...postForm\r\n        }\r\n    })\r\n}\r\n\r\n\r\n// Data\r\nconst userData = {\r\n    ledger: [],\r\n    post: []\r\n}\r\n\r\n\r\n// Reducer\r\nexport default (state=userData, action) => {\r\n    switch (action.type) {\r\n        case USER_DATA_FETCH:\r\n            return action.payload\r\n    \r\n        case USER_LEDGER_ADDED:\r\n            return {...state, ledger: [...state.ledger, action.payload]}\r\n    \r\n        case USER_LEDGER_REMOVED:\r\n            return {\r\n                ...state,\r\n                ledger: state.ledger.filter(ledger => ledger._id !== action.payload._id)\r\n            }\r\n    \r\n        case USER_LEDGER_UPDATED:\r\n            return state\r\n    \r\n        case USER_POST_ADDED:\r\n            return {...state, post: [...state.post, action.payload]}\r\n    \r\n        case USER_POST_REMOVED:\r\n            return {\r\n                ...state,\r\n                post: state.post.filter(post => post._id !== action.payload._id)\r\n            }\r\n    \r\n        case USER_POST_UPDATED:\r\n            return {\r\n                ...state,\r\n                post: state.post.map(post => post._id === action.payload._id ? {...post, ...action.payload} : post)\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport {\r\n    userDataFetch,\r\n    userLedgerAdded,\r\n\r\n    userPostUpdated,\r\n    userPostAdded\r\n}","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\route\\instagive.js",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\authPage\\Login.jsx",["223","224","225"],"import axios from 'axios';\r\nimport React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux'\r\n\r\nimport { authAdd } from '../../../app/auth'\r\nimport route from '../../../route/instagive'\r\nimport '../../../style/authPage/login.css';\r\n\r\nimport {TextField, Button, Snackbar} from '@material-ui/core'\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\n\r\nfunction Login(props) {\r\n  const [auth, setAuth] = useState({ username: '', password: '' });\r\n  const [error, setError] = useState({\r\n\r\n    valid: false,\r\n    msg: '',\r\n    severity: ''\r\n\r\n  });\r\n  \r\n\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const { data } = await route.post('/user/login', auth);\r\n\r\n    if (data.valid !== true) {\r\n    \r\n      if(data.valid === 'Credentials Error') \r\n      setError({valid: true, msg: data.valid, severity: 'warning' })\r\n      else  setError({valid: true, msg: data.valid, severity: 'info' })\r\n\r\n\r\n    } else {\r\n      // Set Item\r\n      localStorage.setItem('user', data.token)\r\n      props.authAdd(data.token, 'user')\r\n      props.history.push('/user')\r\n\r\n    }\r\n\r\n    // If there is error in auth, set the error to TRUE\r\n    setAuth({username: '', password: ''})\r\n  };\r\n\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return; \r\n    }\r\n\r\n    setError({...error, valid: false});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n\r\n\r\n\r\n\r\n  return (\r\n\r\n\r\n\r\n\r\n    <div className='LoginContainer'>\r\n   \r\n    \r\n   <Snackbar open={error.valid} autoHideDuration={4000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity={error.severity}>\r\n         {error.msg}\r\n        </Alert>\r\n      </Snackbar>\r\n      \r\n\r\n\r\n\r\n\r\n\r\n   \r\n\r\n      <div>\r\n        <h1 className='authTitle'>Welcome!</h1>\r\n\r\n\r\n\r\n      </div>\r\n      <form className='form-container' onSubmit={handleSubmit} >\r\n      \r\n    \r\n\r\n        <TextField\r\n          type='email'\r\n          name='email'\r\n          id='email'\r\n          className='form-input-text'\r\n          margin=\"normal\"\r\n\r\n          variant=\"outlined\"\r\n          label=\"Enter Email\"\r\n          autoFocus\r\n          \r\n          required={true}\r\n          value={auth.username}\r\n          onChange={(e) => setAuth({ ...auth, username: e.target.value })}\r\n        />\r\n    \r\n        <TextField\r\n          \r\n          type='password'\r\n          margin=\"normal\"\r\n          required={true}\r\n          fullWidth\r\n          name='password'\r\n          id='password'\r\n          variant=\"outlined\"\r\n          label=\"Enter Password\"\r\n          className='form-input-text'\r\n          required={true}\r\n          value={auth.password}\r\n          onChange={(e) => setAuth({ ...auth, password: e.target.value })}\r\n        />\r\n        <div style={{ width: '100%' }}>\r\n         <Button variant=\"text\"> <Link to='/auth/forgot' className='form-link'>\r\n            Forgot Password\r\n          </Link> </Button>\r\n          <div className='form-button-container'>\r\n            <Button fullWidth style={{margin: '10px'}} color=\"primary\" variant=\"contained\" type=\"submit\">Login</Button>\r\n           \r\n            <Button  style={{margin: '10px'}} fullWidth variant=\"contained\"\r\n              onClick={() => props.history.push('/auth/register')}\r\n            >\r\n              Sign up\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default connect(null, { authAdd })(Login);\r\n","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\authPage\\Register.jsx",["226","227","228"],"import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport '../../../style/authPage/register.css';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  Checkbox,\r\n  TextField,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Snackbar,\r\n} from '@material-ui/core/';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nfunction Register(props) {\r\n  const [checkPassword, setCheckPassword] = useState({ confirm_pass: '' });\r\n  const [userForm, setUserForm] = useState({\r\n    email: '',\r\n    password: '',\r\n    city: '',\r\n    orgName: '',\r\n    orgAddress: '',\r\n\r\n    orgNumber: '',\r\n    repName: '',\r\n\r\n    orgDescriptions: '',\r\n  });\r\n\r\n  const [terms, setTerms] = useState(false);\r\n\r\n  console.log(terms);\r\n\r\n  const [files, setFiles] = useState({\r\n    orgPhoto: '',\r\n    orgDocuments: '',\r\n    repId: '',\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    console.log(event.target.value);\r\n\r\n    setUserForm({\r\n      ...userForm,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handlerepId = (file) => {\r\n    setFiles({ ...files, repId: file });\r\n  };\r\n\r\n  const handleorgPhoto = (file) => {\r\n    setFiles({ ...files, orgPhoto: file });\r\n  };\r\n\r\n  const handleorgDocuments = (multifiles) => {\r\n    setFiles({ ...files, orgDocuments: multifiles });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const formdata = new FormData();\r\n\r\n    formdata.append('repId', files.repId);\r\n    formdata.append('orgPhoto', files.orgPhoto);\r\n\r\n    for (const key in files.orgDocuments) {\r\n      formdata.append('orgDocuments', files.orgDocuments[key]);\r\n    }\r\n\r\n    formdata.append('email', userForm.email);\r\n    formdata.append('city', userForm.city);\r\n    formdata.append('password', userForm.password);\r\n\r\n    formdata.append('orgName', userForm.orgName);\r\n    formdata.append('orgAddress', userForm.orgAddress);\r\n    formdata.append('orgNumber', userForm.orgNumber);\r\n    formdata.append('repName', userForm.repName);\r\n    formdata.append('orgDescriptions', userForm.orgDescriptions);\r\n\r\n    const data = await axios.post(\r\n      'http://localhost:5000/user/register',\r\n      formdata\r\n    );\r\n    handleClickAlert();\r\n    console.log(data);\r\n\r\n    setUserForm({\r\n      email: '',\r\n      password: '',\r\n      city: '',\r\n      orgName: '',\r\n      orgAddress: '',\r\n      orgPhoto: '',\r\n      orgNumber: '',\r\n      repName: '',\r\n      repId: '',\r\n      orgDocuments: [],\r\n      orgDescriptions: '',\r\n    });\r\n\r\n    setCheckPassword({\r\n      confirm_pass: '',\r\n    });\r\n\r\n    setFiles({\r\n      orgPhoto: '',\r\n      orgDocuments: '',\r\n      repId: '',\r\n    });\r\n\r\n    setTerms(false);\r\n\r\n    document.getElementById('contained-repID').value = null;\r\n    document.getElementById('contained-button-orgDocuments').value = null;\r\n    document.getElementById('contained-button-orgPhoto').value = null;\r\n  };\r\n\r\n  const [snacker, setSnacker] = useState(false);\r\n\r\n  const handleClickAlert = () => {\r\n    setSnacker(true);\r\n  };\r\n\r\n  const handleCloseAlert = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setSnacker(false);\r\n  };\r\n\r\n  const Alert = (props) => {\r\n    return <MuiAlert elevation={6} variant='filled' {...props} />;\r\n  };\r\n\r\n  const [listOrgDocuments, setListOrgDocuments] = useState('');\r\n  const [listRepId, setlistRepId] = useState('');\r\n  const [listOrgPhoto, setlistOrgPhoto] = useState('');\r\n\r\n  const [openModal, setModal] = useState(false);\r\n\r\n  const handleClickOpen = async () => {\r\n    setModal(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setModal(false);\r\n  };\r\n  const handleCheckbox = () => {\r\n    setModal(false);\r\n    setTerms(true);\r\n  };\r\n\r\n  return (\r\n    <div style={{ marginLeft: '65px' }} className='register-container'>\r\n      <Snackbar\r\n        open={snacker}\r\n        autoHideDuration={2000}\r\n        onClose={handleCloseAlert}\r\n      >\r\n        <Alert onClose={handleCloseAlert} severity='success'>\r\n          Successfully Requested Account\r\n        </Alert>\r\n      </Snackbar>\r\n\r\n      <Dialog\r\n        open={openModal}\r\n        onClose={handleClose}\r\n        aria-labelledby='form-dialog-title'\r\n        maxWidth='sm'\r\n        fullWidth={true}\r\n      >\r\n        <DialogTitle\r\n          id='form-dialog-title'\r\n          style={{ alignSelf: 'center', fontSize: '50px' }}\r\n        >\r\n          TERMS AND CONDITIONS\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>Pleae Read:</DialogContentText>\r\n          <b>1. ACCEPTANCE OF TERMS</b> <br />\r\n          <br />\r\n          Instagive provides the Platform to you (visitors and registered users,\r\n          collectively referred to as the “User”) subject to the following Terms\r\n          and Conditions (collectively, the “Terms”). By using the Platform, you\r\n          agree to be bound by these Terms, our Privacy Policy, all applicable\r\n          laws and all conditions or policies referenced here. <br />\r\n          <br />\r\n          Instagive reserves the right to modify these Terms without notice to\r\n          you, and it is the responsibility of the User to check the Terms\r\n          periodically for any modifications. Continued use of the Platform\r\n          subsequent to the changes mentioned means that you accept the changes\r\n          made.\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <b>2. ELIGIBILITY</b> <br />\r\n          <br />\r\n          2.1 You are not eligible to use the Platform without consent if you\r\n          are under 18 years of age. If you are between the ages of 13 and 17,\r\n          you can use the Platform with the consent and supervision of your\r\n          parent or legal guardian who is at least 18 years old, provided that\r\n          your parent or legal guardian also agrees to be bound by these Terms\r\n          and agrees to be responsible for your use of the Platform.\r\n          <br />\r\n          <br />\r\n          2.2 You are not eligible to use the Platform if you have previously\r\n          been suspended from using the Platform for any reason and we have not\r\n          explicitly authorized you to resume using the Platform.\r\n          <br />\r\n          <br />\r\n          2.3 A representative of an organization is not eligible to use the\r\n          Platform unless they have proper authorization and is capable of\r\n          binding the organization to the Terms.\r\n          <br />\r\n          <br />\r\n          <b>3. PLATFORM ACCESS</b> <br /> <br />\r\n          <br />\r\n          3.1 If the User is eligible (see Sec. 2, of the Terms), the Platform\r\n          is free to use, however starting a Campaign and getting access to\r\n          features such as Creating Post is limited to registered individuals or\r\n          organizations only. You can register by signing up at Instagive.com.\r\n          By signing up as a registered individual or organization, you agree\r\n          to: <br />\r\n          <br />\r\n          1. provide true, accurate, current and complete information about\r\n          yourself, and your organization if applicable, as prompted during the\r\n          signup process, starting a Campaign process and any later\r\n          administration processes (collectively, User Data). <br />\r\n          <br /> 2. maintain and promptly update the User Data to keep it true,\r\n          accurate, current and complete. <br />\r\n          <br /> <br />\r\n          <b>4. LIABILITY</b> <br />\r\n          4.1 Instagive is not responsible for any problems regarding the transaction\r\n          between the Launcher and the Giver. If a problem arises that refunds\r\n          are due, Launchers have the responsibility to provide refunds to\r\n          Givers at their own discretion. <b>The Company will NOT be held liable\r\n          for refunds or lack thereof.</b>\r\n        <br/><br/>\r\n        <b>For other concerns or verifications, please contact us at </b><a href=\"mailto:instagive2021@gmail.com<\">instagive2021@gmail.com</a>\r\n        \r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color='primary'>\r\n            Back\r\n          </Button>\r\n          <Button variant='contained' onClick={handleCheckbox} color='primary'>\r\n            Accept and Continue\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <div>\r\n        <h1 className='authTitle'>Account Details</h1>\r\n      </div>\r\n      <form encType='multipart/form-data' onSubmit={handleSubmit}>\r\n        <div className='register-form1'>\r\n          <div className='register-input-container1'>\r\n            <TextField\r\n              variant='outlined'\r\n              color='primary'\r\n              style={{ marginBottom: '12px' }}\r\n              required\r\n              type='email'\r\n              name='email'\r\n              id='email'\r\n              value={userForm.email}\r\n              label='Enter Email'\r\n              className='register-form-input-text'\r\n              onChange={handleChange}\r\n            />\r\n\r\n            <TextField\r\n              variant='outlined'\r\n              color='primary'\r\n              style={{ marginBottom: '12px' }}\r\n              required={true}\r\n              type='password'\r\n              name='password'\r\n              value={userForm.password}\r\n              label='Enter Password'\r\n              className='register-form-input-text'\r\n              onChange={handleChange}\r\n            />\r\n\r\n            <TextField\r\n              required={true}\r\n              variant='outlined'\r\n              color='primary'\r\n              style={{ marginBottom: '12px' }}\r\n              label='Confirm Password'\r\n              value={checkPassword.confirm_pass}\r\n              type='password'\r\n              name='confirm-pass'\r\n              className='register-form-input-text'\r\n              onChange={(e) => setCheckPassword({confirm_pass :e.target.value})}\r\n            />\r\n          </div>\r\n        </div>\r\n      \r\n      \r\n      \r\n      \r\n      \r\n      \r\n      \r\n      \r\n      \r\n      \r\n        <div className='register-form2'>\r\n          <div\r\n            style={{ marginBottom: '12px' }}\r\n            className='register-input-container2'\r\n          >\r\n            <TextField\r\n              required\r\n              variant='outlined'\r\n              color='primary'\r\n              type='text'\r\n              name='orgName'\r\n              value={userForm.orgName}\r\n              onChange={handleChange}\r\n              id='orgName'\r\n              label='Enter Organization Name'\r\n              className='register-form-input-text'\r\n            />\r\n          </div>\r\n          <div className='register-input-container2'>\r\n            <TextField\r\n              variant='outlined'\r\n              color='primary'\r\n              required\r\n              type='number'\r\n              name='orgNumber'\r\n              value={userForm.orgNumber}\r\n              onChange={handleChange}\r\n              id='orgNumber'\r\n              label='Enter Organization Contact Number'\r\n              className='register-form-input-text'\r\n\r\n            />\r\n          </div>\r\n          <div className='register-input-container2'>\r\n            <TextField\r\n              variant='outlined'\r\n              color='primary'\r\n              required\r\n              type='text'\r\n              name='city'\r\n              value={userForm.city}\r\n              onChange={handleChange}\r\n              id='city'\r\n              label='Enter City'\r\n              className='register-form-input-text'\r\n            />\r\n          </div>\r\n          <div\r\n            style={{ marginBottom: '12px' }}\r\n            className='register-input-container2'\r\n          >\r\n            <TextField\r\n              variant='outlined'\r\n              color='primary'\r\n              required\r\n              type='text'\r\n              name='orgAddress'\r\n              value={userForm.orgAddress}\r\n              onChange={handleChange}\r\n              id='orgAddress'\r\n              label='Enter Organization Address'\r\n              className='register-form-input-text'\r\n            />\r\n          </div>\r\n          <div\r\n            style={{ marginBottom: '12px' }}\r\n            className='register-input-container2'\r\n          >\r\n            <TextField\r\n              variant='outlined'\r\n              color='primary'\r\n              required\r\n              type='text'\r\n              name='repName'\r\n              value={userForm.repName}\r\n              onChange={handleChange}\r\n              id='repName'\r\n              label='Enter Representative Name'\r\n              className='register-form-input-text'\r\n            />\r\n          </div>\r\n\r\n          <div className='register-input-container2'>\r\n            <input\r\n              id='contained-repID'\r\n              type='file'\r\n              required\r\n              name='repId'\r\n              style={{ display: 'none' }}\r\n              onChange={(e) => {\r\n                const file = e.target.files[0];\r\n                handlerepId(file);\r\n                setlistRepId(e.target.files.length);\r\n              }}\r\n            />\r\n\r\n            <label htmlFor='contained-repID'>\r\n              <Button\r\n                style={{ marginTop: '12px' }}\r\n                variant='outlined'\r\n                color='primary'\r\n                component='span'\r\n              >\r\n                {`Upload Valid Representative ID: ${listRepId}`}\r\n              </Button>\r\n            </label>\r\n          </div>\r\n\r\n          <div>\r\n            <input\r\n              id='contained-button-orgDocuments'\r\n              multiple\r\n              type='file'\r\n              required\r\n              name='orgDocuments'\r\n              style={{ display: 'none' }}\r\n              onChange={(e) => {\r\n                const multifiles = e.target.files;\r\n                handleorgDocuments(multifiles);\r\n                setListOrgDocuments(multifiles.length);\r\n              }}\r\n            />\r\n\r\n            <label htmlFor='contained-button-orgDocuments'>\r\n              <Button variant='outlined' color='primary' component='span'>\r\n                {`Upload Organization Documents: ${listOrgDocuments}`}\r\n              </Button>\r\n            </label>\r\n          </div>\r\n          <div\r\n            style={{ marginBottom: '12px' }}\r\n            className='register-input-container2'\r\n          >\r\n            <input\r\n              id='contained-button-orgPhoto'\r\n              type='file'\r\n              required\r\n              name='orgPhoto'\r\n              style={{ display: 'none' }}\r\n              onChange={(e) => {\r\n                const file = e.target.files[0];\r\n                handleorgPhoto(file);\r\n                setlistOrgPhoto(e.target.files.length);\r\n              }}\r\n            />\r\n\r\n            <label htmlFor='contained-button-orgPhoto'>\r\n              <Button variant='outlined' color='primary' component='span'>\r\n                {`Upload Org Photo Reference: ${listOrgPhoto}`}\r\n              </Button>\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          style={{ marginBottom: '12px' }}\r\n          className='register-org-description-container'\r\n        >\r\n          <TextField\r\n            variant='outlined'\r\n            color='primary'\r\n            required\r\n            rows={6}\r\n            multiline\r\n            name='orgDescriptions'\r\n            value={userForm.orgDescriptions}\r\n            onChange={handleChange}\r\n            id='orgDescriptions'\r\n            placeholder='Enter Organization Description'\r\n            className='register-form-input-text'\r\n          />\r\n        </div>\r\n\r\n        <Checkbox\r\n          style={{ marginTop: '-8px' }}\r\n          checked={terms}\r\n          name='checkedB'\r\n          color='primary'\r\n        />\r\n        <Button\r\n          onClick={handleClickOpen}\r\n          variant='text'\r\n          style={{ marginBottom: '5px' }}\r\n          color='primary'\r\n        >\r\n          TERMS AND CONDITION\r\n        </Button>\r\n\r\n        <div className='form-button-container'>\r\n          <Button variant='outlined' color='default'>\r\n            <Link to='/auth/login' className='form-link'>\r\n              Cancel\r\n            </Link>\r\n          </Button>\r\n\r\n          <Button\r\n            disabled={!terms}\r\n            variant='contained'\r\n            color='primary'\r\n            type='submit'\r\n            className='form-button'\r\n            \r\n          >\r\n            Send Registration\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\authPage\\ForgotPass.jsx",["229"],"import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport '../../../style/authPage/forgotPassword.css'\r\nimport axios from 'axios'\r\nimport {TextField, Button, Snackbar} from '@material-ui/core'\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nfunction ForgotPass(props) {\r\n    const [email, setEmail] = useState('')\r\n\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault()\r\n\r\n\r\n    const query = async () =>{\r\n\r\n\r\n       const forgotPass =  await axios.post('http://localhost:5000/user/forgotPassword', {email})\r\n        console.log(forgotPass.data.valid)\r\n\r\n        if(forgotPass.data.valid === false) {\r\n            setOpen({open: true, severity: 'error', msg: 'Email Not Found!'  })\r\n        }\r\n        else if(forgotPass.data.valid === true){ \r\n            setOpen({open: true, severity: 'success', msg: 'Temporary Password Sent Successfully'  })\r\n            \r\n        } \r\n\r\n        setEmail('');\r\n\r\n\r\n    }\r\n\r\n    query();\r\n        \r\n    }\r\n\r\n\r\n    function Alert(props) {\r\n        return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n      }\r\n      \r\n      const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n          width: '100%',\r\n          '& > * + *': {\r\n            marginTop: theme.spacing(2),\r\n          },\r\n        },\r\n      }));\r\n\r\n      const classes = useStyles();\r\n      const [open, setOpen] = React.useState({open: false, severity: '', msg: ''});\r\n    \r\n    \r\n    \r\n      const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n          return; \r\n        }\r\n    \r\n        setOpen({...open, open: false});\r\n      };\r\n    \r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div>\r\n\r\n      <Snackbar open={open.open} autoHideDuration={4000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity={open.severity}>\r\n         {open.msg}\r\n        </Alert>\r\n      </Snackbar>\r\n      \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        <div className='forgot-pass-container'>\r\n            <div className='forgot-pass-title'>\r\n                <h1 className='authTitle'>Forgot Password</h1>\r\n                <p className='authDetails'>Will send your temporary password in your email, Please change it after you logged in</p>\r\n            </div>\r\n            <form className='form-container' onSubmit={handleSubmit}>\r\n            \r\n              \r\n              \r\n                <TextField required={true} variant=\"outlined\" label=\"Enter Your Email\" fullWidth type=\"email\" name=\"email\" id=\"email\" value={email} style={{marginBottom: \"10px\"}}  onChange={e => {setEmail(e.target.value); console.log(email)}} />\r\n             \r\n             \r\n             \r\n             \r\n             \r\n          \r\n          \r\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>Send</Button>\r\n\r\n          \r\n            </form>\r\n            \r\n            \r\n            \r\n            \r\n            <div style={{ width: '100%' }} className='form-button-container'>\r\n                <div>\r\n                   <Button variant=\"text\"><Link to=\"/auth/login\" className='form-link'>Login</Link></Button> \r\n                   <Button variant=\"text\">  <Link to=\"/auth/register\" className='form-link'>Signup</Link> </Button> \r\n                </div>\r\n               \r\n            </div>\r\n        </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ForgotPass;","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\landingPage\\Content.jsx",["230","231","232","233","234","235"],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\landingPage\\Posts.jsx",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\detailsPage\\DetailsPageContent.jsx",["236","237"],"import React from 'react';\r\nimport '../../../style/detailsPage/detailsPageContent.css'\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nfunction DetailsPageContent(props) {\r\n  if (!props.post) return <div>Loading</div>\r\n  return (\r\n    <div className='details-page-content-container'>\r\n      <div className='post-image-container'>\r\n        <img style={{height: '70vh' }} src={`/docs/${props.post.profilePic}`} alt=\"Photo\" className='display-page-image' />\r\n      </div>\r\n\r\n      <div className='details-post-container'>\r\n        {props.children}\r\n        <p className='donationContent'>\r\n          {props.post ? props.post.description : ''}\r\n        </p>\r\n        <div>\r\n          {props.post.imageList.map(imageName =>\r\n            <img src={`/docs/${imageName}`} key={imageName} alt=\"Photo\" className='detailsPageImage' />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nconst mapStateToProps = (state, myProps) => {\r\n  const post = state.postList.find(post => post._id === myProps.match.params.id)\r\n  return { post }\r\n}\r\n\r\nexport default connect(mapStateToProps)(DetailsPageContent);","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\landingPage\\ShowContent.jsx",["238"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport '../../../style/landingPage/showContent.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction ShowContent(props) {\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    margin: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    extendedIcon: {\r\n      marginRight: theme.spacing(1),\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div id='showcase'>\r\n      <div className='container showcase-container'>\r\n        <h1>Welcome to InstaGive</h1>\r\n        <p>\r\n          Online donation platform for the residence of Pampanga\r\n        </p>\r\n        <Button\r\n        classes\r\n          variant=\"contained\"\r\n          size=\"large\"\r\n          style={{ opacity: 0.9 }}\r\n          color=\"primary\" className={classes.margin}\r\n          onClick={() => props.history.push('/post-list')}>\r\n          Browse Donations\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ShowContent;\r\n","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\common\\SideBarDonor.jsx",["239","240","241"],"import React, {useState} from 'react';\r\nimport '../../style/common/sidebarDonor.css'\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport { Snackbar, Typography, Chip} from '@material-ui/core'\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\n\r\nimport axios from 'axios'\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction SideBarDonor(props) {\r\n    const { selectedPost: {\r\n        totalDonors,\r\n        totalAmount,\r\n        currentAmount,\r\n        itemQuantity,\r\n        donationType,\r\n        _id,\r\n        location\r\n        \r\n    }\r\n    } = props\r\n\r\n    console.log(props)\r\n    \r\n  const [donateForm, setDonateForm] = useState({\r\n\r\n    name: '',\r\n    amount: 0,\r\n    message: '',\r\n    email: '',\r\n\r\n\r\n\r\n  })\r\n\r\n\r\n  const [openModal, setModal] = useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setModal(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n      setModal(false);\r\n  };\r\n\r\n\r\n  const handleSubmit = async () => {\r\n\r\n    if (donateForm.amount === 0) return handleClose()\r\n    else await axios.post(`http://localhost:5000/donate/${_id}`, donateForm)\r\n    handleClose()\r\n    handleClickAlert()\r\n\r\n  }\r\n\r\n      const [snacker, setSnacker] = useState(false);\r\n\r\n\r\n\r\n\r\n  const handleClickAlert = () => {\r\n    setSnacker(true);\r\n  };\r\n\r\n  const handleCloseAlert = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return; \r\n    }\r\n\r\n    setSnacker(false);\r\n  };\r\n\r\n\r\n\r\n\r\n  const Alert =(props)  => {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n\r\n\r\n  \r\n\r\n\r\n\r\n    return (\r\n        <aside className='sidebar-donor'>\r\n\r\n\r\n\r\n<Snackbar open={snacker} autoHideDuration={2000} onClose={handleCloseAlert}>\r\n  <Alert onClose={handleCloseAlert} severity=\"success\">\r\n        Successfully Donated\r\n  </Alert>\r\n\r\n\r\n</Snackbar>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            <div>\r\n              \r\n\r\n            {donationType === \"In-Kind\" ? \r\n                <div>\r\n           <Chip style={{marginBottom:'10px', width: '200px'}} label={location}  variant=\"outlined\" color=\"primary\" /> <br></br>\r\n            <Chip style={{width: '200px'}} label={donationType === \"Both\" ? 'Cash/In-Kind' : donationType} variant=\"outlined\" color=\"primary\" />\r\n                </div>\r\n                : \r\n                <div>\r\n                <Chip style={{marginBottom:'10px'}} label={location}  variant=\"outlined\" color=\"primary\" /> <br></br>\r\n                <Chip label={donationType === \"Both\" ? 'Cash/In-Kind' : donationType} variant=\"outlined\" color=\"primary\" />\r\n                    </div>\r\n    }\r\n\r\n\r\n\r\n\r\n            \r\n              {donationType === 'Both' || donationType ==='Cash' ? \r\n                <div>\r\n             <div>\r\n                   <h3 className='sidebar-donor-data'>₱{currentAmount}</h3>\r\n                    <p className='sidebar-donor-text'>Total Raise</p>\r\n                </div>\r\n                <div>\r\n                    <h3 className='sidebar-donor-data'>₱{totalAmount}</h3>\r\n                    <p className='sidebar-donor-text'>Target Amount</p>\r\n                </div>\r\n              \r\n\r\n                \r\n                    </div>\r\n                                                         : '' }\r\n\r\n                {donationType === 'Both' || donationType ==='In-Kind' ? \r\n                                      \r\n                <div>\r\n                    <h3 className='sidebar-donor-data'>&nbsp;&nbsp;{itemQuantity}</h3>\r\n                    <p className='sidebar-donor-text'>&nbsp;Items Donated</p>\r\n                </div>\r\n\r\n: '' }\r\n              \r\n\r\n\r\n              \r\n                <div>\r\n                    <h3 className='sidebar-donor-data'>&nbsp;&nbsp;{totalDonors}</h3>\r\n                    <p className='sidebar-donor-text'>&nbsp;&nbsp;Donors</p>\r\n                </div>\r\n          \r\n          \r\n\r\n        {donationType !== 'In-Kind' ?\r\n\r\n          <Button variant=\"contained\" color=\"primary\" style={{ margin: '20px 0 0 5px'}} onClick={handleClickOpen}>Donate Now</Button>\r\n   :'' }\r\n\r\n\r\n          \r\n            </div>\r\n\r\n\r\n            \r\n      <Dialog open={openModal} onClose={handleClose} aria-labelledby=\"form-dialog-title\" maxWidth='sm' fullWidth={true}>\r\n        <DialogTitle id=\"form-dialog-title\" style={{ alignSelf: 'center', fontSize: '50px' }}>Donate</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Please Fill the Inputs Bellow:\r\n          </DialogContentText>\r\n\r\n\r\n\r\n          <TextField\r\n            variant=\"outlined\"\r\n            \r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Name (Leave Blank for Anonymous Donation)\"\r\n            type=\"text\"\r\n            \r\n            fullWidth={true}\r\n            onChange={(e) =>\r\n              setDonateForm({ ...donateForm, name: e.target.value })\r\n            }\r\n          />\r\n\r\n\r\n\r\n          \r\n          \r\n          \r\n          <TextField\r\n          autoFocus\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            id=\"amount\"\r\n            label=\"Enter Amount: (Required) \"\r\n            required={true}\r\n            \r\n            type=\"number\"\r\n            fullWidth ={true}\r\n            onChange={(e) =>\r\n              setDonateForm({ ...donateForm, amount: e.target.value })\r\n            }\r\n          />\r\n\r\n\r\n\r\n\r\n          <TextField\r\n\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            id=\"email\"\r\n            label=\"Email (Optional, For Sending the Certificate)\"\r\n            type=\"email\"\r\n            fullWidth={true}\r\n            onChange={(e) =>\r\n              setDonateForm({ ...donateForm, email: e.target.value })\r\n            }\r\n          />\r\n\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            id=\"outlined-multiline-static\"\r\n            label=\"Message (Optional)\"\r\n            rows={4}\r\n            type=\"text\"\r\n            multiline\r\n            fullWidth={true}\r\n            onChange={(e) =>\r\n              setDonateForm({ ...donateForm, message: e.target.value })\r\n            }\r\n          />\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleSubmit} disabled={donateForm.amount === 0} color=\"primary\">\r\n            Donate\r\n          </Button>\r\n        </DialogActions>\r\n     \r\n     \r\n     \r\n      </Dialog>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </aside>\r\n    );\r\n}\r\n\r\nexport default SideBarDonor;","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\PostList.jsx",["242","243","244"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { connect } from 'react-redux';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nfunction PostList(props) {\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      maxWidth: 345,\r\n    },\r\n    media: {\r\n      height: 140,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n  });\r\n  const classes = useStyles();\r\n\r\n  if (!props.post)\r\n    return (\r\n      <div className='postCardContainer'>\r\n        <CircularProgress color='inherit' />\r\n      </div>\r\n    );\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n          style={{margin: '12px'}}\r\n\r\nonClick={() => props.history.push('/user/post-create')}\r\n        variant='outlined'\r\n        color='primary'\r\n        endIcon={<AddIcon fontSize=\"small\"></AddIcon>\r\n    }\r\n      >Create Post</Button>\r\n\r\n      <div className='postCardContainer shadow-container'>\r\n\r\n        {props.post.map((post) => (\r\n\r\n\r\n          <div className=\"hover-container\">\r\n\r\n\r\n          <Card className={classes.root} style={{ margin: '20px' }}>\r\n            <CardActionArea>\r\n              <CardMedia\r\n                component='img'\r\n                alt={post.profilePic}\r\n                height='140'\r\n                image={`/docs/${post.profilePic}`}\r\n                title={post.profilePic}\r\n              />\r\n              <CardContent>\r\n                <Typography color=\"primary\" gutterBottom variant='h5' component='h2'>\r\n                  {post.Title.substring(0, 20)}\r\n                  {post.Title.length > 20 ? '...' : ''}\r\n                </Typography>\r\n                <Typography className={classes.pos} color='textSecondary'>\r\n                  {post.location} |{' '}\r\n                  {post.donationType === 'both'\r\n                    ? 'Cash, In-kind'\r\n                    : post.donationType === 'cash'\r\n                    ? 'Cash'\r\n                    : 'In-kind'}\r\n                </Typography>\r\n                <Typography variant='body2' color='textSecondary' component='p'>\r\n                  {post.description.substring(0, 255)}\r\n                  {post.description.length > 250 ? '...' : ''}\r\n                </Typography>\r\n              </CardContent>\r\n            </CardActionArea>\r\n            <CardActions>\r\n              <Button\r\n                size='small'\r\n                color='primary'\r\n                onClick={() =>\r\n                  props.history.push(`/user/post-details/${post._id}`)\r\n                }\r\n              >\r\n               View Post\r\n              </Button>\r\n            </CardActions>\r\n          </Card>\r\n       \r\n       \r\n       \r\n          </div>\r\n       \r\n       ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { post: state.user.post };\r\n};\r\n\r\nexport default connect(mapStateToProps)(PostList);\r\n","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\common\\Sidebar.jsx",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\adminPage\\AdminPending.jsx",["245"],"import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCheck, faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport axios from 'axios'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { accountApproved, accountRejected } from '../../../app/accounts'\r\n\r\n\r\nfunction AdminPending(props) {\r\n\r\n    const theadData = [\r\n        {\r\n            label: 'Organization',\r\n            name: 'orgName'\r\n        },\r\n        {\r\n            label: 'Email',\r\n            name: 'email'\r\n        },\r\n        {\r\n            label: 'City',\r\n            name: 'city'\r\n        },\r\n        {\r\n            label: 'Rep. Name',\r\n            name: 'repName'\r\n        },\r\n    ]\r\n\r\n    const handleApproveAccount = async (account) => {\r\n        // await axios.post(`http://localhost:5000/admin/changestatus/${account}/approved`)\r\n        //     .then(() => accountList = [])\r\n        props.accountApproved(account)\r\n        // window.location.reload();\r\n    };\r\n\r\n    const handleRejectAccount = async (account) => {\r\n        props.accountRejected(account)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1 className='admin-page-title'>Pending</h1>\r\n            <table className='table-container'>\r\n                <thead>\r\n                    <tr>\r\n                        {theadData.map(tableHead =>\r\n                            <th key={tableHead.name} className='table-header'>{tableHead.label}</th>\r\n                        )}\r\n                        <th>Status</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {props.accountPending.map(account =>\r\n                        <tr key={account._id}>\r\n                            {theadData.map(tableHead =>\r\n                                <td key={tableHead.name} className='table-item'>\r\n                                    {account[tableHead.name]}\r\n                                </td>\r\n                            )}\r\n                            <td className='table-item' id='table-button-container'>\r\n                                <FontAwesomeIcon\r\n                                    icon={faCheck}\r\n                                    className='table-icon'\r\n                                    size='lg'\r\n                                    onClick={() => handleApproveAccount(account)}\r\n                                />\r\n                                <FontAwesomeIcon\r\n                                    icon={faTimes}\r\n                                    className='table-icon'\r\n                                    size='lg'\r\n                                    onClick={() => handleRejectAccount(account)}\r\n                                />\r\n                            </td>\r\n                        </tr>\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return { accountPending: state.accounts.pending }\r\n}\r\nexport default connect(mapStateToProps, { accountApproved, accountRejected })(AdminPending);","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\adminPage\\AdminLogin.jsx",["246","247"],"import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport {Container, TextField,  Typography,  CssBaseline, Button} from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nfunction AdminLogin(props) {\r\n    const [auth, setAuth] = useState({ username: '', password: '' })\r\n\r\n    const handleSubmit = async event => {\r\n        event.preventDefault()\r\n\r\n        const valid = await axios.post('http://localhost:5000/admin/login', auth);\r\n      \r\n        if (valid.data.valid !== true) \r\n            window.alert(valid.data.valid);\r\n    \r\n        else{\r\n\r\n\r\n            console.log(valid.data.token);\r\n      localStorage.setItem('admin', valid.data.token)\r\n      window.location.reload();\r\n\r\n      window.alert('Login Success');\r\n\r\n        }\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        paper: {\r\n          marginTop: theme.spacing(8),\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          alignItems: 'center',\r\n          justifyContent: 'center'\r\n        },\r\n        avatar: {\r\n          margin: theme.spacing(1),\r\n          backgroundColor: theme.palette.secondary.main,\r\n        },\r\n        form: {\r\n          width: '100%', \r\n          marginTop: theme.spacing(1),\r\n        },\r\n        submit: {\r\n          margin: theme.spacing(3, 0, 2),\r\n        },\r\n      }));\r\n    \r\n    \r\n    \r\n      const classes = useStyles();\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    return (\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        \r\n        <Container component=\"main\" maxWidth=\"sm\" >\r\n\r\n\r\n\r\n\r\n<CssBaseline/>\r\n\r\n\r\n\r\n\r\n  <div className={classes.paper}>\r\n   \r\n  \r\n\r\n            <div style={{padding: '5px 25px 50px 25px'}} className=\"shadow-container\">\r\n                <h1 style={{position:'relative', left:'30%'}} className='authTitle'>Admin Login</h1>\r\n          \r\n            \r\n          \r\n            <form action=\"#\" className='form-container' >\r\n                <TextField style={{marginBottom: '12px'}}variant=\"outlined\" type=\"text\" name=\"username\" id=\"username\" label='Enter Username: ' className='form-input-text' value={auth.username} onChange={e => setAuth({ ...auth, username: e.target.value })} />\r\n                <TextField style={{marginBottom: '12px'}} variant=\"outlined\" type=\"password\" name=\"password\" id=\"password\" label='Enter Password' className='form-input-text' value={auth.password} onChange={e => setAuth({ ...auth, password: e.target.value })} />\r\n              \r\n              \r\n              \r\n              \r\n              \r\n                    <Button variant=\"contained\" color=\"primary\"  onClick={handleSubmit} fullWidth>Login</Button>\r\n            </form>\r\n            </div>\r\n            </div>\r\n            </Container>\r\n            \r\n    );\r\n}\r\n\r\nexport default AdminLogin;","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\adminPage\\AdminRejected.jsx",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\adminPage\\AdminAccepted.jsx",["248","249"],"import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faEdit, faTrash } from '@fortawesome/free-solid-svg-icons'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { accountRejected } from '../../../app/accounts'\r\n\r\nfunction AdminAccepted(props) {\r\n    const theadData = [\r\n        {\r\n            label: 'Organization',\r\n            name: 'orgName'\r\n        },\r\n        {\r\n            label: 'Email',\r\n            name: 'email'\r\n        },\r\n        {\r\n            label: 'City',\r\n            name: 'city'\r\n        },\r\n        {\r\n            label: 'Rep. Name',\r\n            name: 'repName'\r\n        },\r\n    ]\r\n\r\n    const handleEditButton = (account) => {\r\n        console.log(account);\r\n    }\r\n\r\n    const handleDeleteButton = async (account) => {\r\n        props.accountRejected(account)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1 className='admin-page-title'>Accepted</h1>\r\n            <table className='table-container'>\r\n                <thead>\r\n                    <tr>\r\n                        {theadData.map(tableHead =>\r\n                            <th key={tableHead.name} className='table-header'>{tableHead.label}</th>\r\n                        )}\r\n                        <th className='table-header'>No. of Post</th>\r\n                        <th className='table-header'>Status</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {props.accApproved.map(account =>\r\n                        <tr key={account._id}>\r\n                            {theadData.map(tableHead =>\r\n                                <td key={tableHead.name} className='table-item'>\r\n                                    {account[tableHead.name]}</td>\r\n                            )}\r\n                            <td className='table-item'>\r\n\r\n                            </td>\r\n                            <td className='table-item'>\r\n                                {/* <FontAwesomeIcon\r\n                                    icon={faEdit}\r\n                                    className='table-icon'\r\n                                    size='lg'\r\n                                    onClick={e => handleEditButton(account)}\r\n                                    style={{ cursor: 'pointer' }}\r\n                                /> */}\r\n                                <FontAwesomeIcon\r\n                                    icon={faTrash}\r\n                                    className='table-icon'\r\n                                    size='lg'\r\n                                    onClick={e => handleDeleteButton(account)}\r\n                                    style={{ cursor: 'pointer' }}\r\n                                />\r\n                            </td>\r\n                        </tr>\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return { accApproved: state.accounts.approved }\r\n}\r\n\r\nexport default connect(mapStateToProps, { accountRejected })(AdminAccepted);","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\ledgerPage\\LedgerPage.jsx",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\postDetailPage\\PostCreate.jsx",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\changePassPage\\ChangePass.jsx",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\postUpdatePage\\UpdateUserPost.jsx",["250"],"import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport PostCreateUpdate from './PostCreateUpdate';\r\nimport PostDetailUpdate from './PostDetailUpdate';\r\n\r\nfunction UpdateUserPost(props) {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route path='/user/update-details/:id/create' component={PostCreateUpdate} />\r\n                <Route path='/user/update-details/:id' component={PostDetailUpdate} />\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UpdateUserPost;","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\detailsPage\\DetailsUpdatePage.jsx",["251"],"import axios from 'axios';\r\nimport React, { useState, useEffect } from 'react';\r\nimport '../../../style/detailsPage/detailsUpdatePage.css'\r\nimport Carousel from 'react-elastic-carousel'\r\nimport 'styled-components'\r\nimport { connect } from 'react-redux';\r\nimport '../../../style/detailsPage/detailsUpdatePage.css'\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction DetailsUpdatePage(props) {\r\n    const [updateList, setUpdateList] = useState([])\r\n    console.log(props);\r\n\r\n    useEffect(() => {\r\n        const getUpdateList = async () => {\r\n            const { data } = await axios.post(`http://localhost:5000/updates/getall/${props.match.params.id}`, { token: props.authToken })\r\n            setUpdateList(data)\r\n        }\r\n\r\n        if (props.post) {\r\n            getUpdateList()\r\n        }\r\n    }, [props.post])\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className='landing-post-update-container'>\r\n            {props.children}\r\n            <div className=''>\r\n                {updateList.map(update =>\r\n                    <div key={update._id} className='landing-post-update-faded'>\r\n                        <div>\r\n                            <Carousel itemsToShow={1}>\r\n                                {update.imageList.map(image => <img src={`/docs/${image}`} alt={image} key={image} style={{ height: '40vh', width: '100%' }} />)}\r\n                            </Carousel>\r\n                        </div>\r\n                        <div className=''>\r\n                            {update.description}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = (state, myProps) => {\r\n    const post = state.postList.find(post => post._id === myProps.match.params.id)\r\n    const authToken = state.auth.token\r\n    return { post, authToken }\r\n}\r\n\r\nexport default connect(mapStateToProps)(DetailsUpdatePage);","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\postDetailPage\\UserPostDetails.jsx",["252"],"import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { cityLocation } from '../../../others/cityLocation'\r\nimport {\r\n  TextField, Button, FormControl, InputLabel, Select, MenuItem, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Snackbar,\r\n} from '@material-ui/core/'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { userPostUpdated } from '../../../../app/user'\r\nimport Carousel from 'react-elastic-carousel'\r\nimport 'styled-components'\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\nfunction UserPostDetails(props) {\r\n  const post = props.post\r\n  const [postForm, setPostForm] = useState({\r\n    Title: '',\r\n    description: '',\r\n    location: '',\r\n    donationType: ''\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (post) setPostForm({\r\n      Title: post.Title,\r\n      description: post.description,\r\n      location: post.location,\r\n      donationType: post.donationType,\r\n    })\r\n  }, [post])\r\n\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const saveUpdate = async () => {\r\n      props.userPostUpdated(postForm, post._id, props.auth.token)\r\n      handleClose()\r\n      handleClickAlert()\r\n    }\r\n    saveUpdate();\r\n  }\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: '100%',\r\n      '& > * + *': {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n    },\r\n    paper: {\r\n      marginTop: theme.spacing(8),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n      width: '100%',\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n    formControl: {\r\n      minWidth: 120,\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n  const [openModal, setModal] = useState(false);\r\n  const handleClickOpen = async () => setModal(true);\r\n  const handleClose = () => setModal(false);\r\n  const [snacker, setSnacker] = useState(false);\r\n  const handleClickAlert = () => setSnacker(true);\r\n  const handleCloseAlert = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setSnacker(false);\r\n  };\r\n\r\n  if (!props.post) {\r\n    return (\r\n      <div>Loading...</div>\r\n    )\r\n  }\r\n\r\n  const Alert = (props) => {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.root}>\r\n        <Snackbar open={snacker} autoHideDuration={2000} onClose={handleCloseAlert}>\r\n          <Alert onClose={handleCloseAlert} severity=\"success\">Successfully Saved</Alert>\r\n        </Snackbar>\r\n      </div>\r\n      <Button onClick={() => props.history.push(`/user/update-details/${props.match.params.id}`)} style={{ margin: '12px' }} variant=\"outlined\" color=\"default\"endIcon={<ExitToAppIcon size=\"smaill\"></ExitToAppIcon>} >Updates</Button>\r\n      <Button onClick={handleClickOpen} style={{ margin: '12px' }} variant=\"outlined\" color=\"primary\" endIcon={<EditIcon size=\"smaill\"></EditIcon>}>Edit Post</Button>\r\n    \r\n    \r\n      <Dialog open={openModal} onClose={handleClose} aria-labelledby=\"form-dialog-title\" maxWidth='sm' fullWidth={true}>\r\n        <DialogTitle id=\"form-dialog-title\" style={{ alignSelf: 'center', fontSize: '50px' }}>Edit Post</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Please Fill the Inputs Bellow:\r\n          </DialogContentText>\r\n          <TextField\r\n            style={{ marginBottom: '12px' }} variant=\"outlined\" fullWidth={true}\r\n            label=\"Title\"\r\n            type=\"text\"\r\n            name=\"title\"\r\n            id=\"title\"\r\n            value={postForm.Title}\r\n            onChange={e => setPostForm({ ...postForm, Title: e.target.value })}\r\n          />\r\n          <FormControl fullWidth className={classes.formControl}>\r\n            <InputLabel style={{ marginLeft: '12px' }} id='city'>\r\n              Select Location\r\n              </InputLabel>\r\n            <Select\r\n              variant='outlined'\r\n              label='city'\r\n              name='city'\r\n              id='city'\r\n              fullWidth\r\n              value={postForm.location}\r\n              onChange={(e) =>\r\n                setPostForm({ ...postForm, location: e.target.value })}>\r\n              {cityLocation.map((city) =>\r\n                <MenuItem key={city} value={city}>{city}</MenuItem>\r\n              )}\r\n            </Select>\r\n          </FormControl>\r\n          <TextField\r\n            rows={15}\r\n            multiline\r\n            style={{ marginBottom: '12px', marginTop: '12px' }} label=\"Description\" variant=\"outlined\" fullWidth={true}\r\n            type=\"text\"\r\n            name='postDetails'\r\n            value={postForm.description}\r\n            onChange={e => setPostForm({ ...postForm, description: e.target.value })}\r\n            id='postDetails'\r\n            className=''\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"contained\" onClick={handleSubmit} color=\"primary\">\r\n            SAVE\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <h1>Post Details</h1>\r\n      <div className='post-container'>\r\n        <div className=\"post-create-container\">\r\n\r\n          <div className=\"post-detail-text-container\">\r\n            <label className='form-label' htmlFor='post-profile-pic'>Cover Photo</label>\r\n          </div>\r\n          <img src={`/docs/${post.profilePic}`} alt=\"Profile Photo Here\" />\r\n\r\n          <div className=\"post-detail-text-container\">\r\n            <label htmlFor=\"title\">Title:</label>\r\n            <p>{post.Title}</p>\r\n          </div>\r\n\r\n          <div>\r\n            <div className=\"post-detail-text-container\">\r\n              <label htmlFor=\"title\">Location:</label>\r\n              <p>{post.location}</p>\r\n            </div>\r\n\r\n            <div className=\"post-detail-text-container\">\r\n              <label htmlFor=\"\">Donation Type:</label>\r\n              <p>{post.donationType}</p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"post-detail-text-container\">\r\n            <label htmlFor=\"details\">Details:</label>\r\n            <p>{post.description}</p>\r\n          </div>\r\n\r\n          <div className=\"post-detail-text-container\">\r\n            <label className='form-label' htmlFor='postImages'>Images:</label>\r\n            <Carousel itemsToShow={1}>\r\n              {post.imageList.map(image => <img src={`/docs/${image}`} alt={image} key={image} style={{ height: '40vh', width: '100%' }} />)}\r\n            </Carousel>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n      <div>\r\n        <button onClick={() => props.history.push('/user')}>View Post List</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nconst mapStateToProps = (state, myProps) => {\r\n  const post = state.user.post.find(post => post._id === myProps.match.params.id)\r\n  return { post, auth: state.auth }\r\n}\r\n\r\nexport default connect(mapStateToProps, { userPostUpdated })(UserPostDetails);","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\common\\PostCard.jsx",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\others\\cityLocation.js",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\postUpdatePage\\PostCreateUpdate.jsx",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\postDetailPage\\PostCreateDetails.jsx",["253"],"import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../../../../style/userPage/userPage.css';\r\nimport { cityLocation } from '../../../others/cityLocation';\r\nimport axios from 'axios';\r\nimport {\r\n  Container,\r\n  TextField,\r\n  Typography,\r\n  CssBaseline,\r\n  Button,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  FormLabel,\r\n  FormControlLabel,\r\n  Radio,\r\n  RadioGroup,\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nfunction PostCreateDetails(props) {\r\n  const [postForm, setPostForm] = useState({\r\n    Title: '',\r\n    description: '',\r\n    location: '',\r\n    donationType: 'Cash',\r\n    totalAmount: '',\r\n  });\r\n  const [files, setFiles] = useState({\r\n    imageList: '',\r\n    profilePic: '',\r\n  });\r\n\r\n  const [numberImage, setNumberImage] = useState({\r\n\r\n    name: ''\r\n\r\n  })\r\n  const [numberImageList, setNumberImageList] = useState(0)\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const formdata = new FormData();\r\n\r\n    formdata.append('profilePic', files.profilePic);\r\n\r\n    for (const key in files.imageList) {\r\n      formdata.append('imageList', files.imageList[key]);\r\n    }\r\n    formdata.append('Title', postForm.Title);\r\n    formdata.append('description', postForm.description);\r\n    formdata.append('location', postForm.location);\r\n    formdata.append('donationType', postForm.donationType);\r\n    formdata.append('totalAmount', postForm.totalAmount);\r\n    formdata.append('token', localStorage.getItem('user'));\r\n   \r\n\r\n    console.log(...formdata);\r\n\r\n\r\n    const data = await axios.post(\r\n      'http://localhost:5000/post/createpost',\r\n      formdata\r\n    );\r\n\r\n\r\n    window.location.replace('http://localhost:5001/user');\r\n  };\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      marginTop: theme.spacing(8),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n      width: '100%',\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n    formControl: {\r\n      minWidth: 120,\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Container component='main' maxWidth='md'>\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n\r\n          <div style={{ padding: '50px 25px 50px 25px' }} className=\"shadow-container\">\r\n\r\n\r\n            <Typography component='h1' variant='h5'>\r\n              Creating New Post{' '}\r\n            </Typography>\r\n\r\n            <form encType='multipart/form-data' className={classes.form} onSubmit={handleSubmit}>\r\n              <Button variant='outlined' color='primary' component='label' >\r\n                {`Upload Cover Photo : ${numberImage.name === '' ? 'NONE' : numberImage.name}`}\r\n                <input\r\n                  hidden\r\n                  type='file'\r\n                  required={true}\r\n                  onChange={(e) => {\r\n                    const file = e.target.files[0];\r\n                    setFiles({ ...files, profilePic: file });\r\n                    setNumberImage({ name: e.target.files[0].name })\r\n                  }}\r\n                ></input>\r\n              </Button>\r\n\r\n              <TextField\r\n                color='primary'\r\n                margin='normal'\r\n                fullWidth\r\n                variant='outlined'\r\n                label='Enter Post Title'\r\n                type='text'\r\n                required={true}\r\n                name='title'\r\n                id='title'\r\n                className='user-form-input'\r\n                value={postForm.Title}\r\n                onChange={(e) =>\r\n                  setPostForm({ ...postForm, Title: e.target.value })\r\n                }\r\n              />\r\n\r\n\r\n\r\n              <FormControl fullWidth className={classes.formControl}>\r\n                <InputLabel style={{ marginLeft: '12px' }} id='city'>\r\n                  Select Location\r\n              </InputLabel>\r\n\r\n                <Select\r\n                  required={true}\r\n                  variant='outlined'\r\n                  label='city'\r\n                  name='city'\r\n                  id='city'\r\n                  fullWidth\r\n                  value={postForm.location}\r\n                  onChange={(e) =>\r\n                    setPostForm({ ...postForm, location: e.target.value })\r\n                  }\r\n                >\r\n                  {cityLocation.map((city) => (\r\n                    <MenuItem key={city} value={city}>{city}</MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n              <FormControl\r\n                component='fieldset'\r\n                style={{ margin: '12px 0 0 12px' }}\r\n              >\r\n                <FormLabel component='legend'>Select Donation Type</FormLabel>\r\n                <RadioGroup\r\n                  aria-label='gender'\r\n                  name='gender1'\r\n                  value={postForm.donationType}\r\n                  onChange={(e) =>\r\n                    setPostForm({ ...postForm, donationType: e.target.value, totalAmount: 0 })\r\n                  }\r\n                >\r\n                  <FormControlLabel\r\n                    value='Cash'\r\n                    control={<Radio />}\r\n                    label='Cash'\r\n                  />\r\n                  <FormControlLabel\r\n                    value='In-Kind'\r\n                    control={<Radio />}\r\n                    label='In-Kind'\r\n                  />\r\n                  <FormControlLabel\r\n                    value='Both'\r\n                    control={<Radio />}\r\n                    label='Both'\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n\r\n\r\n            {postForm.donationType === 'In-Kind' ? '' : \r\n\r\n\r\n              <TextField\r\n                required={true}\r\n                color='primary'\r\n                margin='normal'\r\n                fullWidth\r\n                variant='outlined'\r\n                label='Enter Amount'\r\n                type='number'\r\n                name='totalAmount'\r\n                id='totalAmount'\r\n                className='user-form-input'\r\n                value={postForm.totalAmount}\r\n                onChange={(e) =>\r\n                  setPostForm({ ...postForm, totalAmount: e.target.value })\r\n               \r\n                }\r\n              />\r\n              }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n              <TextField\r\n              required={true}\r\n                variant=\"outlined\"\r\n                rows={10}\r\n                type='text'\r\n                multiline\r\n                id='description'\r\n                fullWidth\r\n\r\n\r\n\r\n                label=\"Enter your Post Description, You can include your own payment option and account, (etc, GCASH, BPI, PAYPAL) or  your address for In-Kind Donation\"\r\n                name='description'\r\n                value={postForm.description}\r\n                onChange={(e) =>\r\n                  setPostForm({ ...postForm, description: e.target.value })\r\n                }\r\n\r\n\r\n\r\n\r\n              />\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n              <Button variant='outlined' color='primary' component='label' style={{ marginTop: '12px' }}>\r\n                {`Upload Reference Picture (Can Have Multiple Pictures) | Files Selected: ${numberImageList}`}\r\n                <input\r\n                required={true}\r\n                  hidden\r\n                  type='file'\r\n                  id='postImages'\r\n                  name='postImages'\r\n                  onChange={(e) => {\r\n                    const multifiles = e.target.files;\r\n                    setFiles({ ...files, imageList: multifiles });\r\n                    setNumberImageList(e.target.files.length)\r\n                  }}\r\n                  multiple\r\n\r\n                ></input>\r\n              </Button>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n              <div style={{ marginTop: '12px', display: 'flex' }}>\r\n                <Button variant='outlined' color=\"default\" style={{ marginRight: '12px' }}> <Link to='/user'>Cancel</Link> </Button>\r\n\r\n\r\n\r\n                <Button variant='contained' color='primary' type=\"submit\">Save</Button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default PostCreateDetails;\r\n","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\ledgerPage\\LedgerCreate.jsx",[],"C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\ledgerPage\\LedgerList.jsx",["254","255","256","257","258"],"import React, { useContext, useState } from 'react';\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Container from '@material-ui/core/Container'\r\nimport {\r\n  TextField, Button, Icon, FormControl, InputLabel, Select, Radio, RadioGroup, FormLabel, FormControlLabel, MenuItem, Snackbar\r\n} from '@material-ui/core/'\r\nimport { connect } from 'react-redux'\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { userLedgerAdded } from '../../../../app/user'\r\nimport { CodeOutlined, LaptopWindows } from '@material-ui/icons';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\n\r\n\r\n\r\n\r\nfunction LedgerList(props) {\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n    },\r\n  }))(TableCell);\r\n\r\n  const StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n      '&:nth-of-type(odd)': {\r\n        backgroundColor: theme.palette.action.hover,\r\n      },\r\n    },\r\n\r\n  }))(TableRow)\r\n\r\n\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    table: {\r\n      minWidth: 700,\r\n    },\r\n    paper: {\r\n      marginTop: theme.spacing(8),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n      width: '100%',\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n    formControl: {\r\n      minWidth: 120,\r\n    },\r\n    root: {\r\n      width: '100%',\r\n      '& > * + *': {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n    },\r\n\r\n  }));\r\n\r\n\r\n  const classes = useStyles();\r\n\r\n\r\n\r\n\r\n  // Modal\r\n\r\n  const [ledgerForm, setLedgerForm] = useState({\r\n    postId: '',\r\n    donorName: '',\r\n    donationType: 'Cash',\r\n    paymentAddress: '',\r\n    amount: 0,\r\n    remarks: '',\r\n    date: '',\r\n    email: ''\r\n  })\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault()\r\n    // if (ledgerForm.postId === 'Select Post' || ledgerForm.postId === '') return alert('Select Post first')\r\n    // if (ledgerForm.date === '') return alert('Select Date first')\r\n\r\n\r\n    if(ledgerForm.donorName === '') setLedgerForm({...ledgerForm, donorName: 'Anonymous'})\r\n\r\n\r\n    props.userLedgerAdded(ledgerForm, props.userToken)\r\n\r\n    setLedgerForm({\r\n\r\n\r\n      postId: '',\r\n      donorName: '',\r\n      donationType: 'Cash',\r\n      paymentAddress: '',\r\n      amount: 0,\r\n      remarks: '',\r\n      date: '',\r\n      email: ''\r\n\r\n    })\r\n    \r\n    handleClose()\r\n    setOpen(true)\r\n\r\n    document.location.reload()\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  const [openModal, setModal] = useState(false);\r\n\r\n  const handleClickOpen = async () => {\r\n    setModal(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setModal(false);\r\n  };\r\n\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n\r\n\r\n  const handleCloseAlert = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n\r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n\r\n\r\n  return (\r\n\r\n    <div>\r\n\r\n      <Snackbar open={open} autoHideDuration={4000} onClose={handleCloseAlert}>\r\n        <Alert onClose={handleCloseAlert} severity=\"success\">\r\n          Data Successfully Added\r\n        </Alert>\r\n      </Snackbar>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      <Button\r\n        style={{ margin: '12px' }}\r\n        onClick={handleClickOpen}\r\n        variant='outlined'\r\n        color='primary'\r\n        endIcon={<AddIcon fontSize=\"small\"></AddIcon>\r\n      }\r\n      >Add Data</Button>\r\n\r\n\r\n\r\n\r\n      <Container component='main' maxWidth='xl' className=\"shadow-container\">\r\n\r\n\r\n\r\n\r\n        <div>\r\n\r\n          <TextField variant='outlined' style={{ width: '50%', display: 'relative', left: '25%', marginBottom: '30px' }} label=\"Search Here\" />\r\n\r\n\r\n        </div>\r\n\r\n        <div style={{ overflowX: 'auto' }}>\r\n\r\n\r\n          <TableContainer component={Paper}>\r\n            <Table className={classes.table}\r\n              aria-label='customized table'\r\n            >\r\n              <TableHead>\r\n                <TableRow>\r\n                  <StyledTableCell align='center'>POST</StyledTableCell>\r\n                  <StyledTableCell align='center'>NAME</StyledTableCell>\r\n                  <StyledTableCell align='center'>EMAIL</StyledTableCell>\r\n                  <StyledTableCell align='center'>DONATION TYPE</StyledTableCell>\r\n                  <StyledTableCell align='center'>\r\n                    Payment Method (If Cash Donation)\r\n                </StyledTableCell>\r\n                  <StyledTableCell align='center'>AMOUNT / ITEM QUANTITY</StyledTableCell>\r\n                  <StyledTableCell align='center'>REMARKS</StyledTableCell>\r\n                  <StyledTableCell align='center'>DATE</StyledTableCell>\r\n\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {props.ledger &&\r\n                  props.ledger.map((data) => (\r\n                    <StyledTableRow key={data._id}>\r\n                      <StyledTableCell align='center'>{props.post.filter(postData => postData._id === data.postId)[0].Title}</StyledTableCell>\r\n                      <StyledTableCell align='center'>{data.donorName}</StyledTableCell>\r\n                      <StyledTableCell align='center'>{data.email}</StyledTableCell>\r\n                      <StyledTableCell align='center'>{data.donationType}</StyledTableCell>\r\n                      <StyledTableCell align='center'>{data.paymentAddress}</StyledTableCell>\r\n                      <StyledTableCell align='center'>{data.amount}</StyledTableCell>\r\n                      <StyledTableCell style={{ maxWidth: '20vw' }} align='center'>{data.remarks}</StyledTableCell>\r\n                      <StyledTableCell align='center'>{(data.date)}</StyledTableCell>\r\n                    </StyledTableRow>\r\n                  ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </div>\r\n\r\n      </Container>\r\n\r\n\r\n\r\n\r\n\r\n\r\n      {/* Modal */}\r\n\r\n      <Dialog open={openModal} onClose={handleClose} aria-labelledby=\"form-dialog-title\" maxWidth='sm' fullWidth={true}>\r\n        <DialogTitle id=\"form-dialog-title\" style={{ alignSelf: 'center', fontSize: '50px' }}>Add New Data</DialogTitle>\r\n        <DialogContent>\r\n        <form onSubmit={handleSubmit}>\r\n          <DialogContentText>\r\n            Please Fill the Inputs Bellow:\r\n          </DialogContentText>\r\n\r\n\r\n\r\n                      \r\n\r\n          <FormControl style={{ marginBottom: '12px' }} fullWidth={true} className={classes.formControl}>\r\n            <InputLabel style={{ marginLeft: '12px' }} id='post'>\r\n\r\n\r\n              Select Post\r\n              </InputLabel>\r\n\r\n            <Select\r\n              required={true}\r\n              variant='outlined'\r\n              label='city'\r\n              name='city'\r\n              id='city'\r\n              fullWidth={true}\r\n              value={ledgerForm.postId}\r\n              onChange={(e) =>\r\n                setLedgerForm({ ...ledgerForm, postId: e.target.value })\r\n              }\r\n            >\r\n              {props.post && props.post.map(post =>\r\n\r\n                <MenuItem key={post._id} value={post._id}>{post.Title}</MenuItem>\r\n\r\n\r\n              )}\r\n            </Select>\r\n\r\n\r\n          </FormControl>\r\n\r\n                \r\n          <FormControl style={{ marginBottom: '12px' }} fullWidth={true} component=\"fieldset\">\r\n            <FormLabel component='legend'>Select Donation Type</FormLabel>\r\n\r\n\r\n            <RadioGroup\r\n              aria-label='gender'\r\n              name='gender1'\r\n              value={ledgerForm.donationType}\r\n              onChange={(e) =>\r\n                setLedgerForm({ ...ledgerForm, donationType: e.target.value })\r\n              }>\r\n\r\n              <FormControlLabel\r\n                value='Cash'\r\n                control={<Radio />}\r\n                label='Cash'\r\n              />\r\n          \r\n          \r\n\r\n              <FormControlLabel\r\n                value='In-Kind'\r\n                control={<Radio />}\r\n                label='In-Kind'\r\n              />\r\n\r\n            </RadioGroup>\r\n\r\n\r\n          </FormControl>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n          <TextField style={{ marginBottom: '12px' }} variant=\"outlined\" fullWidth={true} required={true} label=\"Enter Donor Name (Can be Anonymous)\" type=\"text\" name=\"donorName\" id=\"donorName\"\r\n            value={ledgerForm.donorName}\r\n            onChange={e => {setLedgerForm({ ...ledgerForm, donorName: e.target.value });}}\r\n          />\r\n\r\n\r\n\r\n          <TextField style={{ marginBottom: '12px' }} variant=\"outlined\" fullWidth={true} label=\"Enter Email (Optional)\" type=\"text\" name=\"\" id=\"\" onChange={e => setLedgerForm({ ...ledgerForm, email: e.target.value })} />\r\n\r\n\r\n          <TextField style={{ marginBottom: '12px' }} variant=\"outlined\" fullWidth={true} label=\"Enter Payment Method (etc, Gcash, Bank Account) |\" type=\"text\" name=\"paymentAddress\" id=\"paymentAddress\"\r\n            value={ledgerForm.paymentAddress}\r\n            onChange={e => setLedgerForm({ ...ledgerForm, paymentAddress: e.target.value })}\r\n\r\n\r\n\r\n          />\r\n\r\n          <TextField style={{ marginBottom: '12px' }}  pattern=\"[0-9]+\" required={true} variant=\"outlined\" fullWidth={true} label=\"Enter Amount(Cash) / Item Quantity(In-Kind)\" type=\"number\" name=\"amount\" id=\"amount\"\r\n            value={ledgerForm.amount}\r\n            onChange={e => setLedgerForm({ ...ledgerForm, amount: e.target.value })}\r\n          />\r\n\r\n\r\n          <TextField style={{ marginBottom: '12px' }} variant=\"outlined\" fullWidth={true} rows={4} multiline label=\"Enter Remarks\" type=\"text\" name=\"remarks\" id=\"remarks\"\r\n            value={ledgerForm.remarks}\r\n            onChange={e => setLedgerForm({ ...ledgerForm, remarks: e.target.value })}\r\n          />\r\n\r\n\r\n\r\n          <TextField required={true} style={{ marginBottom: '12px' }} variant=\"outlined\" fullWidth={true} InputLabelProps={{\r\n            shrink: true,\r\n          }} type=\"date\" onChange={date => {\r\n            setLedgerForm({ ...ledgerForm, date: date.target.value })\r\n          }} />\r\n\r\n\r\n\r\n          <DialogActions>\r\n              <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          \r\n          <Button type=\"submit\" disabled={ledgerForm.amount === 0} color=\"primary\">\r\n            Donate\r\n          </Button>\r\n\r\n\r\n          </DialogActions>\r\n\r\n\r\n        </form>\r\n        </DialogContent>\r\n\r\n\r\n      </Dialog>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    ledger: state.user.ledger, post: state.user.post, userToken: state.auth.token\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, { userLedgerAdded })(LedgerList);\r\n","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\pages\\userPage\\postUpdatePage\\PostDetailUpdate.jsx",["259","260"],"import React, { useState, useEffect } from 'react';\r\nimport {\r\n  TextField, Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Snackbar,\r\n} from '@material-ui/core/'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport axios from 'axios'\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { connect } from 'react-redux';\r\nimport Carousel from 'react-elastic-carousel'\r\nimport 'styled-components'\r\nimport '../../../../style/userPage/userPage.css'\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport NoteAddIcon from '@material-ui/icons/NoteAdd';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction PostDetailUpdate(props) {\r\n\r\n\r\n  const [updateList, setUpdateList] = useState([])\r\n  const [descriptionForm, setDescriptionForm] = useState('')\r\n  const [files, setfiles] = useState({\r\n    imageList: ''\r\n  })\r\n  const [numberImage, setNumberImage] = useState(0)\r\n\r\n  const handleSubmit = async (e) => {\r\n\r\n    e.preventDefault()\r\n\r\n    const formdata = new FormData();\r\n\r\n    for (const key in files.imageList) {\r\n      formdata.append('imageList', files.imageList[key]);\r\n    }\r\n\r\n\r\n\r\n    formdata.append('description', descriptionForm);\r\n    formdata.append('token', localStorage.getItem('user'))\r\n\r\n\r\n\r\n\r\n    await axios.post(`http://localhost:5000/updates/${props.match.params.id}`, formdata)\r\n    handleClose()\r\n    handleClickAlert()\r\n  }\r\n\r\n  const handleImage = async (e) => {\r\n    setfiles({ imageList: e.target.files })\r\n    setNumberImage(e.target.files.length)\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: '100%',\r\n      '& > * + *': {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n    },\r\n    paper: {\r\n      marginTop: theme.spacing(8),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n      width: '100%',\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n    formControl: {\r\n      minWidth: 120,\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n\r\n  const [openModal, setModal] = useState(false);\r\n\r\n  const handleClickOpen = async () => {\r\n    setModal(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setModal(false);\r\n  };\r\n\r\n  const [snacker, setSnacker] = useState(false);\r\n\r\n\r\n\r\n\r\n  const handleClickAlert = () => {\r\n    setSnacker(true);\r\n  };\r\n\r\n  const handleCloseAlert = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setSnacker(false);\r\n  };\r\n\r\n\r\n\r\n\r\n  const Alert = (props) => {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const getUpdateList = async () => {\r\n      const { data } = await axios.post(`http://localhost:5000/updates/getall/${props.match.params.id}`, { token: props.authToken })\r\n      setUpdateList(data)\r\n    }\r\n    if (props.post) {\r\n      getUpdateList()\r\n    }\r\n  }, [props.post])\r\n\r\n\r\n\r\n\r\n\r\n  if (!updateList) return <div>No updates yet...</div>\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Snackbar open={snacker} autoHideDuration={2000} onClose={handleCloseAlert}>\r\n        <Alert onClose={handleCloseAlert} severity=\"success\">\r\n          Update Successfully Created\r\n                       </Alert>\r\n\r\n\r\n      </Snackbar>\r\n\r\n      <div className=\"post-update-detail-button\">\r\n        <Button onClick={() => props.history.push(`/user/post-details/${props.match.params.id}`)} style={{ margin: '12px' }} variant=\"outlined\" color=\"default\" endIcon={<ExitToAppIcon size=\"small\"></ExitToAppIcon>} >Back to Post</Button>\r\n        <Button onClick={handleClickOpen} style={{ margin: '12px' }} variant=\"outlined\" color=\"primary\" endIcon={<NoteAddIcon size=\"small\"></NoteAddIcon>} >Create New Update</Button>\r\n      </div>\r\n      <div className='post-update-container'>\r\n        {updateList.map(update =>\r\n          <div key={update._id} className='update-item-container'>\r\n            <div>\r\n              <Carousel itemsToShow={1}>\r\n                {update.imageList.map(image => <img src={`/docs/${image}`} alt={image} key={image} style={{ height: '40vh', width: '100%' }} />)}\r\n              </Carousel>\r\n            </div>\r\n            <div className='post-update-description'>\r\n              {update.description}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <Dialog open={openModal} onClose={handleClose} aria-labelledby=\"form-dialog-title\" maxWidth='sm' fullWidth={true}>\r\n        <form encType='multipart/form-data'>\r\n          <DialogTitle id=\"form-dialog-title\" style={{ alignSelf: 'center', fontSize: '50px' }}>Create Update</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              Please Fill the Inputs Bellow:\r\n                       </DialogContentText>\r\n            <TextField\r\n              rows={10}\r\n              multiline\r\n              style={{ marginBottom: '12px' }} label=\"Post Update Description\" variant=\"outlined\" fullWidth={true}\r\n              type=\"text\"\r\n              name='postDetails'\r\n              value={descriptionForm}\r\n              onChange={e => setDescriptionForm(e.target.value)}\r\n              id='postDetails'\r\n              className=''\r\n            />\r\n\r\n            <Button variant='outlined' color='primary' component='label' style={{ marginTop: '12px' }}>\r\n              {`Upload Picture (Can Have Multiple Pictures) | Files Selected: ${numberImage}`}\r\n              <input\r\n                hidden\r\n                type='file'\r\n                id='postImages'\r\n                name='postImages'\r\n                onChange={handleImage}\r\n                multiple\r\n\r\n              ></input>\r\n            </Button>\r\n\r\n\r\n\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleClose} color=\"primary\">\r\n              Cancel\r\n                       </Button>\r\n            <Button variant=\"contained\" onClick={handleSubmit} color=\"primary\">\r\n              SAVE\r\n                       </Button>\r\n          </DialogActions>\r\n\r\n        </form>\r\n      </Dialog>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nconst mapStateToProps = (state, myProps) => {\r\n  const post = state.postList.find(post => post._id === myProps.match.params.id)\r\n  const authToken = state.auth.token\r\n  return { post, authToken }\r\n}\r\n\r\nexport default connect(mapStateToProps)(PostDetailUpdate);","C:\\Users\\Aaron Joshua\\Desktop\\Thesis\\instagive-react-frontend\\src\\components\\common\\Footer.jsx",["261","262","263","264"],{"ruleId":"265","replacedBy":"266"},{"ruleId":"267","replacedBy":"268"},{"ruleId":"269","severity":1,"message":"270","line":1,"column":28,"nodeType":"271","messageId":"272","endLine":1,"endColumn":36},{"ruleId":"273","severity":1,"message":"274","line":42,"column":6,"nodeType":"275","endLine":42,"endColumn":8,"suggestions":"276"},{"ruleId":"269","severity":1,"message":"277","line":19,"column":7,"nodeType":"271","messageId":"272","endLine":19,"endColumn":20},{"ruleId":"269","severity":1,"message":"278","line":26,"column":7,"nodeType":"271","messageId":"272","endLine":26,"endColumn":22},{"ruleId":"269","severity":1,"message":"279","line":33,"column":7,"nodeType":"271","messageId":"272","endLine":33,"endColumn":22},{"ruleId":"280","severity":1,"message":"281","line":43,"column":1,"nodeType":"282","endLine":61,"endColumn":2},{"ruleId":"280","severity":1,"message":"281","line":42,"column":1,"nodeType":"282","endLine":65,"endColumn":2},{"ruleId":"280","severity":1,"message":"281","line":35,"column":1,"nodeType":"282","endLine":52,"endColumn":2},{"ruleId":"269","severity":1,"message":"283","line":6,"column":10,"nodeType":"271","messageId":"272","endLine":6,"endColumn":20},{"ruleId":"269","severity":1,"message":"284","line":9,"column":12,"nodeType":"271","messageId":"272","endLine":9,"endColumn":22},{"ruleId":"269","severity":1,"message":"285","line":9,"column":24,"nodeType":"271","messageId":"272","endLine":9,"endColumn":37},{"ruleId":"273","severity":1,"message":"286","line":21,"column":8,"nodeType":"275","endLine":21,"endColumn":10,"suggestions":"287"},{"ruleId":"273","severity":1,"message":"274","line":21,"column":8,"nodeType":"275","endLine":21,"endColumn":26,"suggestions":"288"},{"ruleId":"269","severity":1,"message":"289","line":50,"column":7,"nodeType":"271","messageId":"272","endLine":50,"endColumn":22},{"ruleId":"280","severity":1,"message":"281","line":80,"column":1,"nodeType":"282","endLine":115,"endColumn":2},{"ruleId":"269","severity":1,"message":"290","line":1,"column":8,"nodeType":"271","messageId":"272","endLine":1,"endColumn":13},{"ruleId":"269","severity":1,"message":"283","line":12,"column":10,"nodeType":"271","messageId":"272","endLine":12,"endColumn":20},{"ruleId":"291","severity":1,"message":"292","line":132,"column":11,"nodeType":"293","endLine":132,"endColumn":26},{"ruleId":"269","severity":1,"message":"294","line":17,"column":8,"nodeType":"271","messageId":"272","endLine":17,"endColumn":18},{"ruleId":"269","severity":1,"message":"283","line":18,"column":10,"nodeType":"271","messageId":"272","endLine":18,"endColumn":20},{"ruleId":"269","severity":1,"message":"295","line":19,"column":8,"nodeType":"271","messageId":"272","endLine":19,"endColumn":19},{"ruleId":"269","severity":1,"message":"296","line":55,"column":13,"nodeType":"271","messageId":"272","endLine":55,"endColumn":20},{"ruleId":"269","severity":1,"message":"295","line":2,"column":8,"nodeType":"271","messageId":"272","endLine":2,"endColumn":19},{"ruleId":"269","severity":1,"message":"297","line":3,"column":8,"nodeType":"271","messageId":"272","endLine":3,"endColumn":17},{"ruleId":"269","severity":1,"message":"298","line":5,"column":8,"nodeType":"271","messageId":"272","endLine":5,"endColumn":16},{"ruleId":"269","severity":1,"message":"299","line":6,"column":8,"nodeType":"271","messageId":"272","endLine":6,"endColumn":24},{"ruleId":"269","severity":1,"message":"300","line":7,"column":8,"nodeType":"271","messageId":"272","endLine":7,"endColumn":18},{"ruleId":"269","severity":1,"message":"294","line":8,"column":10,"nodeType":"271","messageId":"272","endLine":8,"endColumn":20},{"ruleId":"301","severity":1,"message":"302","line":11,"column":9,"nodeType":"303","endLine":11,"endColumn":124},{"ruleId":"301","severity":1,"message":"302","line":21,"column":13,"nodeType":"303","endLine":21,"endColumn":104},{"ruleId":"269","severity":1,"message":"304","line":6,"column":10,"nodeType":"271","messageId":"272","endLine":6,"endColumn":14},{"ruleId":"269","severity":1,"message":"294","line":11,"column":20,"nodeType":"271","messageId":"272","endLine":11,"endColumn":30},{"ruleId":"269","severity":1,"message":"305","line":12,"column":10,"nodeType":"271","messageId":"272","endLine":12,"endColumn":20},{"ruleId":"269","severity":1,"message":"283","line":12,"column":22,"nodeType":"271","messageId":"272","endLine":12,"endColumn":32},{"ruleId":"269","severity":1,"message":"306","line":11,"column":10,"nodeType":"271","messageId":"272","endLine":11,"endColumn":25},{"ruleId":"269","severity":1,"message":"307","line":12,"column":10,"nodeType":"271","messageId":"272","endLine":12,"endColumn":22},{"ruleId":"269","severity":1,"message":"308","line":14,"column":8,"nodeType":"271","messageId":"272","endLine":14,"endColumn":12},{"ruleId":"269","severity":1,"message":"290","line":4,"column":8,"nodeType":"271","messageId":"272","endLine":4,"endColumn":13},{"ruleId":"269","severity":1,"message":"304","line":2,"column":10,"nodeType":"271","messageId":"272","endLine":2,"endColumn":14},{"ruleId":"269","severity":1,"message":"294","line":4,"column":32,"nodeType":"271","messageId":"272","endLine":4,"endColumn":42},{"ruleId":"269","severity":1,"message":"309","line":3,"column":10,"nodeType":"271","messageId":"272","endLine":3,"endColumn":16},{"ruleId":"269","severity":1,"message":"310","line":28,"column":11,"nodeType":"271","messageId":"272","endLine":28,"endColumn":27},{"ruleId":"269","severity":1,"message":"311","line":2,"column":25,"nodeType":"271","messageId":"272","endLine":2,"endColumn":33},{"ruleId":"273","severity":1,"message":"312","line":27,"column":8,"nodeType":"275","endLine":27,"endColumn":20,"suggestions":"313"},{"ruleId":"301","severity":1,"message":"302","line":170,"column":11,"nodeType":"303","endLine":170,"endColumn":76},{"ruleId":"269","severity":1,"message":"314","line":69,"column":11,"nodeType":"271","messageId":"272","endLine":69,"endColumn":15},{"ruleId":"269","severity":1,"message":"315","line":1,"column":17,"nodeType":"271","messageId":"272","endLine":1,"endColumn":27},{"ruleId":"269","severity":1,"message":"316","line":2,"column":8,"nodeType":"271","messageId":"272","endLine":2,"endColumn":18},{"ruleId":"269","severity":1,"message":"308","line":13,"column":22,"nodeType":"271","messageId":"272","endLine":13,"endColumn":26},{"ruleId":"269","severity":1,"message":"317","line":24,"column":10,"nodeType":"271","messageId":"272","endLine":24,"endColumn":22},{"ruleId":"269","severity":1,"message":"318","line":24,"column":24,"nodeType":"271","messageId":"272","endLine":24,"endColumn":37},{"ruleId":"269","severity":1,"message":"296","line":93,"column":9,"nodeType":"271","messageId":"272","endLine":93,"endColumn":16},{"ruleId":"273","severity":1,"message":"312","line":143,"column":6,"nodeType":"275","endLine":143,"endColumn":18,"suggestions":"319"},{"ruleId":"269","severity":1,"message":"320","line":1,"column":9,"nodeType":"271","messageId":"272","endLine":1,"endColumn":15},{"ruleId":"269","severity":1,"message":"321","line":1,"column":17,"nodeType":"271","messageId":"272","endLine":1,"endColumn":24},{"ruleId":"322","severity":1,"message":"323","line":24,"column":42,"nodeType":"303","endLine":24,"endColumn":120},{"ruleId":"322","severity":1,"message":"323","line":26,"column":5,"nodeType":"303","endLine":26,"endColumn":63},"no-native-reassign",["324"],"no-negated-in-lhs",["325"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["326"],"'postListAdded' is assigned a value but never used.","'postListRemoved' is assigned a value but never used.","'postListUpdated' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'makeStyles' is defined but never used.","'userAuthID' is assigned a value but never used.","'setUserAuthID' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["327"],["328"],"'userPostRemoved' is assigned a value but never used.","'axios' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Typography' is defined but never used.","'CssBaseline' is defined but never used.","'classes' is assigned a value but never used.","'Container' is defined but never used.","'orgPhoto' is defined but never used.","'unknownUserPhoto' is defined but never used.","'checkPhoto' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'Link' is defined but never used.","'withStyles' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'faPlusCircle' is defined but never used.","'Icon' is defined but never used.","'faEdit' is defined but never used.","'handleEditButton' is assigned a value but never used.","'Redirect' is defined but never used.","React Hook useEffect has missing dependencies: 'props.authToken' and 'props.match.params.id'. Either include them or remove the dependency array.",["329"],"'data' is assigned a value but never used.","'useContext' is defined but never used.","'DatePicker' is defined but never used.","'CodeOutlined' is defined but never used.","'LaptopWindows' is defined but never used.",["330"],"'AppBar' is defined but never used.","'Toolbar' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","no-global-assign","no-unsafe-negation",{"desc":"331","fix":"332"},{"desc":"333","fix":"334"},{"desc":"335","fix":"336"},{"desc":"337","fix":"338"},{"desc":"337","fix":"339"},"Update the dependencies array to be: [props]",{"range":"340","text":"341"},"Update the dependencies array to be: [props.history]",{"range":"342","text":"343"},"Update the dependencies array to be: [props, props.auth.token]",{"range":"344","text":"345"},"Update the dependencies array to be: [props.authToken, props.match.params.id, props.post]",{"range":"346","text":"347"},{"range":"348","text":"347"},[1421,1423],"[props]",[674,676],"[props.history]",[804,822],"[props, props.auth.token]",[772,784],"[props.authToken, props.match.params.id, props.post]",[3024,3036]]
