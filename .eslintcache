[{"E:\\Projects\\Instagive\\instagive-frontend\\src\\index.jsx":"1","E:\\Projects\\Instagive\\instagive-frontend\\src\\App.jsx":"2","E:\\Projects\\Instagive\\instagive-frontend\\src\\context\\postContext.js":"3","E:\\Projects\\Instagive\\instagive-frontend\\src\\context\\authContext.js":"4","E:\\Projects\\Instagive\\instagive-frontend\\src\\context\\accountList.js":"5","E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\landingPage\\LandingPage.jsx":"6","E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\common\\NotFound.jsx":"7","E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\detailsPage\\DetailsPage.jsx":"8","E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\authPage\\AuthPage.jsx":"9","E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\adminPage\\AdminPage.jsx":"10","E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\common\\Nav.jsx":"11","E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\userPage\\UserPage.jsx":"12","E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\detailsPage\\DetailsPageContent.jsx":"13","E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\landingPage\\Posts.jsx":"14","E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\landingPage\\ShowContent.jsx":"15","E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\authPage\\ForgotPass.jsx":"16","E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\common\\Sidebar.jsx":"17","E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\detailsPage\\DetailsUpdatePage.jsx":"18","E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\adminPage\\AdminRejected.jsx":"19","E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\adminPage\\AdminAccepted.jsx":"20","E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\adminPage\\AdminPending.jsx":"21","E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\adminPage\\AdminLogin.jsx":"22","E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\authPage\\Login.jsx":"23","E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\userPage\\PostList.jsx":"24","E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\authPage\\Register.jsx":"25","E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\userPage\\postDetailPage\\PostCreate.jsx":"26","E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\userPage\\ledgerPage\\LedgerPage.jsx":"27","E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\userPage\\postDetailPage\\UserPostDetails.jsx":"28","E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\common\\PostCard.jsx":"29","E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\others\\cityLocation.js":"30","E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\userPage\\ledgerPage\\LedgerList.jsx":"31","E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\userPage\\postDetailPage\\PostCreateDetails.jsx":"32","E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\userPage\\ledgerPage\\LedgerCreate.jsx":"33","E:\\Projects\\Instagive\\instagive-frontend\\src\\context\\userContext.js":"34","E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\userPage\\changePassPage\\ChangePass.jsx":"35"},{"size":325,"mtime":1614494178598,"results":"36","hashOfConfig":"37"},{"size":3178,"mtime":1614503296806,"results":"38","hashOfConfig":"37"},{"size":134,"mtime":1613804635392,"results":"39","hashOfConfig":"37"},{"size":134,"mtime":1614500017688,"results":"40","hashOfConfig":"37"},{"size":142,"mtime":1613897826978,"results":"41","hashOfConfig":"37"},{"size":281,"mtime":1614258077222,"results":"42","hashOfConfig":"37"},{"size":385,"mtime":1613881503846,"results":"43","hashOfConfig":"37"},{"size":1590,"mtime":1613908545708,"results":"44","hashOfConfig":"37"},{"size":1404,"mtime":1614410051140,"results":"45","hashOfConfig":"37"},{"size":2085,"mtime":1614422305437,"results":"46","hashOfConfig":"37"},{"size":2161,"mtime":1614503664166,"results":"47","hashOfConfig":"37"},{"size":1337,"mtime":1614503598194,"results":"48","hashOfConfig":"37"},{"size":769,"mtime":1613878352763,"results":"49","hashOfConfig":"37"},{"size":919,"mtime":1614261413937,"results":"50","hashOfConfig":"37"},{"size":539,"mtime":1613878785588,"results":"51","hashOfConfig":"37"},{"size":1696,"mtime":1613817960706,"results":"52","hashOfConfig":"37"},{"size":508,"mtime":1613898788296,"results":"53","hashOfConfig":"37"},{"size":4337,"mtime":1613828706040,"results":"54","hashOfConfig":"37"},{"size":1519,"mtime":1614264467200,"results":"55","hashOfConfig":"37"},{"size":3189,"mtime":1614264570478,"results":"56","hashOfConfig":"37"},{"size":3050,"mtime":1614264452418,"results":"57","hashOfConfig":"37"},{"size":1770,"mtime":1614422305436,"results":"58","hashOfConfig":"37"},{"size":2442,"mtime":1614494178588,"results":"59","hashOfConfig":"37"},{"size":837,"mtime":1614502948583,"results":"60","hashOfConfig":"37"},{"size":8809,"mtime":1614494178597,"results":"61","hashOfConfig":"37"},{"size":504,"mtime":1614410271164,"results":"62","hashOfConfig":"37"},{"size":534,"mtime":1614410286837,"results":"63","hashOfConfig":"37"},{"size":5724,"mtime":1614263300366,"results":"64","hashOfConfig":"37"},{"size":1434,"mtime":1614261449513,"results":"65","hashOfConfig":"37"},{"size":427,"mtime":1614091686640,"results":"66","hashOfConfig":"37"},{"size":2814,"mtime":1614501817149,"results":"67","hashOfConfig":"37"},{"size":5232,"mtime":1614409854039,"results":"68","hashOfConfig":"37"},{"size":3730,"mtime":1614503817027,"results":"69","hashOfConfig":"37"},{"size":134,"mtime":1614500937278,"results":"70","hashOfConfig":"37"},{"size":1990,"mtime":1614503753537,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"8qs0pz",{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"74"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"74"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"74"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"74"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"74"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"74"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"74"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"74"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"74"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"74"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"74"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Projects\\Instagive\\instagive-frontend\\src\\index.jsx",[],["154","155"],"E:\\Projects\\Instagive\\instagive-frontend\\src\\App.jsx",["156","157"],"E:\\Projects\\Instagive\\instagive-frontend\\src\\context\\postContext.js",[],"E:\\Projects\\Instagive\\instagive-frontend\\src\\context\\authContext.js",[],"E:\\Projects\\Instagive\\instagive-frontend\\src\\context\\accountList.js",[],"E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\landingPage\\LandingPage.jsx",[],"E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\common\\NotFound.jsx",[],"E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\detailsPage\\DetailsPage.jsx",[],"E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\authPage\\AuthPage.jsx",["158","159","160"],"import React, { useEffect, useState } from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport Login from './Login';\r\nimport Register from './Register';\r\nimport ForgotPass from './ForgotPass';\r\nimport '../../../style/authPage/authPage.css'\r\n\r\nfunction AuthPage(props) {\r\n    const [userAuthID, setUserAuthID] = useState()\r\n\r\n    useEffect(() => {\r\n        // check if there's a user in coockies\r\n        const userAuthID = localStorage.getItem('user')\r\n\r\n        const validateAuthID = async () => {\r\n            // Same logic for user login\r\n            if (userAuthID) props.history.replace('/user')\r\n        }\r\n\r\n        validateAuthID()\r\n    }, [])\r\n\r\n    return (\r\n        <div className='auth-container'>\r\n            <div className='authBackgroundImage'>\r\n            </div>\r\n            <div className='authForm'>\r\n                <div className='center'>\r\n                    <Switch>\r\n                        <Route path='/auth/login' component={Login} />\r\n                        <Route path='/auth/register' component={Register} />\r\n                        <Route path='/auth/forgot' component={ForgotPass} />\r\n                        <Redirect from='/auth' to='/auth/login' exact />\r\n                        <Redirect to='/not-found' />\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AuthPage;","E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\adminPage\\AdminPage.jsx",[],"E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\common\\Nav.jsx",["161"],"E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\userPage\\UserPage.jsx",["162","163"],"E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\detailsPage\\DetailsPageContent.jsx",["164"],"import React from 'react';\r\nimport '../../../style/detailsPage/detailsPageContent.css'\r\nimport banner1 from '../../../img/Landscape-Color.jpg'\r\n\r\nfunction DetailsPageContent(props) {\r\n    if (!props.onSelectedPost) return <div>Loading</div>\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img src={banner1} alt=\"Photo\" className='detailsPageImage' />\r\n            </div>\r\n            {props.children}\r\n            <p className='donationContent'>\r\n                {props.onSelectedPost ? props.onSelectedPost.description : ''}\r\n            </p>\r\n            <div className='donateNowContainer'>\r\n                <button className='donate-button'>Donate Now</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DetailsPageContent;","E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\landingPage\\Posts.jsx",[],"E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\landingPage\\ShowContent.jsx",[],"E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\authPage\\ForgotPass.jsx",["165","166"],"import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport '../../../style/authPage/forgotPassword.css'\r\n\r\nfunction ForgotPass(props) {\r\n    const [email, setEmail] = useState({ email: '' })\r\n    const [showMessage, setShowMessage] = useState(false)\r\n\r\n    const handleSendEmail = () => {\r\n        setShowMessage(true)\r\n    }\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault()\r\n\r\n        // handleSendEmail()\r\n    }\r\n\r\n    return (\r\n        <div className='forgot-pass-container'>\r\n            <div className='forgot-pass-title'>\r\n                <h1 className='authTitle'>Forgot Password</h1>\r\n                <p className='authDetails'>You can change your password for security reasons or reset it if you forget it. Your Google Account password is used to access many Google products, like Gmail and YouTube.</p>\r\n            </div>\r\n            <form action=\"\" className='form-container' onSubmit={handleSubmit}>\r\n                <label htmlFor=\"email\" className='form-label'>Email</label>\r\n                <input type=\"email\" name=\"email\" id=\"email\" className='form-input-text' />\r\n                {showMessage ? <p>We send a request password in your email</p> : ''}\r\n            </form>\r\n            <div style={{ width: '100%' }} className='form-button-container'>\r\n                <div>\r\n                    <Link to=\"/auth/login\" className='form-link'>Login</Link>\r\n                    <Link to=\"/auth/register\" className='form-link'>Signup</Link>\r\n                </div>\r\n                <button className='form-button' onClick={handleSendEmail}>Send</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ForgotPass;","E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\common\\Sidebar.jsx",[],"E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\detailsPage\\DetailsUpdatePage.jsx",["167"],"import React, { useState } from 'react';\r\nimport '../../../style/detailsPage/detailsUpdatePage.css'\r\n\r\nfunction DetailsUpdatePage(props) {\r\n    const [posts, setPosts] = useState([\r\n        {\r\n            id: 1,\r\n            title: 'Update Title',\r\n            date: 'Jan 20, 2020',\r\n            details: \"Nothing to see But a dozen dying roses at our feet Your timing is perfect Ironic to me Showing up the moment that you shouldn't be Last time I checked You're the one that left Last words you said That you couldn't care less It's funny how you miss me more than you could ever love me How you couldn't give me everything and now you want it from me Yeah, it's funny how it's different now that I got somebody Yeah it's funny Ooh Yeah it's funny, funny, funny, how you answer, answer, answer 'Cause his lips seem, lips seem, lips seem, both my hands are on his body Yeah it's funny how it's different now that I got somebody Yeah it's funny Ooh Sending a message Through mutual friends It's like I'm talking to you using them You heard I was happy…\",\r\n            img: ''\r\n        }, {\r\n            id: 2,\r\n            title: 'Update Title',\r\n            date: 'Feb 14, 2020',\r\n            details: \"Nothing to see But a dozen dying roses at our feet Your timing is perfect Ironic to me Showing up the moment that you shouldn't be Last time I checked You're the one that left Last words you said That you couldn't care less It's funny how you miss me more than you could ever love me How you couldn't give me everything and now you want it from me Yeah, it's funny how it's different now that I got somebody Yeah it's funny Ooh Yeah it's funny, funny, funny, how you answer, answer, answer 'Cause his lips seem, lips seem, lips seem, both my hands are on his body Yeah it's funny how it's different now that I got somebody Yeah it's funny Ooh Sending a message Through mutual friends It's like I'm talking to you using them You heard I was happy…\",\r\n            img: ''\r\n        }, {\r\n            id: 3,\r\n            title: 'Update Title',\r\n            date: 'May 17, 2020',\r\n            details: \"Nothing to see But a dozen dying roses at our feet Your timing is perfect Ironic to me Showing up the moment that you shouldn't be Last time I checked You're the one that left Last words you said That you couldn't care less It's funny how you miss me more than you could ever love me How you couldn't give me everything and now you want it from me Yeah, it's funny how it's different now that I got somebody Yeah it's funny Ooh Yeah it's funny, funny, funny, how you answer, answer, answer 'Cause his lips seem, lips seem, lips seem, both my hands are on his body Yeah it's funny how it's different now that I got somebody Yeah it's funny Ooh Sending a message Through mutual friends It's like I'm talking to you using them You heard I was happy…\",\r\n            img: ''\r\n        }, {\r\n            id: 4,\r\n            title: 'Update Title',\r\n            date: 'Nov 26, 2020',\r\n            details: \"Nothing to see But a dozen dying roses at our feet Your timing is perfect Ironic to me Showing up the moment that you shouldn't be Last time I checked You're the one that left Last words you said That you couldn't care less It's funny how you miss me more than you could ever love me How you couldn't give me everything and now you want it from me Yeah, it's funny how it's different now that I got somebody Yeah it's funny Ooh Yeah it's funny, funny, funny, how you answer, answer, answer 'Cause his lips seem, lips seem, lips seem, both my hands are on his body Yeah it's funny how it's different now that I got somebody Yeah it's funny Ooh Sending a message Through mutual friends It's like I'm talking to you using them You heard I was happy…\",\r\n            img: ''\r\n        }\r\n    ])\r\n\r\n    return (\r\n        <div>\r\n            {props.children}\r\n            <div className=\"update-container\">\r\n                {posts.map(post =>\r\n                    <div key={post.id}>\r\n                        <h3 className='update-title'>{post.title} - {post.date}</h3>\r\n                        <p className='update-details'>{post.details}</p>\r\n                        <img src={post.img} alt=\"carousel\" />\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DetailsUpdatePage;","E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\adminPage\\AdminRejected.jsx",[],"E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\adminPage\\AdminAccepted.jsx",[],"E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\adminPage\\AdminPending.jsx",["168"],"import React, { useContext, useEffect } from 'react';\r\nimport axios from 'axios'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCheck, faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport AccountList from './../../../context/accountList';\r\n\r\nfunction AdminPending(props) {\r\n    let accountList = useContext(AccountList)\r\n    let data = accountList.pending ? accountList.pending : [];\r\n\r\n    const theadData = [\r\n        {\r\n            label: 'Organization',\r\n            name: 'orgName'\r\n        },\r\n        {\r\n            label: 'Email',\r\n            name: 'email'\r\n        },\r\n        {\r\n            label: 'City',\r\n            name: 'city'\r\n        },\r\n        {\r\n            label: 'Rep. Name',\r\n            name: 'repName'\r\n        },\r\n    ]\r\n\r\n    const handleApproveAccount = async (account) => {\r\n        await axios.post(`http://localhost:5000/admin/changestatus/${account}/approved`)\r\n            .then(() => accountList = [])\r\n\r\n        window.location.reload();\r\n    };\r\n\r\n    const handleRejectAccount = async (account) => {\r\n        await axios.post(`http://localhost:5000/admin/changestatus/${account}/rejected`)\r\n            .then(() => accountList = [])\r\n\r\n        window.location.reload();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1 className='admin-page-title'>Pending</h1>\r\n            <table className='table-container'>\r\n                <thead>\r\n                    <tr>\r\n                        {theadData.map(tableHead =>\r\n                            <th key={tableHead.name} className='table-header'>{tableHead.label}</th>\r\n                        )}\r\n                        <th>Status</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {data.map(account =>\r\n                        <tr key={account.id}>\r\n                            {theadData.map(tableHead =>\r\n                                <td key={tableHead.name} className='table-item'>\r\n                                    {account[tableHead.name]}\r\n                                </td>\r\n                            )}\r\n                            <td className='table-item' id='table-button-container'>\r\n                                <FontAwesomeIcon\r\n                                    icon={faCheck}\r\n                                    className='table-icon'\r\n                                    size='lg'\r\n                                    onClick={() => handleApproveAccount(account._id)}\r\n                                />\r\n                                <FontAwesomeIcon\r\n                                    icon={faTimes}\r\n                                    className='table-icon'\r\n                                    size='lg'\r\n                                    onClick={() => handleRejectAccount(account._id)}\r\n                                />\r\n                            </td>\r\n                        </tr>\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AdminPending;","E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\adminPage\\AdminLogin.jsx",["169"],"import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios'\r\nfunction AdminLogin(props) {\r\n    const [auth, setAuth] = useState({ username: '', password: '' })\r\n\r\n    const handleSubmit = async event => {\r\n        event.preventDefault()\r\n\r\n        const valid = await axios.post('http://localhost:5000/admin/login', auth);\r\n      \r\n        if (valid.data.valid !== true) \r\n            window.alert(valid.data.valid);\r\n    \r\n        else{\r\n\r\n\r\n            console.log(valid.data.token);\r\n      localStorage.setItem('admin', valid.data.token)\r\n      window.location.reload();\r\n\r\n      window.alert('Login Success');\r\n\r\n        }\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n    }\r\n\r\n    return (\r\n        <div className='LoginContainer'>\r\n            <div>\r\n                <h1 className='authTitle'>Admin Login</h1>\r\n            </div>\r\n            <form action=\"#\" className='form-container' onSubmit={handleSubmit}>\r\n                <label htmlFor=\"username\" className='form-label'>Username</label>\r\n                <input type=\"text\" name=\"username\" id=\"username\" placeholder='Username' className='form-input-text' value={auth.username} onChange={e => setAuth({ ...auth, username: e.target.value })} />\r\n                <label htmlFor=\"password\" className='form-label'>Password</label>\r\n                <input type=\"password\" name=\"password\" id=\"password\" placeholder='Password' className='form-input-text' value={auth.password} onChange={e => setAuth({ ...auth, password: e.target.value })} />\r\n                <div style={{ width: '100%' }}>\r\n                    <button className='form-button' style={{ width: '100%' }}>Login</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AdminLogin;","E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\authPage\\Login.jsx",["170"],"import axios from 'axios';\r\nimport React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../../../style/authPage/login.css';\r\n\r\nfunction Login(props) {\r\n  const [auth, setAuth] = useState({ username: '', password: '' });\r\n\r\n  const [error, setError] = useState(false);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const valid = await axios.post('http://localhost:5000/user/login', auth);\r\n\r\n    if (valid.data.valid !== true) {\r\n      window.alert(valid.data.valid);\r\n    } else {\r\n      // Set Item\r\n      console.log(valid.data.token);\r\n      localStorage.setItem('user', valid.data.token)\r\n      window.location.reload();\r\n\r\n      window.alert('Login Success');\r\n    }\r\n\r\n    // If there is error in auth, set the error to TRUE\r\n  };\r\n\r\n  return (\r\n    <div className='LoginContainer'>\r\n      {/* Show this if the error is true */}\r\n      {error && <div>Error</div>}\r\n\r\n      <div>\r\n        <h1 className='authTitle'>Welcome!</h1>\r\n      </div>\r\n      <form action='#' className='form-container' onSubmit={handleSubmit}>\r\n        <label htmlFor='username' className='form-label'>\r\n          Username\r\n        </label>\r\n        <input\r\n          type='text'\r\n          name='username'\r\n          id='username'\r\n          placeholder='Username'\r\n          className='form-input-text'\r\n          required\r\n          value={auth.username}\r\n          onChange={(e) => setAuth({ ...auth, username: e.target.value })}\r\n        />\r\n        <label htmlFor='password' className='form-label'>\r\n          Password\r\n        </label>\r\n        <input\r\n          type='password'\r\n          name='password'\r\n          id='password'\r\n          placeholder='Password'\r\n          className='form-input-text'\r\n          required\r\n          value={auth.password}\r\n          onChange={(e) => setAuth({ ...auth, password: e.target.value })}\r\n        />\r\n        <div style={{ width: '100%' }}>\r\n          <Link to='/auth/forgot' className='form-link'>\r\n            Forgot Password\r\n          </Link>\r\n          <div className='form-button-container'>\r\n            <button className='form-button'>Login</button>\r\n            <button\r\n              className='form-button'\r\n              onClick={() => props.history.push('/auth/register')}\r\n            >\r\n              Sign up\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\userPage\\PostList.jsx",[],"E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\authPage\\Register.jsx",["171"],"import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport '../../../style/authPage/register.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Register(props) {\r\n  const [checkPassword, setCheckPassword] = useState({ confirm_pass: '' });\r\n  const [userForm, setUserForm] = useState({\r\n    email: '',\r\n    password: '',\r\n    city: '',\r\n    orgName: '',\r\n    orgAddress: '',\r\n\r\n    orgNumber: '',\r\n    repName: '',\r\n\r\n    orgDescriptions: '',\r\n  });\r\n\r\n  const [files, setFiles] = useState({\r\n    orgPhoto: '',\r\n    orgDocuments: '',\r\n    repId: '',\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    console.log(event.target.value);\r\n\r\n    setUserForm({\r\n      ...userForm,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handlerepId = (file) => {\r\n    setFiles({ ...files, repId: file });\r\n  };\r\n\r\n  const handleorgPhoto = (file) => {\r\n    setFiles({ ...files, orgPhoto: file });\r\n  };\r\n\r\n  const handleorgDocuments = (multifiles) => {\r\n    setFiles({ ...files, orgDocuments: multifiles });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const formdata = new FormData();\r\n\r\n    formdata.append('repId', files.repId);\r\n    formdata.append('orgPhoto', files.orgPhoto);\r\n\r\n    for (const key in files.orgDocuments) {\r\n      formdata.append('orgDocuments', files.orgDocuments[key]);\r\n    }\r\n\r\n    formdata.append('email', userForm.email);\r\n    formdata.append('city', userForm.city);\r\n    formdata.append('password', userForm.password);\r\n\r\n    formdata.append('orgName', userForm.orgName);\r\n    formdata.append('orgAddress', userForm.orgAddress);\r\n    formdata.append('orgNumber', userForm.orgNumber);\r\n    formdata.append('repName', userForm.repName);\r\n    formdata.append('orgDescriptions', userForm.orgDescriptions);\r\n\r\n   const data =   await axios.post('http://localhost:5000/user/register', formdata);\r\n   console.log(data)\r\n\r\n    setUserForm({\r\n        email: '',\r\n        password: '',\r\n        city: '',\r\n        orgName: '',\r\n        orgAddress: '',\r\n        orgPhoto: '',\r\n        orgNumber: '',\r\n        repName: '',\r\n        repId: '',\r\n        orgDocuments: [],\r\n        orgDescriptions: ''\r\n    })\r\n\r\n    setFiles({\r\n      orgPhoto: '',\r\n    orgDocuments: '',\r\n    repId: '',\r\n    })\r\n\r\n\r\n    document.getElementById('repId').value=   null;\r\n    document.getElementById('orgDocuments').value=   null;\r\n    document.getElementById('orgPhoto').value=   null;\r\n\r\n\r\n\r\n\r\n  };\r\n\r\n  return (\r\n    <div className='register-container'>\r\n      <div>\r\n        <h1 className='authTitle'>Account Details</h1>\r\n      </div>\r\n      <form encType='multipart/form-data' action='' onSubmit={handleSubmit}>\r\n        <div className='register-form1'>\r\n          <div className='register-input-container1'>\r\n            <label className='form-label' htmlFor='email'>\r\n              Email\r\n            </label>\r\n            <input\r\n              type='text'\r\n              name='email'\r\n              id='email'\r\n              value={userForm.email}\r\n              placeholder='Email'\r\n              className='register-form-input-text'\r\n              onChange={handleChange}\r\n            />\r\n            <label className='form-label' htmlFor='password'>\r\n              Password\r\n            </label>\r\n            <input\r\n              type='text'\r\n              name='password'\r\n              id='password'\r\n              value={userForm.password}\r\n              placeholder='Password'\r\n              className='register-form-input-text'\r\n              onChange={handleChange}\r\n            />\r\n            <label className='form-label' htmlFor='confirm-pass'>\r\n              Confirm Password\r\n            </label>\r\n            <input\r\n              type='text'\r\n              name='confirm-pass'\r\n              id='confirm-pass'\r\n              placeholder='confirm Password'\r\n              className='register-form-input-text'\r\n              onChange={(e) => setCheckPassword(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className='register-form2'>\r\n          <div className='register-input-container2'>\r\n            <label className='form-label' htmlFor='orgName'>\r\n              Organization Name\r\n            </label>\r\n            <input\r\n              type='text'\r\n              name='orgName'\r\n              value={userForm.orgName}\r\n              onChange={handleChange}\r\n              id='orgName'\r\n              placeholder='Organization Name'\r\n              className='register-form-input-text'\r\n            />\r\n          </div>\r\n          <div className='register-input-container2'>\r\n            <label className='form-label' htmlFor='orgNumber'>\r\n              Organization No.\r\n            </label>\r\n            <input\r\n              type='text'\r\n              name='orgNumber'\r\n              value={userForm.orgNumber}\r\n              onChange={handleChange}\r\n              id='orgNumber'\r\n              placeholder='Organization No.'\r\n              className='register-form-input-text'\r\n            />\r\n          </div>\r\n          <div className='register-input-container2'>\r\n            <label className='form-label' htmlFor='city'>\r\n              City\r\n            </label>\r\n            <input\r\n              type='text'\r\n              name='city'\r\n              value={userForm.city}\r\n              onChange={handleChange}\r\n              id='city'\r\n              placeholder='City'\r\n              className='register-form-input-text'\r\n            />\r\n          </div>\r\n          <div className='register-input-container2'>\r\n            <label className='form-label' htmlFor='orgAddress'>\r\n              Organization Address\r\n            </label>\r\n            <input\r\n              type='text'\r\n              name='orgAddress'\r\n              value={userForm.orgAddress}\r\n              onChange={handleChange}\r\n              id='orgAddress'\r\n              placeholder='Organization Address'\r\n              className='register-form-input-text'\r\n            />\r\n          </div>\r\n          <div className='register-input-container2'>\r\n            <label className='form-label' htmlFor='repName'>\r\n              Representative Name\r\n            </label>\r\n            <input\r\n              type='text'\r\n              name='repName'\r\n              value={userForm.repName}\r\n              onChange={handleChange}\r\n              id='repName'\r\n              placeholder='Representative Name'\r\n              className='register-form-input-text'\r\n            />\r\n          </div>\r\n\r\n          <div className='register-input-container2'>\r\n            <label className='form-label' htmlFor='repId'>\r\n              Representative ID\r\n            </label>\r\n            <input\r\n              type='file'\r\n              id='repId'\r\n              name='repId'\r\n              onChange={(e) => {\r\n                const file = e.target.files[0];\r\n                handlerepId(file);\r\n              }}\r\n              className='form-input-file'\r\n            ></input>\r\n          </div>\r\n\r\n          <div className='register-input-container2'>\r\n            <label className='form-label' htmlFor='orgDocuments'>\r\n              Organization Documents\r\n            </label>\r\n            <input\r\n              type='file'\r\n              id='orgDocuments'\r\n              name='orgDocuments'\r\n              onChange={(e) => {\r\n                const multifiles = e.target.files;\r\n                handleorgDocuments(multifiles);\r\n              }}\r\n              multiple\r\n              className='form-input-file'\r\n            ></input>\r\n          </div>\r\n          <div className='register-input-container2'>\r\n            <label className='org-photo' htmlFor='orgPhoto'>\r\n              Organization Photo\r\n            </label>\r\n            <input\r\n              type='file'\r\n              id='orgPhoto'\r\n              name='orgPhoto'\r\n              onChange={(e) => {\r\n                const file = e.target.files[0];\r\n                handleorgPhoto(file);\r\n              }}\r\n              className='form-input-file'\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className='register-org-description-container'>\r\n          <label className='org-photo' htmlFor='orgDescriptions'>\r\n            Organization Description\r\n          </label>\r\n          <textarea\r\n            name='orgDescriptions'\r\n            value={userForm.orgDescriptions}\r\n            onChange={handleChange}\r\n            id='orgDescriptions'\r\n            className='register-form-input-text'\r\n          ></textarea>\r\n        </div>\r\n        <div className='form-button-container'>\r\n          <Link to='/auth/login' className='form-link'>\r\n            Cancel\r\n          </Link>\r\n          <button className='form-button'>Send Registration</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\userPage\\postDetailPage\\PostCreate.jsx",[],"E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\userPage\\ledgerPage\\LedgerPage.jsx",[],"E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\userPage\\postDetailPage\\UserPostDetails.jsx",["172","173","174","175","176","177","178","179"],"import React, { useState } from 'react';\r\nimport axios from 'axios'\r\nimport { cityLocation } from '../../../others/cityLocation'\r\n\r\nfunction UserPostDetails(props) {\r\n    const [editPost, setEditPost] = useState(false)\r\n    const [postForm, setPostForm] = useState({\r\n        Title: '',\r\n        description: '',\r\n        location: '',\r\n        donationType: ''\r\n    })\r\n    const [files, setFiles] = useState({\r\n        postImg: '',\r\n        profilePic: '',\r\n    });\r\n\r\n    const handleSubmit = () => {\r\n        // axios for handling postForm\r\n        // axios.post('', postForm)\r\n        // axios for handling files\r\n        // axios.post('', files)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Post Details</h1>\r\n            {!editPost ? <button onClick={() => setEditPost(true)}>Edit</button> : ''}\r\n            <form className='post-container'>\r\n                <div className=\"post-create-container\">\r\n                    <label className='form-label' htmlFor='post-profile-pic'>\r\n                        Cover Photo\r\n                    </label>\r\n                    <img src=\"\" alt=\"Profile Photo Here\" />\r\n\r\n                    <label htmlFor=\"title\">Title:</label>\r\n                    {!editPost ?\r\n                        <p></p> :\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"title\"\r\n                            id=\"title\"\r\n                            value={postForm.Title}\r\n                            onChange={e => setPostForm({ ...postForm, Title: e.target.value })}\r\n                        />\r\n                    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    <div>\r\n                        <div>\r\n                            <label htmlFor=\"title\">Location</label>\r\n                            {!editPost ?\r\n                                <p></p> :\r\n                                <select\r\n                                    name=\"city\"\r\n                                    id=\"city\"\r\n                                    value={postForm.location}\r\n                                    onChange={e =>\r\n                                        setPostForm({ ...postForm, location: e.target.value })}\r\n                                >\r\n                                    {cityLocation.map(city =>\r\n                                        <option value={city} key={city}>\r\n                                            {city}\r\n                                        </option>\r\n                                    )}\r\n                                </select>\r\n                            }\r\n\r\n\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"\">Donation Type:</label>\r\n                            {!editPost ?\r\n                                <p></p> :\r\n                                <div>\r\n                                    <input type=\"radio\"\r\n                                        id=\"post-radio-cash\"\r\n                                        name=\"donation-type\"\r\n                                        value=\"cash\"\r\n                                        onClick={e => setPostForm({ ...postForm, donationType: e.target.value })}\r\n                                    />\r\n                                    <label htmlFor=\"post-radio-cash\">Cash</label>\r\n                                    <input type=\"radio\"\r\n                                        id=\"post-radio-in-kind\"\r\n                                        name=\"donation-type\"\r\n                                        value=\"in-kind\"\r\n                                        onClick={e => setPostForm({ ...postForm, donationType: e.target.value })}\r\n                                    />\r\n                                    <label htmlFor=\"post-radio-in-kind\">In-kind</label>\r\n                                    <input type=\"radio\"\r\n                                        id=\"post-radio-both\"\r\n                                        name=\"donation-type\"\r\n                                        value=\"both\"\r\n                                        onClick={e => setPostForm({ ...postForm, donationType: e.target.value })}\r\n                                    />\r\n                                    <label htmlFor=\"post-radio-both\">Both</label>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <label htmlFor=\"details\">Details:</label>\r\n                    {!editPost ?\r\n                        <p></p> :\r\n                        <textarea\r\n                            name='postDetails'\r\n                            value={postForm.postDetails}\r\n                            onChange={e => setPostForm({ ...postForm, postDetails: e.target.value })}\r\n                            id='postDetails'\r\n                            className=''\r\n                        ></textarea>\r\n                    }\r\n                    <label className='form-label' htmlFor='postImages'>\r\n                        Images:\r\n                    </label>\r\n\r\n                    <img src=\"\" alt=\"Image 1\" />\r\n                    <img src=\"\" alt=\"Image 2\" />\r\n                    <img src=\"\" alt=\"Image 3\" />\r\n\r\n                    {editPost ?\r\n                        <div>\r\n                            <button onClick={() => setEditPost(false)}>Cancel</button>\r\n                            <button>Save</button>\r\n                        </div> : ''\r\n                    }\r\n                </div>\r\n            </form>\r\n            {!editPost ?\r\n                <div>\r\n                    <button>View Post List</button>\r\n                </div> : ''\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserPostDetails;","E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\common\\PostCard.jsx",["180"],"\r\nimport React from 'react';\r\nimport '../../style/common/postCard.css';\r\n\r\nfunction PostCard(props) {\r\n    const postList = props.postList\r\n    return (\r\n        <div className='postCardContainer'>\r\n            {postList.map((post) => (\r\n                <div className='postCard' key={post.id}>\r\n                    <div className=\"category\">{post.location}</div>\r\n                    <img src={post.imageList[0]} alt='Photo' width='100%' />\r\n                    <h3 style={{ paddingLeft: 5 }}>\r\n                        {post.Title.substring(0, 29)}\r\n                        {post.Title.length > 29 ? '...' : ''}\r\n                    </h3>\r\n                    <p style={{ paddingLeft: 10, paddingRight: 10 }}>\r\n                        {post.description.length > 100\r\n                            ? `${post.description.substring(0, 100)}...`\r\n                            : post.description.substring(0, 100)}\r\n                    </p>\r\n                    <div className='buttonContainer'>\r\n                        <button\r\n                            className='details-button'\r\n                            style={{ borderRadius: 7 }}\r\n                            onClick={() => props.history.push(`/details/${post.id}`)}\r\n                        >\r\n                            Details\r\n            </button>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PostCard;\r\n","E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\others\\cityLocation.js",[],"E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\userPage\\ledgerPage\\LedgerList.jsx",["181"],"import React, { useContext } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport UserLedger from '../../../../context/userContext';\r\n\r\nfunction LedgerList(props) {\r\n    const userLedger = useContext(UserLedger)\r\n    return (\r\n        <div>\r\n            <div>\r\n                <input type=\"text\" />\r\n            </div>\r\n            <div>\r\n                <FontAwesomeIcon\r\n                    icon={faPlusCircle}\r\n                    className='deleteButton'\r\n                    size='lg'\r\n                    onClick={() => props.history.push('/user/ledger/create')}\r\n                />\r\n            </div>\r\n            <div style={{ overflowX: 'auto' }}>\r\n                <table>\r\n                    <tr>\r\n                        <th>Post</th>\r\n                        <th>Name</th>\r\n                        <th>Email(optional)</th>\r\n                        <th>Donation Type</th>\r\n                        <th>Payment Method(if money donation)</th>\r\n                        <th>Amoung/Item</th>\r\n                        <th>Remarks</th>\r\n                        <th>Date</th>\r\n                        <th></th>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Jill</td>\r\n                        <td>Smith</td>\r\n                        <td>Jill</td>\r\n                        <td>Smith</td>\r\n                        <td>Jill</td>\r\n                        <td>Smith</td>\r\n                        <td>Jill</td>\r\n                        <td>Smith</td>\r\n                        <td>\r\n                            <button>Delete</button>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Eve</td>\r\n                        <td>Jackson</td>\r\n                        <td>Eve</td>\r\n                        <td>Jackson</td>\r\n                        <td>Eve</td>\r\n                        <td>Jackson</td>\r\n                        <td>Eve</td>\r\n                        <td>Jackson</td>\r\n                        <td>\r\n                            <button>Delete</button>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Adam</td>\r\n                        <td>Johnson</td>\r\n                        <td>Adam</td>\r\n                        <td>Johnson</td>\r\n                        <td>Adam</td>\r\n                        <td>Johnson</td>\r\n                        <td>Adam</td>\r\n                        <td>Johnson</td>\r\n                        <td>\r\n                            <button>Delete</button>\r\n                        </td>\r\n                    </tr>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LedgerList;","E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\userPage\\postDetailPage\\PostCreateDetails.jsx",[],"E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\userPage\\ledgerPage\\LedgerCreate.jsx",[],"E:\\Projects\\Instagive\\instagive-frontend\\src\\context\\userContext.js",[],"E:\\Projects\\Instagive\\instagive-frontend\\src\\components\\pages\\userPage\\changePassPage\\ChangePass.jsx",[],{"ruleId":"182","replacedBy":"183"},{"ruleId":"184","replacedBy":"185"},{"ruleId":"186","severity":1,"message":"187","line":20,"column":16,"nodeType":"188","messageId":"189","endLine":20,"endColumn":23},{"ruleId":"190","severity":1,"message":"191","line":68,"column":6,"nodeType":"192","endLine":68,"endColumn":8,"suggestions":"193"},{"ruleId":"186","severity":1,"message":"194","line":9,"column":12,"nodeType":"188","messageId":"189","endLine":9,"endColumn":22},{"ruleId":"186","severity":1,"message":"195","line":9,"column":24,"nodeType":"188","messageId":"189","endLine":9,"endColumn":37},{"ruleId":"190","severity":1,"message":"196","line":21,"column":8,"nodeType":"192","endLine":21,"endColumn":10,"suggestions":"197"},{"ruleId":"190","severity":1,"message":"198","line":9,"column":5,"nodeType":"188","endLine":9,"endColumn":14,"suggestions":"199"},{"ruleId":"186","severity":1,"message":"200","line":12,"column":12,"nodeType":"188","messageId":"189","endLine":12,"endColumn":21},{"ruleId":"190","severity":1,"message":"201","line":17,"column":8,"nodeType":"192","endLine":17,"endColumn":10,"suggestions":"202"},{"ruleId":"203","severity":1,"message":"204","line":11,"column":17,"nodeType":"205","endLine":11,"endColumn":79},{"ruleId":"186","severity":1,"message":"206","line":6,"column":12,"nodeType":"188","messageId":"189","endLine":6,"endColumn":17},{"ruleId":"186","severity":1,"message":"207","line":6,"column":19,"nodeType":"188","messageId":"189","endLine":6,"endColumn":27},{"ruleId":"186","severity":1,"message":"208","line":5,"column":19,"nodeType":"188","messageId":"189","endLine":5,"endColumn":27},{"ruleId":"186","severity":1,"message":"209","line":1,"column":29,"nodeType":"188","messageId":"189","endLine":1,"endColumn":38},{"ruleId":"186","severity":1,"message":"210","line":2,"column":10,"nodeType":"188","messageId":"189","endLine":2,"endColumn":14},{"ruleId":"186","severity":1,"message":"211","line":9,"column":17,"nodeType":"188","messageId":"189","endLine":9,"endColumn":25},{"ruleId":"186","severity":1,"message":"212","line":7,"column":10,"nodeType":"188","messageId":"189","endLine":7,"endColumn":23},{"ruleId":"186","severity":1,"message":"213","line":2,"column":8,"nodeType":"188","messageId":"189","endLine":2,"endColumn":13},{"ruleId":"186","severity":1,"message":"214","line":13,"column":12,"nodeType":"188","messageId":"189","endLine":13,"endColumn":17},{"ruleId":"186","severity":1,"message":"215","line":13,"column":19,"nodeType":"188","messageId":"189","endLine":13,"endColumn":27},{"ruleId":"186","severity":1,"message":"216","line":18,"column":11,"nodeType":"188","messageId":"189","endLine":18,"endColumn":23},{"ruleId":"203","severity":1,"message":"204","line":34,"column":21,"nodeType":"205","endLine":34,"endColumn":60},{"ruleId":"203","severity":1,"message":"204","line":120,"column":21,"nodeType":"205","endLine":120,"endColumn":49},{"ruleId":"203","severity":1,"message":"204","line":121,"column":21,"nodeType":"205","endLine":121,"endColumn":49},{"ruleId":"203","severity":1,"message":"204","line":122,"column":21,"nodeType":"205","endLine":122,"endColumn":49},{"ruleId":"203","severity":1,"message":"204","line":12,"column":21,"nodeType":"205","endLine":12,"endColumn":77},{"ruleId":"186","severity":1,"message":"217","line":7,"column":11,"nodeType":"188","messageId":"189","endLine":7,"endColumn":21},"no-native-reassign",["218"],"no-negated-in-lhs",["219"],"no-unused-vars","'setPost' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array. You can also do a functional update 'setUser(u => ...)' if you only need 'user' in the 'setUser' call.","ArrayExpression",["220"],"'userAuthID' is assigned a value but never used.","'setUserAuthID' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["221"],"React Hook useEffect contains a call to 'setUserAuth'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["222"],"'userToken' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.history' and 'token'. Either include them or remove the dependency array.",["223"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'setPosts' is assigned a value but never used.","'useEffect' is defined but never used.","'Link' is defined but never used.","'setError' is assigned a value but never used.","'checkPassword' is assigned a value but never used.","'axios' is defined but never used.","'files' is assigned a value but never used.","'setFiles' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'userLedger' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"224","fix":"225"},{"desc":"226","fix":"227"},{"desc":"228","fix":"229"},{"desc":"230","fix":"231"},"Update the dependencies array to be: [user]",{"range":"232","text":"233"},"Update the dependencies array to be: [props.history]",{"range":"234","text":"235"},"Add dependencies array: []",{"range":"236","text":"237"},"Update the dependencies array to be: [props.history, token]",{"range":"238","text":"239"},[2252,2254],"[user]",[674,676],"[props.history]",[487,487],", []",[713,715],"[props.history, token]"]