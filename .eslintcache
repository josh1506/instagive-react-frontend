[{"E:\\Projects\\Instagive\\instagive-react-frontend\\src\\index.jsx":"1","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\App.jsx":"2","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\common\\Nav.jsx":"3","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\landingPage\\LandingPage.jsx":"4","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\detailsPage\\DetailsPage.jsx":"5","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\adminPage\\AdminPage.jsx":"6","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\common\\NotFound.jsx":"7","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\authPage\\AuthPage.jsx":"8","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\userPage\\UserPage.jsx":"9","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\landingPage\\Posts.jsx":"10","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\detailsPage\\DetailsUpdatePage.jsx":"11","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\landingPage\\ShowContent.jsx":"12","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\detailsPage\\DetailsPageContent.jsx":"13","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\adminPage\\AdminLogin.jsx":"14","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\adminPage\\AdminRejected.jsx":"15","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\common\\Sidebar.jsx":"16","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\adminPage\\AdminAccepted.jsx":"17","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\adminPage\\AdminPending.jsx":"18","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\authPage\\Login.jsx":"19","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\authPage\\Register.jsx":"20","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\authPage\\ForgotPass.jsx":"21","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\userPage\\PostList.jsx":"22","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\userPage\\ledgerPage\\LedgerPage.jsx":"23","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\userPage\\postDetailPage\\UserPostDetails.jsx":"24","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\userPage\\postDetailPage\\PostCreate.jsx":"25","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\userPage\\changePassPage\\ChangePass.jsx":"26","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\userPage\\postUpdatePage\\UpdateUserPost.jsx":"27","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\others\\cityLocation.js":"28","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\common\\PostCard.jsx":"29","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\userPage\\ledgerPage\\LedgerCreate.jsx":"30","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\userPage\\ledgerPage\\LedgerList.jsx":"31","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\userPage\\postDetailPage\\PostCreateDetails.jsx":"32","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\userPage\\postUpdatePage\\PostCreateUpdate.jsx":"33","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\userPage\\postUpdatePage\\PostDetailUpdate.jsx":"34","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\app\\configStore.js":"35","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\app\\reducer.js":"36","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\app\\auth.js":"37","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\route\\instagive.js":"38","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\app\\postList.js":"39","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\app\\accounts.js":"40","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\app\\user.js":"41"},{"size":471,"mtime":1614839696836,"results":"42","hashOfConfig":"43"},{"size":1921,"mtime":1614851497002,"results":"44","hashOfConfig":"43"},{"size":2097,"mtime":1614841752972,"results":"45","hashOfConfig":"43"},{"size":281,"mtime":1614778460440,"results":"46","hashOfConfig":"43"},{"size":1655,"mtime":1614858422413,"results":"47","hashOfConfig":"43"},{"size":2085,"mtime":1614847888822,"results":"48","hashOfConfig":"43"},{"size":385,"mtime":1614778460432,"results":"49","hashOfConfig":"43"},{"size":1404,"mtime":1614778460437,"results":"50","hashOfConfig":"43"},{"size":1677,"mtime":1614861505390,"results":"51","hashOfConfig":"43"},{"size":975,"mtime":1614846346679,"results":"52","hashOfConfig":"43"},{"size":1722,"mtime":1614778460440,"results":"53","hashOfConfig":"43"},{"size":539,"mtime":1614778460441,"results":"54","hashOfConfig":"43"},{"size":1184,"mtime":1614778460439,"results":"55","hashOfConfig":"43"},{"size":1770,"mtime":1614778460436,"results":"56","hashOfConfig":"43"},{"size":1526,"mtime":1614857962798,"results":"57","hashOfConfig":"43"},{"size":508,"mtime":1614778460432,"results":"58","hashOfConfig":"43"},{"size":3046,"mtime":1614850415956,"results":"59","hashOfConfig":"43"},{"size":3056,"mtime":1614857926393,"results":"60","hashOfConfig":"43"},{"size":2575,"mtime":1614841872512,"results":"61","hashOfConfig":"43"},{"size":8788,"mtime":1614778460438,"results":"62","hashOfConfig":"43"},{"size":2462,"mtime":1614778460438,"results":"63","hashOfConfig":"43"},{"size":1758,"mtime":1614861497449,"results":"64","hashOfConfig":"43"},{"size":534,"mtime":1614778460445,"results":"65","hashOfConfig":"43"},{"size":5724,"mtime":1614778460446,"results":"66","hashOfConfig":"43"},{"size":504,"mtime":1614778460445,"results":"67","hashOfConfig":"43"},{"size":2598,"mtime":1614778460444,"results":"68","hashOfConfig":"43"},{"size":544,"mtime":1614778460447,"results":"69","hashOfConfig":"43"},{"size":418,"mtime":1614778460434,"results":"70","hashOfConfig":"43"},{"size":1596,"mtime":1614778460432,"results":"71","hashOfConfig":"43"},{"size":4469,"mtime":1614857381835,"results":"72","hashOfConfig":"43"},{"size":1638,"mtime":1614858226189,"results":"73","hashOfConfig":"43"},{"size":5971,"mtime":1614778460446,"results":"74","hashOfConfig":"43"},{"size":455,"mtime":1614778460447,"results":"75","hashOfConfig":"43"},{"size":301,"mtime":1614778460447,"results":"76","hashOfConfig":"43"},{"size":181,"mtime":1614839605198,"results":"77","hashOfConfig":"43"},{"size":252,"mtime":1614851651702,"results":"78","hashOfConfig":"43"},{"size":950,"mtime":1614839958094,"results":"79","hashOfConfig":"43"},{"size":100,"mtime":1614840163525,"results":"80","hashOfConfig":"43"},{"size":1315,"mtime":1614846055760,"results":"81","hashOfConfig":"43"},{"size":1819,"mtime":1614850389528,"results":"82","hashOfConfig":"43"},{"size":2140,"mtime":1614862372949,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"1b622li",{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"86"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"86"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"86"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"86"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"86"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"86"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"86"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"86"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"86"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"86"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"86"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"86"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"86"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"86"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"86"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"86"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"86"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"86"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\Projects\\Instagive\\instagive-react-frontend\\src\\index.jsx",[],["185","186"],"E:\\Projects\\Instagive\\instagive-react-frontend\\src\\App.jsx",["187","188"],"import React, { useEffect, useState } from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux'\r\n\r\nimport { postListFeched } from './app/postList'\r\nimport { accountFetched } from './app/accounts'\r\nimport { authAdd } from './app/auth'\r\nimport Nav from './components/common/Nav';\r\nimport LandingPage from './components/pages/landingPage/LandingPage';\r\nimport DetailsPage from './components/pages/detailsPage/DetailsPage';\r\nimport AuthPage from './components/pages/authPage/AuthPage';\r\nimport UserPage from './components/pages/userPage/UserPage';\r\nimport AdminPage from './components/pages/adminPage/AdminPage';\r\nimport NotFound from './components/common/NotFound';\r\nimport './App.css';\r\n\r\n\r\nfunction App(props) {\r\n\r\n  useEffect(() => {\r\n    const getAllData = async () => {\r\n      props.accountFetched()\r\n      props.postListFeched()\r\n    };\r\n\r\n    const validateAuthID = async () => {\r\n      // Validating if token is valid\r\n      // await axios.post('/checkusertoken', token)\r\n\r\n      props.authAdd(token, type)\r\n    }\r\n\r\n    // check if there's a user in local storage\r\n    const token = localStorage.getItem('user')\r\n    const type = localStorage.key(token)\r\n\r\n    validateAuthID()\r\n    getAllData();\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <div className='App'>\r\n      <Nav />\r\n      <Switch>\r\n        <Route path='/details/:id' component={DetailsPage} />\r\n        <Route path='/auth' component={AuthPage} />\r\n        <Route path='/user' component={UserPage} />\r\n        <Route path='/not-found' component={NotFound} />\r\n        <Route path='/admin' component={AdminPage} />\r\n        <Route path='/' exact component={LandingPage} />\r\n        <Redirect to='/not-found' />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return { state }\r\n}\r\n\r\nexport default connect(mapStateToProps,\r\n  { authAdd, postListFeched, accountFetched })(App);\r\n","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\common\\Nav.jsx",["189","190"],"import React, { useEffect, useState } from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux'\r\n\r\nimport { authRemove } from '../../app/auth'\r\nimport logo from '../../img/Instagive-logo-2.png'\r\nimport '../../style/common/Nav.css'\r\n\r\nfunction Nav(props) {\r\n    return (\r\n        <nav className=\"navBar\">\r\n            <span>\r\n                <Link to=\"/\" className='navLogo'>\r\n                    <img src={logo} alt=\"logo\" height='45px' className='logo' style={{ marginRight: 10 }} />\r\n                    <p className='navLogoName'>InstaGive</p>\r\n                </Link>\r\n                <span>\r\n                    {/* Other nav links */}\r\n                </span>\r\n            </span>\r\n            <span className='navLogin'>\r\n                {props.auth.token ?\r\n                    <span>\r\n                        {props.auth.type === 'user' ?\r\n                            <span>\r\n                                <NavLink to=\"/user/ledger\" className='navLink'>Ledger</NavLink>\r\n                                <NavLink to=\"/user\" className='navLink'>Dashboard</NavLink>\r\n                                <NavLink to=\"/user/change-password\" className='navLink'>ChangePassword</NavLink>\r\n                            </span> : ''\r\n                        }\r\n                        <NavLink to='/' className='navLink' onClick={() => {\r\n                            localStorage.removeItem('user')\r\n                            localStorage.removeItem('admin')\r\n                            props.authRemove()\r\n                        }}>Logout</NavLink>\r\n                    </span> :\r\n                    <span>\r\n                        <NavLink to=\"/auth/register\" className='navLink'>Signup</NavLink>\r\n                        |\r\n                        <NavLink to=\"/auth/login\" className='navLink'>Login</NavLink>\r\n                    </span>\r\n                }\r\n            </span>\r\n        </nav>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return { auth: state.auth }\r\n}\r\n\r\nexport default connect(mapStateToProps, { authRemove })(Nav);","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\landingPage\\LandingPage.jsx",[],"E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\detailsPage\\DetailsPage.jsx",[],"E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\adminPage\\AdminPage.jsx",[],"E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\common\\NotFound.jsx",[],"E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\authPage\\AuthPage.jsx",["191","192","193"],"import React, { useEffect, useState } from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport Login from './Login';\r\nimport Register from './Register';\r\nimport ForgotPass from './ForgotPass';\r\nimport '../../../style/authPage/authPage.css'\r\n\r\nfunction AuthPage(props) {\r\n    const [userAuthID, setUserAuthID] = useState()\r\n\r\n    useEffect(() => {\r\n        // check if there's a user in coockies\r\n        const userAuthID = localStorage.getItem('user')\r\n\r\n        const validateAuthID = async () => {\r\n            // Same logic for user login\r\n            if (userAuthID) props.history.replace('/user')\r\n        }\r\n\r\n        validateAuthID()\r\n    }, [])\r\n\r\n    return (\r\n        <div className='auth-container'>\r\n            <div className='authBackgroundImage'>\r\n            </div>\r\n            <div className='authForm'>\r\n                <div className='center'>\r\n                    <Switch>\r\n                        <Route path='/auth/login' component={Login} />\r\n                        <Route path='/auth/register' component={Register} />\r\n                        <Route path='/auth/forgot' component={ForgotPass} />\r\n                        <Redirect from='/auth' to='/auth/login' exact />\r\n                        <Redirect to='/not-found' />\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AuthPage;","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\userPage\\UserPage.jsx",["194"],"import React, { useEffect } from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nimport PostList from './PostList';\r\nimport LedgerPage from './ledgerPage/LedgerPage';\r\nimport PostCreate from './postDetailPage/PostCreate';\r\nimport UserPostDetails from './postDetailPage/UserPostDetails';\r\nimport ChangePass from './changePassPage/ChangePass';\r\nimport UpdateUserPost from './postUpdatePage/UpdateUserPost';\r\nimport { authRemove } from '../../../app/auth'\r\nimport { userLedgerFetch, userPostFetch } from '../../../app/user'\r\n\r\nfunction UserPage(props) {\r\n    useEffect(() => {\r\n        if (!localStorage.getItem('user')) return props.history.push('/auth')\r\n        props.userLedgerFetch(props.auth.token)\r\n        props.userPostFetch(props.auth.token)\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Switch>\r\n                    <Route path='/user/change-password' component={ChangePass} />\r\n                    <Route path='/user/post-create' component={PostCreate} />\r\n                    <Route path='/user/post-details/:id' component={UserPostDetails} />\r\n                    <Route path='/user/ledger' component={LedgerPage} />\r\n                    <Route path='/user/update-details/:id' component={UpdateUserPost} />\r\n                    <Route path='/user/' exact component={PostList} />\r\n                    <Redirect to='/not-found' />\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return state\r\n}\r\n\r\nexport default connect(mapStateToProps, { authRemove, userLedgerFetch, userPostFetch })(UserPage);","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\landingPage\\Posts.jsx",[],"E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\detailsPage\\DetailsUpdatePage.jsx",["195"],"import axios from 'axios';\r\nimport React, { useState, useEffect } from 'react';\r\nimport '../../../style/detailsPage/detailsUpdatePage.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction DetailsUpdatePage(props) {\r\n    const [updates, setPosts] = useState([])\r\n\r\n\r\n    \r\n    useEffect(() => {\r\n        // Update the document title using the browser API\r\n   \r\n        const fetchUpdates = async () => {\r\n\r\n            await axios.post(`http://localhost:5000/updates/getall/${props.match.params.id}`, {token: localStorage.getItem('user')}).then(data => setPosts(data.data))\r\n\r\n        }\r\n        \r\n        fetchUpdates()\r\n        console.log(updates)\r\n      },[]);\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n                 <div className='user-items-right-container'>\r\n                <FontAwesomeIcon\r\n                    icon={faPlusCircle}\r\n                    className='deleteButton'\r\n                    size='lg'\r\n                    onClick={() => props.history.push(`/user/update-details/${props.match.params.id}/create`)}\r\n                />\r\n            </div>\r\n          \r\n            {/* {props.children}\r\n            <div className=\"update-container\">\r\n                {updates.map(update =>\r\n                    <div key={update.id}>\r\n                        <h3 className='update-title'>{update.title} - {update.date}</h3>\r\n                        <p className='update-details'>{update.details}</p>\r\n                        <img src={update.img} alt=\"carousel\" />\r\n                    </div>\r\n                )}\r\n            </div> */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DetailsUpdatePage;","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\landingPage\\ShowContent.jsx",[],"E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\detailsPage\\DetailsPageContent.jsx",["196","197","198"],"import React from 'react';\r\nimport '../../../style/detailsPage/detailsPageContent.css'\r\nimport banner1 from '../../../img/Landscape-Color.jpg'\r\n\r\nfunction DetailsPageContent(props) {\r\n    if (!props.onSelectedPost) return <div>Loading</div>\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img src={`/docs/${props.onSelectedPost.profilePic}`} alt=\"Photo\" className='detailsPageImage' />\r\n            </div>\r\n            {props.children}\r\n            <p className='donationContent'>\r\n                {props.onSelectedPost ? props.onSelectedPost.description : ''}\r\n            </p>\r\n           \r\n            <div>\r\n                {props.onSelectedPost.imageList.map(imageName => \r\n                    \r\n                    \r\n                    <img src={`/docs/${imageName}`}  alt=\"Photo\" className='detailsPageImage' />\r\n\r\n                    \r\n                    \r\n                    )}\r\n           \r\n                    </div>\r\n           \r\n           \r\n            <div className='donateNowContainer'>\r\n                <button className='donate-button'>Donate Now</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DetailsPageContent;","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\adminPage\\AdminLogin.jsx",["199"],"import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios'\r\nfunction AdminLogin(props) {\r\n    const [auth, setAuth] = useState({ username: '', password: '' })\r\n\r\n    const handleSubmit = async event => {\r\n        event.preventDefault()\r\n\r\n        const valid = await axios.post('http://localhost:5000/admin/login', auth);\r\n      \r\n        if (valid.data.valid !== true) \r\n            window.alert(valid.data.valid);\r\n    \r\n        else{\r\n\r\n\r\n            console.log(valid.data.token);\r\n      localStorage.setItem('admin', valid.data.token)\r\n      window.location.reload();\r\n\r\n      window.alert('Login Success');\r\n\r\n        }\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n    }\r\n\r\n    return (\r\n        <div className='LoginContainer'>\r\n            <div>\r\n                <h1 className='authTitle'>Admin Login</h1>\r\n            </div>\r\n            <form action=\"#\" className='form-container' onSubmit={handleSubmit}>\r\n                <label htmlFor=\"username\" className='form-label'>Username</label>\r\n                <input type=\"text\" name=\"username\" id=\"username\" placeholder='Username' className='form-input-text' value={auth.username} onChange={e => setAuth({ ...auth, username: e.target.value })} />\r\n                <label htmlFor=\"password\" className='form-label'>Password</label>\r\n                <input type=\"password\" name=\"password\" id=\"password\" placeholder='Password' className='form-input-text' value={auth.password} onChange={e => setAuth({ ...auth, password: e.target.value })} />\r\n                <div style={{ width: '100%' }}>\r\n                    <button className='form-button' style={{ width: '100%' }}>Login</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AdminLogin;","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\adminPage\\AdminRejected.jsx",[],"E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\common\\Sidebar.jsx",[],"E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\adminPage\\AdminAccepted.jsx",[],"E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\adminPage\\AdminPending.jsx",["200"],"import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCheck, faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport axios from 'axios'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { accountApproved, accountRejected } from '../../../app/accounts'\r\n\r\n\r\nfunction AdminPending(props) {\r\n\r\n    const theadData = [\r\n        {\r\n            label: 'Organization',\r\n            name: 'orgName'\r\n        },\r\n        {\r\n            label: 'Email',\r\n            name: 'email'\r\n        },\r\n        {\r\n            label: 'City',\r\n            name: 'city'\r\n        },\r\n        {\r\n            label: 'Rep. Name',\r\n            name: 'repName'\r\n        },\r\n    ]\r\n\r\n    const handleApproveAccount = async (account) => {\r\n        // await axios.post(`http://localhost:5000/admin/changestatus/${account}/approved`)\r\n        //     .then(() => accountList = [])\r\n        props.accountApproved(account)\r\n        // window.location.reload();\r\n    };\r\n\r\n    const handleRejectAccount = async (account) => {\r\n        props.accountRejected(account)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1 className='admin-page-title'>Pending</h1>\r\n            <table className='table-container'>\r\n                <thead>\r\n                    <tr>\r\n                        {theadData.map(tableHead =>\r\n                            <th key={tableHead.name} className='table-header'>{tableHead.label}</th>\r\n                        )}\r\n                        <th>Status</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {props.accountPending.map(account =>\r\n                        <tr key={account._id}>\r\n                            {theadData.map(tableHead =>\r\n                                <td key={tableHead.name} className='table-item'>\r\n                                    {account[tableHead.name]}\r\n                                </td>\r\n                            )}\r\n                            <td className='table-item' id='table-button-container'>\r\n                                <FontAwesomeIcon\r\n                                    icon={faCheck}\r\n                                    className='table-icon'\r\n                                    size='lg'\r\n                                    onClick={() => handleApproveAccount(account)}\r\n                                />\r\n                                <FontAwesomeIcon\r\n                                    icon={faTimes}\r\n                                    className='table-icon'\r\n                                    size='lg'\r\n                                    onClick={() => handleRejectAccount(account)}\r\n                                />\r\n                            </td>\r\n                        </tr>\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return { accountPending: state.accounts.pending }\r\n}\r\nexport default connect(mapStateToProps, { accountApproved, accountRejected })(AdminPending);","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\authPage\\Login.jsx",["201","202"],"import axios from 'axios';\r\nimport React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux'\r\n\r\nimport { authAdd } from '../../../app/auth'\r\nimport route from '../../../route/instagive'\r\nimport '../../../style/authPage/login.css';\r\n\r\nfunction Login(props) {\r\n  const [auth, setAuth] = useState({ username: '', password: '' });\r\n  const [error, setError] = useState(false);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const { data } = await route.post('/user/login', auth);\r\n\r\n    if (data.valid !== true) {\r\n      window.alert(data.valid);\r\n\r\n\r\n    } else {\r\n      // Set Item\r\n      localStorage.setItem('user', data.token)\r\n      props.authAdd(data.token, 'user')\r\n      props.history.push('/user')\r\n\r\n      window.alert('Login Success');\r\n    }\r\n\r\n    // If there is error in auth, set the error to TRUE\r\n  };\r\n\r\n  return (\r\n    <div className='LoginContainer'>\r\n      {/* Show this if the error is true */}\r\n      {error && <div>Error</div>}\r\n\r\n      <div>\r\n        <h1 className='authTitle'>Welcome!</h1>\r\n      </div>\r\n      <form action='#' className='form-container' onSubmit={handleSubmit}>\r\n        <label htmlFor='username' className='form-label'>\r\n          Username\r\n        </label>\r\n        <input\r\n          type='text'\r\n          name='username'\r\n          id='username'\r\n          placeholder='Username'\r\n          className='form-input-text'\r\n          required\r\n          value={auth.username}\r\n          onChange={(e) => setAuth({ ...auth, username: e.target.value })}\r\n        />\r\n        <label htmlFor='password' className='form-label'>\r\n          Password\r\n        </label>\r\n        <input\r\n          type='password'\r\n          name='password'\r\n          id='password'\r\n          placeholder='Password'\r\n          className='form-input-text'\r\n          required\r\n          value={auth.password}\r\n          onChange={(e) => setAuth({ ...auth, password: e.target.value })}\r\n        />\r\n        <div style={{ width: '100%' }}>\r\n          <Link to='/auth/forgot' className='form-link'>\r\n            Forgot Password\r\n          </Link>\r\n          <div className='form-button-container'>\r\n            <button className='form-button'>Login</button>\r\n            <button\r\n              className='form-button'\r\n              onClick={() => props.history.push('/auth/register')}\r\n            >\r\n              Sign up\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default connect(null, { authAdd })(Login);\r\n","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\authPage\\Register.jsx",["203"],"import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport '../../../style/authPage/register.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Register(props) {\r\n  const [checkPassword, setCheckPassword] = useState({ confirm_pass: '' });\r\n  const [userForm, setUserForm] = useState({\r\n    email: '',\r\n    password: '',\r\n    city: '',\r\n    orgName: '',\r\n    orgAddress: '',\r\n\r\n    orgNumber: '',\r\n    repName: '',\r\n\r\n    orgDescriptions: '',\r\n  });\r\n\r\n  const [files, setFiles] = useState({\r\n    orgPhoto: '',\r\n    orgDocuments: '',\r\n    repId: '',\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    console.log(event.target.value);\r\n\r\n    setUserForm({\r\n      ...userForm,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handlerepId = (file) => {\r\n    setFiles({ ...files, repId: file });\r\n  };\r\n\r\n  const handleorgPhoto = (file) => {\r\n    setFiles({ ...files, orgPhoto: file });\r\n  };\r\n\r\n  const handleorgDocuments = (multifiles) => {\r\n    setFiles({ ...files, orgDocuments: multifiles });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const formdata = new FormData();\r\n\r\n    formdata.append('repId', files.repId);\r\n    formdata.append('orgPhoto', files.orgPhoto);\r\n\r\n    for (const key in files.orgDocuments) {\r\n      formdata.append('orgDocuments', files.orgDocuments[key]);\r\n    }\r\n\r\n    formdata.append('email', userForm.email);\r\n    formdata.append('city', userForm.city);\r\n    formdata.append('password', userForm.password);\r\n\r\n    formdata.append('orgName', userForm.orgName);\r\n    formdata.append('orgAddress', userForm.orgAddress);\r\n    formdata.append('orgNumber', userForm.orgNumber);\r\n    formdata.append('repName', userForm.repName);\r\n    formdata.append('orgDescriptions', userForm.orgDescriptions);\r\n\r\n    const data = await axios.post('http://localhost:5000/user/register', formdata);\r\n    console.log(data)\r\n\r\n    setUserForm({\r\n      email: '',\r\n      password: '',\r\n      city: '',\r\n      orgName: '',\r\n      orgAddress: '',\r\n      orgPhoto: '',\r\n      orgNumber: '',\r\n      repName: '',\r\n      repId: '',\r\n      orgDocuments: [],\r\n      orgDescriptions: ''\r\n    })\r\n\r\n    setFiles({\r\n      orgPhoto: '',\r\n      orgDocuments: '',\r\n      repId: '',\r\n    })\r\n\r\n\r\n    document.getElementById('repId').value = null;\r\n    document.getElementById('orgDocuments').value = null;\r\n    document.getElementById('orgPhoto').value = null;\r\n\r\n\r\n\r\n\r\n  };\r\n\r\n  return (\r\n    <div className='register-container'>\r\n      <div>\r\n        <h1 className='authTitle'>Account Details</h1>\r\n      </div>\r\n      <form encType='multipart/form-data' action='' onSubmit={handleSubmit}>\r\n        <div className='register-form1'>\r\n          <div className='register-input-container1'>\r\n            <label className='form-label' htmlFor='email'>\r\n              Email\r\n            </label>\r\n            <input\r\n              type='text'\r\n              name='email'\r\n              id='email'\r\n              value={userForm.email}\r\n              placeholder='Email'\r\n              className='register-form-input-text'\r\n              onChange={handleChange}\r\n            />\r\n            <label className='form-label' htmlFor='password'>\r\n              Password\r\n            </label>\r\n            <input\r\n              type='text'\r\n              name='password'\r\n              id='password'\r\n              value={userForm.password}\r\n              placeholder='Password'\r\n              className='register-form-input-text'\r\n              onChange={handleChange}\r\n            />\r\n            <label className='form-label' htmlFor='confirm-pass'>\r\n              Confirm Password\r\n            </label>\r\n            <input\r\n              type='text'\r\n              name='confirm-pass'\r\n              id='confirm-pass'\r\n              placeholder='confirm Password'\r\n              className='register-form-input-text'\r\n              onChange={(e) => setCheckPassword(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className='register-form2'>\r\n          <div className='register-input-container2'>\r\n            <label className='form-label' htmlFor='orgName'>\r\n              Organization Name\r\n            </label>\r\n            <input\r\n              type='text'\r\n              name='orgName'\r\n              value={userForm.orgName}\r\n              onChange={handleChange}\r\n              id='orgName'\r\n              placeholder='Organization Name'\r\n              className='register-form-input-text'\r\n            />\r\n          </div>\r\n          <div className='register-input-container2'>\r\n            <label className='form-label' htmlFor='orgNumber'>\r\n              Organization No.\r\n            </label>\r\n            <input\r\n              type='text'\r\n              name='orgNumber'\r\n              value={userForm.orgNumber}\r\n              onChange={handleChange}\r\n              id='orgNumber'\r\n              placeholder='Organization No.'\r\n              className='register-form-input-text'\r\n            />\r\n          </div>\r\n          <div className='register-input-container2'>\r\n            <label className='form-label' htmlFor='city'>\r\n              City\r\n            </label>\r\n            <input\r\n              type='text'\r\n              name='city'\r\n              value={userForm.city}\r\n              onChange={handleChange}\r\n              id='city'\r\n              placeholder='City'\r\n              className='register-form-input-text'\r\n            />\r\n          </div>\r\n          <div className='register-input-container2'>\r\n            <label className='form-label' htmlFor='orgAddress'>\r\n              Organization Address\r\n            </label>\r\n            <input\r\n              type='text'\r\n              name='orgAddress'\r\n              value={userForm.orgAddress}\r\n              onChange={handleChange}\r\n              id='orgAddress'\r\n              placeholder='Organization Address'\r\n              className='register-form-input-text'\r\n            />\r\n          </div>\r\n          <div className='register-input-container2'>\r\n            <label className='form-label' htmlFor='repName'>\r\n              Representative Name\r\n            </label>\r\n            <input\r\n              type='text'\r\n              name='repName'\r\n              value={userForm.repName}\r\n              onChange={handleChange}\r\n              id='repName'\r\n              placeholder='Representative Name'\r\n              className='register-form-input-text'\r\n            />\r\n          </div>\r\n\r\n          <div className='register-input-container2'>\r\n            <label className='form-label' htmlFor='repId'>\r\n              Representative ID\r\n            </label>\r\n            <input\r\n              type='file'\r\n              id='repId'\r\n              name='repId'\r\n              onChange={(e) => {\r\n                const file = e.target.files[0];\r\n                handlerepId(file);\r\n              }}\r\n              className='form-input-file'\r\n            ></input>\r\n          </div>\r\n\r\n          <div className='register-input-container2'>\r\n            <label className='form-label' htmlFor='orgDocuments'>\r\n              Organization Documents\r\n            </label>\r\n            <input\r\n              type='file'\r\n              id='orgDocuments'\r\n              name='orgDocuments'\r\n              onChange={(e) => {\r\n                const multifiles = e.target.files;\r\n                handleorgDocuments(multifiles);\r\n              }}\r\n              multiple\r\n              className='form-input-file'\r\n            ></input>\r\n          </div>\r\n          <div className='register-input-container2'>\r\n            <label className='org-photo' htmlFor='orgPhoto'>\r\n              Organization Photo\r\n            </label>\r\n            <input\r\n              type='file'\r\n              id='orgPhoto'\r\n              name='orgPhoto'\r\n              onChange={(e) => {\r\n                const file = e.target.files[0];\r\n                handleorgPhoto(file);\r\n              }}\r\n              className='form-input-file'\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className='register-org-description-container'>\r\n          <label className='org-photo' htmlFor='orgDescriptions'>\r\n            Organization Description\r\n          </label>\r\n          <textarea\r\n            name='orgDescriptions'\r\n            value={userForm.orgDescriptions}\r\n            onChange={handleChange}\r\n            id='orgDescriptions'\r\n            className='register-form-input-text'\r\n          ></textarea>\r\n        </div>\r\n        <div className='form-button-container'>\r\n          <Link to='/auth/login' className='form-link'>\r\n            Cancel\r\n          </Link>\r\n          <button className='form-button'>Send Registration</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\authPage\\ForgotPass.jsx",[],"E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\userPage\\PostList.jsx",[],"E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\userPage\\ledgerPage\\LedgerPage.jsx",[],"E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\userPage\\postDetailPage\\UserPostDetails.jsx",["204","205","206","207","208","209","210","211"],"import React, { useState } from 'react';\r\nimport axios from 'axios'\r\nimport { cityLocation } from '../../../others/cityLocation'\r\n\r\nfunction UserPostDetails(props) {\r\n    const [editPost, setEditPost] = useState(false)\r\n    const [postForm, setPostForm] = useState({\r\n        Title: '',\r\n        description: '',\r\n        location: '',\r\n        donationType: ''\r\n    })\r\n    const [files, setFiles] = useState({\r\n        postImg: '',\r\n        profilePic: '',\r\n    });\r\n\r\n    const handleSubmit = () => {\r\n        // axios for handling postForm\r\n        // axios.post('', postForm)\r\n        // axios for handling files\r\n        // axios.post('', files)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Post Details</h1>\r\n            {!editPost ? <button onClick={() => setEditPost(true)}>Edit</button> : ''}\r\n            <form className='post-container'>\r\n                <div className=\"post-create-container\">\r\n                    <label className='form-label' htmlFor='post-profile-pic'>\r\n                        Cover Photo\r\n                    </label>\r\n                    <img src=\"\" alt=\"Profile Photo Here\" />\r\n\r\n                    <label htmlFor=\"title\">Title:</label>\r\n                    {!editPost ?\r\n                        <p></p> :\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"title\"\r\n                            id=\"title\"\r\n                            value={postForm.Title}\r\n                            onChange={e => setPostForm({ ...postForm, Title: e.target.value })}\r\n                        />\r\n                    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    <div>\r\n                        <div>\r\n                            <label htmlFor=\"title\">Location</label>\r\n                            {!editPost ?\r\n                                <p></p> :\r\n                                <select\r\n                                    name=\"city\"\r\n                                    id=\"city\"\r\n                                    value={postForm.location}\r\n                                    onChange={e =>\r\n                                        setPostForm({ ...postForm, location: e.target.value })}\r\n                                >\r\n                                    {cityLocation.map(city =>\r\n                                        <option value={city} key={city}>\r\n                                            {city}\r\n                                        </option>\r\n                                    )}\r\n                                </select>\r\n                            }\r\n\r\n\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"\">Donation Type:</label>\r\n                            {!editPost ?\r\n                                <p></p> :\r\n                                <div>\r\n                                    <input type=\"radio\"\r\n                                        id=\"post-radio-cash\"\r\n                                        name=\"donation-type\"\r\n                                        value=\"cash\"\r\n                                        onClick={e => setPostForm({ ...postForm, donationType: e.target.value })}\r\n                                    />\r\n                                    <label htmlFor=\"post-radio-cash\">Cash</label>\r\n                                    <input type=\"radio\"\r\n                                        id=\"post-radio-in-kind\"\r\n                                        name=\"donation-type\"\r\n                                        value=\"in-kind\"\r\n                                        onClick={e => setPostForm({ ...postForm, donationType: e.target.value })}\r\n                                    />\r\n                                    <label htmlFor=\"post-radio-in-kind\">In-kind</label>\r\n                                    <input type=\"radio\"\r\n                                        id=\"post-radio-both\"\r\n                                        name=\"donation-type\"\r\n                                        value=\"both\"\r\n                                        onClick={e => setPostForm({ ...postForm, donationType: e.target.value })}\r\n                                    />\r\n                                    <label htmlFor=\"post-radio-both\">Both</label>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <label htmlFor=\"details\">Details:</label>\r\n                    {!editPost ?\r\n                        <p></p> :\r\n                        <textarea\r\n                            name='postDetails'\r\n                            value={postForm.postDetails}\r\n                            onChange={e => setPostForm({ ...postForm, postDetails: e.target.value })}\r\n                            id='postDetails'\r\n                            className=''\r\n                        ></textarea>\r\n                    }\r\n                    <label className='form-label' htmlFor='postImages'>\r\n                        Images:\r\n                    </label>\r\n\r\n                    <img src=\"\" alt=\"Image 1\" />\r\n                    <img src=\"\" alt=\"Image 2\" />\r\n                    <img src=\"\" alt=\"Image 3\" />\r\n\r\n                    {editPost ?\r\n                        <div>\r\n                            <button onClick={() => setEditPost(false)}>Cancel</button>\r\n                            <button>Save</button>\r\n                        </div> : ''\r\n                    }\r\n                </div>\r\n            </form>\r\n            {!editPost ?\r\n                <div>\r\n                    <button>View Post List</button>\r\n                </div> : ''\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserPostDetails;","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\userPage\\postDetailPage\\PostCreate.jsx",[],"E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\userPage\\changePassPage\\ChangePass.jsx",[],"E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\userPage\\postUpdatePage\\UpdateUserPost.jsx",["212"],"import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport PostCreateUpdate from './PostCreateUpdate';\r\nimport PostDetailUpdate from './PostDetailUpdate';\r\n\r\nfunction UpdateUserPost(props) {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route path='/user/update-details/:id/create' component={PostCreateUpdate} />\r\n                <Route path='/user/update-details/:id' component={PostDetailUpdate} />\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UpdateUserPost;","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\others\\cityLocation.js",[],"E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\common\\PostCard.jsx",[],"E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\userPage\\ledgerPage\\LedgerCreate.jsx",[],"E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\userPage\\ledgerPage\\LedgerList.jsx",["213"],"import React, { useContext } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\nfunction LedgerList(props) {\r\n  // const userLedger = useContext(UserLedger);\r\n\r\n  console.log('Ledger')\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <input type='text' />\r\n      </div>\r\n      <div>\r\n        <FontAwesomeIcon\r\n          icon={faPlusCircle}\r\n          className='deleteButton'\r\n          size='lg'\r\n          onClick={() => props.history.push('/user/ledger/create')}\r\n        />\r\n      </div>\r\n      <div style={{ overflowX: 'auto' }}>\r\n        <table>\r\n          <tr>\r\n            <th>Post</th>\r\n            <th>Name</th>\r\n            <th>Email(optional)</th>\r\n            <th>Donation Type</th>\r\n            <th>Payment Method(if money donation)</th>\r\n            <th>Amoung/Item</th>\r\n            <th>Remarks</th>\r\n            <th>Date</th>\r\n            <th></th>\r\n          </tr>\r\n\r\n          {/* {userLedger.ledger &&\r\n            userLedger.ledger.map((data) => (\r\n              <tr>\r\n                <td>{data.postId}</td>\r\n                <td>{data.donorName}</td>\r\n                <td>{data.email}</td>\r\n                <td>{data.donationType}</td>\r\n                <td>{data.paymentAddress}</td>\r\n                <td>{data.amount}</td>\r\n                <td>{data.remarks}</td>\r\n                <td>{data.date}</td>\r\n\r\n                <td>\r\n                  <button>Delete</button>\r\n                </td>\r\n              </tr>\r\n            ))} */}\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LedgerList;\r\n","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\userPage\\postDetailPage\\PostCreateDetails.jsx",["214"],"import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../../../../style/userPage/userPage.css';\r\nimport { cityLocation } from '../../../others/cityLocation';\r\nimport axios from 'axios';\r\n\r\nfunction PostCreateDetails(props) {\r\n  const [postForm, setPostForm] = useState({\r\n    Title: '',\r\n    description: '',\r\n    location: '',\r\n    donationType: '',\r\n    totalAmount: 0,\r\n  });\r\n  const [files, setFiles] = useState({\r\n    imageList: '',\r\n    profilePic: '',\r\n  });\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const formdata = new FormData();\r\n\r\n    formdata.append('profilePic', files.profilePic);\r\n\r\n    for (const key in files.imageList) {\r\n      formdata.append('imageList', files.imageList[key]);\r\n    }\r\n    formdata.append('Title', postForm.Title);\r\n    formdata.append('description', postForm.description);\r\n    formdata.append('location', postForm.location);\r\n    formdata.append('donationType', postForm.donationType);\r\n    formdata.append('totalAmount', postForm.totalAmount);\r\n    formdata.append('token', localStorage.getItem('user'));\r\n    console.log(...formdata);\r\n    const data = await axios.post(\r\n      'http://localhost:5000/post/createpost',\r\n      formdata\r\n    );\r\n\r\n    window.location.replace('http://localhost:5001/user');\r\n\r\n      \r\n\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1 className='user-header'>Creating new post</h1>\r\n      <form\r\n        encType='multipart/form-data'\r\n        className='post-container'\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <div className='post-create-container'>\r\n          <label className='form-label' htmlFor='post-profile-pic'>\r\n            Cover Photo\r\n          </label>\r\n          <input\r\n            type='file'\r\n            id='post-profile-pic'\r\n            name='post-profile-pic'\r\n            onChange={(e) => {\r\n              const file = e.target.files[0];\r\n              setFiles({ ...files, profilePic: file });\r\n            }}\r\n            className=''\r\n          ></input>\r\n          <label htmlFor='title'>Title:</label>\r\n          <input\r\n            type='text'\r\n            name='title'\r\n            id='title'\r\n            className='user-form-input'\r\n            value={postForm.Title}\r\n            onChange={(e) =>\r\n              setPostForm({ ...postForm, Title: e.target.value })\r\n            }\r\n          />\r\n          <div>\r\n            <div>\r\n              <label htmlFor='title'>Location:</label>\r\n              <select\r\n                name='city'\r\n                id='city'\r\n                className='user-form-dropdown'\r\n                value={postForm.location}\r\n                onChange={(e) =>\r\n                  setPostForm({ ...postForm, location: e.target.value })\r\n                }\r\n              >\r\n                {cityLocation.map((city) => (\r\n                  <option value={city} key={city}>\r\n                    {city}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div>\r\n              <label>Donation type:</label>\r\n              <div className='user-form-radio-container'>\r\n                <input\r\n                  type='radio'\r\n                  id='post-radio-cash'\r\n                  name='donation-type'\r\n                  value='cash'\r\n                  className='user-form-radio'\r\n                  onClick={(e) =>\r\n                    setPostForm({ ...postForm, donationType: e.target.value })\r\n                  }\r\n                />\r\n                <label htmlFor='post-radio-cash'>Cash</label>\r\n                <input\r\n                  type='radio'\r\n                  id='post-radio-in-kind'\r\n                  name='donation-type'\r\n                  value='in-kind'\r\n                  className='user-form-radio'\r\n                  onClick={(e) =>\r\n                    setPostForm({ ...postForm, donationType: e.target.value })\r\n                  }\r\n                />\r\n                <label htmlFor='post-radio-in-kind'>In-kind</label>\r\n                <input\r\n                  type='radio'\r\n                  id='post-radio-both'\r\n                  name='donation-type'\r\n                  value='both'\r\n                  className='user-form-radio'\r\n                  onClick={(e) =>\r\n                    setPostForm({ ...postForm, donationType: e.target.value })\r\n                  }\r\n                />\r\n                <label htmlFor='post-radio-both'>Both</label>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <label htmlFor='totalAmount'>Total amount:</label>\r\n              <input\r\n                type='number'\r\n                name='totalAmount'\r\n                id='totalAmount'\r\n                className='user-form-input'\r\n                value={postForm.totalAmount}\r\n                onChange={(e) =>\r\n                  setPostForm({ ...postForm, totalAmount: e.target.value })\r\n                }\r\n              />\r\n            </div>\r\n          </div>\r\n          <label htmlFor='description'>Details:</label>\r\n          <textarea\r\n            name='description'\r\n            value={postForm.description}\r\n            onChange={(e) =>\r\n              setPostForm({ ...postForm, description: e.target.value })\r\n            }\r\n            id='description'\r\n            className='user-form-textarea'\r\n          ></textarea>\r\n          <label className='form-label' htmlFor='postImages'>\r\n            Images:\r\n          </label>\r\n          <input\r\n            type='file'\r\n            id='postImages'\r\n            name='postImages'\r\n            onChange={(e) => {\r\n              const multifiles = e.target.files;\r\n              setFiles({ ...files, imageList: multifiles });\r\n            }}\r\n            multiple\r\n            className=''\r\n          ></input>\r\n          <div>\r\n            <Link to='/user'>Cancel</Link>\r\n            <button>Save</button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostCreateDetails;\r\n","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\userPage\\postUpdatePage\\PostCreateUpdate.jsx",[],"E:\\Projects\\Instagive\\instagive-react-frontend\\src\\components\\pages\\userPage\\postUpdatePage\\PostDetailUpdate.jsx",["215","216"],"import React from 'react';\r\n\r\nfunction PostDetailUpdate(props) {\r\n    return (\r\n        <div>\r\n            <h1>Title</h1>\r\n            <p>Details here</p>\r\n            <img src=\"\" alt=\"Image 1\" />\r\n            <img src=\"\" alt=\"Image 2\" />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PostDetailUpdate;","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\app\\configStore.js",[],"E:\\Projects\\Instagive\\instagive-react-frontend\\src\\app\\reducer.js",[],"E:\\Projects\\Instagive\\instagive-react-frontend\\src\\app\\auth.js",["217"],"// Action Type\r\nconst AUTH_ADDED = 'authAdded'\r\nconst AUTH_REMOVED = 'authRemoved'\r\n\r\n// Actions\r\nconst authAdd = (token, type) => {\r\n    return {\r\n        type: AUTH_ADDED,\r\n        payload: {\r\n            token,\r\n            type\r\n        }\r\n    }\r\n}\r\n\r\nconst authRemove = () => {\r\n    return {\r\n        type: AUTH_REMOVED,\r\n        payload: {\r\n            token: '',\r\n            type: ''\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// Data\r\nconst authData = {\r\n    token: '',\r\n    type: ''\r\n}\r\n\r\n\r\n// Reducer\r\nexport default (auth=authData, action) => {\r\n    switch (action.type) {\r\n        case AUTH_ADDED:\r\n            return {\r\n                token: action.payload.token,\r\n                type: action.payload.type\r\n            }\r\n        \r\n        case AUTH_REMOVED:\r\n            return {\r\n                token: '',\r\n                type: ''\r\n            }\r\n\r\n        default:\r\n            return auth\r\n    }\r\n}\r\n\r\n\r\nexport {\r\n    authAdd,\r\n    authRemove\r\n}","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\route\\instagive.js",[],"E:\\Projects\\Instagive\\instagive-react-frontend\\src\\app\\postList.js",["218","219","220","221"],"import route from '../route/instagive'\r\n\r\n// Action Type\r\nconst POST_LIST_FECHED = 'postListFeched'\r\nconst POST_LIST_ADDED = 'postListAdded'\r\nconst POST_LIST_REMOVED = 'postListRemoved'\r\nconst POST_LIST_UPDATED = 'postListUpdated'\r\n\r\n\r\n// Action\r\nexport const postListFeched = () => async dispatch => {\r\n    const {data} = await route.get('/landing')\r\n    dispatch({\r\n        type: POST_LIST_FECHED,\r\n        payload: data\r\n    })\r\n}\r\n\r\nconst postListAdded = (post) => {\r\n    return {\r\n        type: POST_LIST_ADDED,\r\n        payload: post\r\n    }\r\n}\r\n\r\nconst postListRemoved = (id) => {\r\n    return {\r\n        type: POST_LIST_REMOVED,\r\n        payload: {id}\r\n    }\r\n}\r\n\r\nconst postListUpdated = (post) => {\r\n    return {\r\n        type: POST_LIST_UPDATED,\r\n        payload: post\r\n    }\r\n}\r\n\r\n\r\n\r\n// Reducer\r\nexport default (state=[], action) => {\r\n    switch (action.type) {\r\n        case POST_LIST_FECHED:\r\n            return action.payload\r\n    \r\n        case POST_LIST_REMOVED:\r\n            return state.filter(post => \r\n                post._id !== action.payload.id)\r\n    \r\n        case POST_LIST_UPDATED:\r\n            return state.map(post =>\r\n                post._id === action.payload.id ?\r\n                action.payload :\r\n                post)\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\app\\accounts.js",["222"],"import route from '../route/instagive'\r\n\r\n// Action Type\r\nconst ACCOUNT_FETCHED = 'accountFetched'\r\nconst ACCOUNT_APPROVED = 'accountApproved'\r\nconst ACCOUNT_REJECTED = 'accountRejected'\r\n\r\n\r\n// Actions\r\nconst accountFetched = () => async dispatch => {\r\n    const {data} = await route.get('/admin/getusers')\r\n\r\n    dispatch({\r\n        type:ACCOUNT_FETCHED,\r\n        payload: data\r\n    })\r\n}\r\n\r\nconst accountApproved = account => async dispatch => {\r\n    await route.post(`/admin/changestatus/${account._id}/approved`)\r\n    dispatch({\r\n        type:ACCOUNT_APPROVED,\r\n        payload: account\r\n    })\r\n}\r\n\r\nconst accountRejected = account => async dispatch => {\r\n    await route.post(`/admin/changestatus/${account._id}/rejected`)\r\n    dispatch({\r\n        type:ACCOUNT_REJECTED,\r\n        payload: account\r\n    })\r\n}\r\n\r\n\r\nconst accountList = {\r\n    pending: [],\r\n    approved: [],\r\n    rejected: []\r\n}\r\n// Reducer\r\nexport default (state=accountList, action) => {\r\n    switch (action.type) {\r\n        case ACCOUNT_FETCHED:\r\n            return action.payload\r\n    \r\n        case ACCOUNT_APPROVED:\r\n            return {\r\n                ...state,\r\n                pending: state.pending.filter(account => account._id !== action.payload._id),\r\n                approved: [...state.approved, action.payload]\r\n            }\r\n        \r\n        case ACCOUNT_REJECTED:\r\n            return {\r\n                ...state,\r\n                pending: state.pending.filter(account => account._id !== action.payload._id),\r\n                approved: state.approved.filter(account => account._id !== action.payload._id),\r\n                rejected: [...state.approved, action.payload]\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\nexport {\r\n    accountFetched,\r\n    accountApproved,\r\n    accountRejected\r\n}","E:\\Projects\\Instagive\\instagive-react-frontend\\src\\app\\user.js",["223"],{"ruleId":"224","replacedBy":"225"},{"ruleId":"226","replacedBy":"227"},{"ruleId":"228","severity":1,"message":"229","line":1,"column":28,"nodeType":"230","messageId":"231","endLine":1,"endColumn":36},{"ruleId":"232","severity":1,"message":"233","line":39,"column":6,"nodeType":"234","endLine":39,"endColumn":8,"suggestions":"235"},{"ruleId":"228","severity":1,"message":"236","line":1,"column":17,"nodeType":"230","messageId":"231","endLine":1,"endColumn":26},{"ruleId":"228","severity":1,"message":"229","line":1,"column":28,"nodeType":"230","messageId":"231","endLine":1,"endColumn":36},{"ruleId":"228","severity":1,"message":"237","line":9,"column":12,"nodeType":"230","messageId":"231","endLine":9,"endColumn":22},{"ruleId":"228","severity":1,"message":"238","line":9,"column":24,"nodeType":"230","messageId":"231","endLine":9,"endColumn":37},{"ruleId":"232","severity":1,"message":"239","line":21,"column":8,"nodeType":"234","endLine":21,"endColumn":10,"suggestions":"240"},{"ruleId":"232","severity":1,"message":"233","line":20,"column":8,"nodeType":"234","endLine":20,"endColumn":10,"suggestions":"241"},{"ruleId":"232","severity":1,"message":"242","line":29,"column":9,"nodeType":"234","endLine":29,"endColumn":11,"suggestions":"243"},{"ruleId":"228","severity":1,"message":"244","line":3,"column":8,"nodeType":"230","messageId":"231","endLine":3,"endColumn":15},{"ruleId":"245","severity":1,"message":"246","line":12,"column":17,"nodeType":"247","endLine":12,"endColumn":114},{"ruleId":"245","severity":1,"message":"246","line":23,"column":21,"nodeType":"247","endLine":23,"endColumn":97},{"ruleId":"228","severity":1,"message":"248","line":2,"column":10,"nodeType":"230","messageId":"231","endLine":2,"endColumn":14},{"ruleId":"228","severity":1,"message":"249","line":4,"column":8,"nodeType":"230","messageId":"231","endLine":4,"endColumn":13},{"ruleId":"228","severity":1,"message":"249","line":1,"column":8,"nodeType":"230","messageId":"231","endLine":1,"endColumn":13},{"ruleId":"228","severity":1,"message":"250","line":12,"column":17,"nodeType":"230","messageId":"231","endLine":12,"endColumn":25},{"ruleId":"228","severity":1,"message":"251","line":7,"column":10,"nodeType":"230","messageId":"231","endLine":7,"endColumn":23},{"ruleId":"228","severity":1,"message":"249","line":2,"column":8,"nodeType":"230","messageId":"231","endLine":2,"endColumn":13},{"ruleId":"228","severity":1,"message":"252","line":13,"column":12,"nodeType":"230","messageId":"231","endLine":13,"endColumn":17},{"ruleId":"228","severity":1,"message":"253","line":13,"column":19,"nodeType":"230","messageId":"231","endLine":13,"endColumn":27},{"ruleId":"228","severity":1,"message":"254","line":18,"column":11,"nodeType":"230","messageId":"231","endLine":18,"endColumn":23},{"ruleId":"245","severity":1,"message":"246","line":34,"column":21,"nodeType":"247","endLine":34,"endColumn":60},{"ruleId":"245","severity":1,"message":"246","line":120,"column":21,"nodeType":"247","endLine":120,"endColumn":49},{"ruleId":"245","severity":1,"message":"246","line":121,"column":21,"nodeType":"247","endLine":121,"endColumn":49},{"ruleId":"245","severity":1,"message":"246","line":122,"column":21,"nodeType":"247","endLine":122,"endColumn":49},{"ruleId":"228","severity":1,"message":"255","line":2,"column":25,"nodeType":"230","messageId":"231","endLine":2,"endColumn":33},{"ruleId":"228","severity":1,"message":"256","line":1,"column":17,"nodeType":"230","messageId":"231","endLine":1,"endColumn":27},{"ruleId":"228","severity":1,"message":"257","line":37,"column":11,"nodeType":"230","messageId":"231","endLine":37,"endColumn":15},{"ruleId":"245","severity":1,"message":"246","line":8,"column":13,"nodeType":"247","endLine":8,"endColumn":41},{"ruleId":"245","severity":1,"message":"246","line":9,"column":13,"nodeType":"247","endLine":9,"endColumn":41},{"ruleId":"258","severity":1,"message":"259","line":35,"column":1,"nodeType":"260","endLine":52,"endColumn":2},{"ruleId":"228","severity":1,"message":"261","line":19,"column":7,"nodeType":"230","messageId":"231","endLine":19,"endColumn":20},{"ruleId":"228","severity":1,"message":"262","line":26,"column":7,"nodeType":"230","messageId":"231","endLine":26,"endColumn":22},{"ruleId":"228","severity":1,"message":"263","line":33,"column":7,"nodeType":"230","messageId":"231","endLine":33,"endColumn":22},{"ruleId":"258","severity":1,"message":"259","line":43,"column":1,"nodeType":"260","endLine":61,"endColumn":2},{"ruleId":"258","severity":1,"message":"259","line":42,"column":1,"nodeType":"260","endLine":65,"endColumn":2},{"ruleId":"258","severity":1,"message":"259","line":54,"column":1,"nodeType":"260","endLine":89,"endColumn":2},"no-native-reassign",["264"],"no-negated-in-lhs",["265"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["266"],"'useEffect' is defined but never used.","'userAuthID' is assigned a value but never used.","'setUserAuthID' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["267"],["268"],"React Hook useEffect has missing dependencies: 'props.match.params.id' and 'updates'. Either include them or remove the dependency array.",["269"],"'banner1' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'Link' is defined but never used.","'axios' is defined but never used.","'setError' is assigned a value but never used.","'checkPassword' is assigned a value but never used.","'files' is assigned a value but never used.","'setFiles' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'Redirect' is defined but never used.","'useContext' is defined but never used.","'data' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'postListAdded' is assigned a value but never used.","'postListRemoved' is assigned a value but never used.","'postListUpdated' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"270","fix":"271"},{"desc":"272","fix":"273"},{"desc":"270","fix":"274"},{"desc":"275","fix":"276"},"Update the dependencies array to be: [props]",{"range":"277","text":"278"},"Update the dependencies array to be: [props.history]",{"range":"279","text":"280"},{"range":"281","text":"278"},"Update the dependencies array to be: [props.match.params.id, updates]",{"range":"282","text":"283"},[1265,1267],"[props]",[674,676],"[props.history]",[822,824],[768,770],"[props.match.params.id, updates]"]